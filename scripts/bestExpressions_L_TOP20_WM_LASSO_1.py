from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.02701889625e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0301787970119 * v3 + 0.069744867139 * v4 + 0.0282085123772 * v9 + 0.0 * v11 + 0.0 * v12 + 0.130742164195 * v13 + 0.0 * v14 + 0.171275041323 * v15 + 0.0739972436219 * v16 + 0.357053992458 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0799679337824 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.23202452724e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.170882014117 * v5 + 0.120935806143 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.226648242552 * v17 + 0.0 * v18 + 0.080845226065 * v20 + 0.146408111105 * v21 + 0.112578547019 * v22 + 0.10036988357 * v24 + 0.0317819656979 * v25 + 0.0705662908704 * v28
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17470272022e-13 * 1 + -0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.186185695782 * v5 + -0.0 * v8 + 0.0625300166373 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.152964725307 * v15 + 0.224851472022 * v16 + 0.0 * v18 + 0.222459857155 * v19 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.000214287411506 * v25 + 0.0 * v28
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43309358619e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0206761418805 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.249543440077 * v17 + 0.0934524827705 * v18 + 0.165711375457 * v20 + 0.0 * v21 + 0.363190457382 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + -0.0 * v28
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26781151443e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0523481639276 * v4 + 0.096010568775 * v5 + 0.00889599662399 * v6 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v17 + 0.0 * v18 + 0.145055401394 * v20 + 0.118381630733 * v21 + 0.0 * v22 + 0.0 * v24 + 0.253349837764 * v25 + 0.0 * v26 + 0.239643373771 * v27 + 0.0191805996752 * v28
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.00246596e-14 * 1 + 0.0 * v0 + 0.00745222689954 * v1 + 0.0 * v4 + 0.146565068704 * v5 + -0.0 * v8 + 0.125632048366 * v10 + 0.0 * v11 + -0.0 * v12 + 0.06581957258 * v15 + 0.0 * v16 + 0.243231600237 * v17 + 0.0305076406777 * v18 + 0.0 * v20 + 0.0 * v21 + 0.078594625488 * v22 + 0.246163299181 * v23 + 0.00777145405047 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65684702577e-13 * 1 + 0.182256529804 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0668044298432 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0585936110009 * v15 + 0.0 * v17 + 0.0 * v18 + 0.149873429695 * v20 + 0.302613005259 * v21 + 0.161643905696 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90739057607e-14 * 1 + 0.0420794484775 * v1 + 0.429347719219 * v2 + 0.0 * v6 + 0.0423133964166 * v7 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0141290342019 * v17 + 0.0 * v18 + 0.0 * v19 + 0.287175097592 * v20 + 0.112490346794 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705156746e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.216457104277 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0783018312524 * v9 + 0.0859848607371 * v11 + 0.0 * v12 + 0.155463302089 * v15 + 0.0 * v16 + 0.0769249645467 * v17 + 0.0 * v18 + 0.0487160634616 * v20 + 0.204819970092 * v21 + 0.0762332176232 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v28
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27640228465e-13 * 1 + 0.0 * v0 + 0.00217169057557 * v1 + 0.0 * v2 + 0.0 * v3 + 0.221921881834 * v4 + 0.0 * v5 + 0.0736723580641 * v7 + 0.041389788259 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0141699150815 * v16 + 0.0 * v17 + 0.0 * v18 + 0.046880722945 * v20 + 0.325252558964 * v21 + 0.168722461913 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0402708509293 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.39633200158e-14 * 1 + 0.028245385813 * v0 + 0.091397056848 * v1 + 0.0527400530847 * v2 + 0.0 * v4 + 0.146379630555 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0699594586594 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0440310854776 * v19 + 0.0 * v20 + 0.230450002572 * v21 + 0.226337131237 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.037987820297 * v28
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.2142448977e-13 * 1 + 0.129482376836 * v1 + 0.0139261879453 * v2 + 0.0 * v3 + 0.0820233173147 * v7 + 0.0 * v9 + 0.0890292203349 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0232141457182 * v15 + 0.0 * v16 + 0.0386263030202 * v17 + 0.0882742216575 * v19 + 0.183514728156 * v20 + 0.137098267294 * v21 + 0.0805599791646 * v22 + 0.0549888101888 * v23 + 0.0720286153955 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.78751968885e-15 * 1 + 0.0 * v2 + 0.152738312455 * v3 + 0.0 * v4 + -0.0 * v5 + -0.0 * v9 + 0.0374361372078 * v10 + -0.0 * v11 + -0.0 * v13 + -0.0 * v14 + -0.0205796681458 * v15 + -0.0 * v16 + 0.496146902575 * v17 + -0.0 * v19 + 0.123974354023 * v20 + -0.0 * v22 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v28
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19767717769e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.00764389213177 * v4 + 0.332648802628 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + 0.288533562959 * v15 + 0.0 * v17 + 0.0 * v18 + 0.135841153217 * v20 + 0.0393043207162 * v21 + 0.0530095447148 * v22 + 0.106735933166 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14148368413e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v4 + 0.106838545561 * v5 + 0.0 * v8 + 0.226657960714 * v9 + 0.0 * v11 + 0.0 * v12 + 0.359589691424 * v15 + 0.0992957445874 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0514482554574 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.21180142726e-13 * 1 + 0.123472870359 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0202932260237 * v5 + 0.136011461591 * v7 + 0.0392347366697 * v9 + 0.116465279364 * v10 + 0.0123612212258 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v16 + 0.0407771788588 * v20 + 0.159089390914 * v22 + 0.0663578277941 * v23 + 0.155891819751 * v25 + 0.0 * v26 + 0.0 * v27 + 0.136428840768 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97317498131e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + -0.0 * v13 + 0.0932151478595 * v15 + 0.305862333562 * v16 + 0.0 * v17 + 0.0348962067602 * v19 + 0.275719308308 * v21 + 0.179508112014 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v26 + 0.123033765429 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35544261953e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0402295029789 * v5 + 0.108331640364 * v7 + 0.0 * v8 + 0.275877961365 * v9 + 0.0 * v11 + 0.0282282524248 * v12 + 0.119808604057 * v15 + 0.00630007001249 * v17 + 0.0 * v18 + 0.213414408358 * v21 + 0.0 * v22 + 0.0637030249597 * v23 + 0.034713383341 * v24 + 0.0639810518188 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75895230851e-14 * 1 + 0.0755406349968 * v1 + 0.0 * v4 + 0.145939883164 * v5 + 0.164241465048 * v6 + 0.0 * v7 + 0.0 * v8 + 0.183600409247 * v11 + 0.0 * v14 + 0.0 * v16 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.147876827088 * v21 + 0.0 * v22 + 0.195372562368 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.00821099266339 * v28
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33978691557e-14 * 1 + 0.0350341375302 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0751534407349 * v5 + 0.0 * v7 + 0.0 * v8 + 0.110429328098 * v9 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0794556963275 * v20 + 0.365238909644 * v21 + 0.120713663513 * v22 + 0.13179625528 * v25 + 0.0 * v27 + 0.0170566873973 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18357766756e-14 * 1 + 0.0 * v0 + 0.0663101445147 * v2 + 0.0 * v3 + 0.0 * v4 + 0.102785976083 * v5 + 0.0256698579128 * v9 + 0.0877778995963 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v16 + 0.169353238898 * v17 + 0.0 * v19 + 0.130177934245 * v20 + 0.0121067777787 * v21 + 0.0511539192202 * v22 + 0.0 * v23 + 0.0130249200746 * v24 + 0.0417689694879 * v25 + 0.300237065102 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49134276824e-14 * 1 + 0.122953283847 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0838426695367 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0917222597748 * v9 + 0.0 * v13 + 0.148504987951 * v15 + 0.0 * v17 + 0.0 * v18 + 0.137835777055 * v19 + 0.288345162452 * v20 + 0.0549633725845 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.09504597251e-13 * 1 + 0.0481740330473 * v1 + 0.0983859988905 * v4 + 0.0690415884606 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.207753997329 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v18 + 0.179058391995 * v20 + 0.154515891396 * v21 + 0.188974138339 * v22 + 0.0185555803885 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0187893439302 * v27
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.2177275166e-15 * 1 + 0.0 * v0 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0632569732191 * v8 + 0.0 * v10 + 0.0189702183987 * v11 + -0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.253210181271 * v17 + 0.0 * v19 + 0.022896030824 * v20 + 0.0 * v21 + 0.562939026476 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.59922172419e-14 * 1 + 0.0 * v0 + 0.219927389097 * v1 + 0.0 * v3 + 0.01894394327 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0325672283388 * v15 + 0.0 * v16 + 0.226885795505 * v17 + 0.0 * v18 + 0.0 * v19 + 0.00946900611628 * v20 + 0.01843878002 * v21 + 0.105470105972 * v22 + 0.213704797828 * v23 + 0.043529993025 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05064777395e-13 * 1 + 0.0 * v0 + 0.0367442331887 * v1 + 0.0 * v2 + 0.0 * v4 + 0.329071028465 * v5 + 0.168709926997 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0710269280859 * v20 + 0.192148529173 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.00749991868797 * v25 + 0.0 * v27 + 0.131612524919 * v28
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49504461996e-13 * 1 + 0.0330242831777 * v1 + 0.0 * v3 + 0.0101401910151 * v4 + 0.0 * v5 + 0.0 * v8 + 0.253203858826 * v9 + 0.0489252640272 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0253492550049 * v15 + 0.0384628721932 * v16 + 0.0508460295832 * v17 + 0.0 * v19 + 0.0 * v20 + 0.221302583503 * v21 + 0.0408749922024 * v22 + 0.038643398617 * v23 + 0.0 * v25 + 0.269606163014 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85698265016e-14 * 1 + 0.0329626706424 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0019769400538 * v4 + 0.24759259829 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.13008652494 * v20 + 0.237187388902 * v21 + 0.0 * v22 + 0.0 * v24 + 0.185545394031 * v25 + 0.0961798735053 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.42311829958e-13 * 1 + 0.1179786954 * v1 + 0.0106474969321 * v3 + 0.123286799848 * v4 + 0.156320853955 * v5 + 0.0 * v7 + 0.0 * v8 + 0.125917382409 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0297330376202 * v13 + 0.00835562616104 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.262392880722 * v21 + 0.0704112242236 * v22 + 0.0 * v25 + 0.0501628702886 * v27 + 0.0 * v28
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11408754354e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0259450257778 * v9 + 0.24353354817 * v11 + 0.0 * v12 + 0.0882739441015 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0204268865818 * v19 + 0.235187677215 * v21 + 0.172828582758 * v22 + 0.0 * v23 + 0.0 * v25 + 0.141553708631 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.30628553497e-13 * 1 + 0.121592406646 * v0 + 0.0 * v1 + 0.0727918693132 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0516005524155 * v9 + 0.00219461075978 * v11 + 0.0 * v12 + 0.0415004600955 * v13 + 0.0119668687461 * v15 + 0.0524208243961 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0222468386197 * v20 + 0.415293072636 * v21 + 0.143300202858 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.3981578838e-13 * 1 + 0.0 * v1 + 0.0495782621634 * v2 + 0.0 * v3 + 0.0428196871226 * v4 + 0.256913250688 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0162519173016 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.105613913477 * v20 + 0.311085487988 * v21 + 0.150391037615 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68078131908e-14 * 1 + 0.0600757024279 * v1 + 0.0194123338927 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.21408789873 * v9 + 0.0351595549345 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0263632679692 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.237130155716 * v21 + 0.226116077691 * v22 + 0.136069563561 * v25 + 0.0 * v28
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.1664661728e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + -0.262903565844 * v6 + 0.0 * v7 + -0.0 * v13 + 0.0 * v14 + 0.0200696663127 * v15 + -0.0894969232077 * v16 + 0.0 * v17 + -0.0 * v18 + 0.247302821746 * v20 + 0.0595823255445 * v21 + 0.300936017464 * v22 + -0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.84899156507e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.240099472265 * v5 + 0.0 * v6 + 0.0980759006625 * v7 + 0.12348377323 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.159698417663 * v20 + 0.0334861598115 * v21 + 0.292482958528 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.1638558773e-13 * 1 + 0.309142890355 * v0 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.372446343117 * v6 + 0.0 * v8 + 0.0 * v9 + -0.0 * v14 + 0.0 * v16 + 0.137103874107 * v17 + -0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + 0.197217118268 * v22 + 0.0 * v23 + 0.0 * v24 + 0.17616633287 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.29367603656e-14 * 1 + 0.0279209692551 * v0 + 0.0136609440485 * v1 + 0.0 * v2 + 0.11131902847 * v3 + 0.0519782806347 * v4 + 0.00609731791722 * v5 + 0.0 * v8 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0589305706507 * v16 + 0.0 * v17 + 0.0 * v18 + 0.167018766834 * v20 + 0.378504274451 * v21 + 0.0 * v23 + 0.0 * v24 + 0.028750679068 * v25 + 0.172076805308 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.72186709817e-14 * 1 + 0.132092363034 * v1 + 0.0 * v3 + 0.0 * v4 + 0.299911430977 * v5 + 0.0 * v7 + 0.0354114836042 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0433513426395 * v16 + 0.0 * v17 + 0.0932972962748 * v19 + 0.0 * v20 + 0.0549737233337 * v21 + 0.208815272341 * v22 + 0.0189841904524 * v25 + 0.030655107186 * v27 + 0.0505095316385 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12748381379e-13 * 1 + 0.00575011322871 * v0 + 0.129489825793 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.181731657864 * v9 + 0.00621074590425 * v11 + 0.0 * v13 + 0.246445837984 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0593708402951 * v20 + 0.219860367134 * v21 + 0.0 * v25 + 0.0 * v27 + 0.06680548719 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25239682465e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.234633535652 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.159352720186 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.00370432758884 * v16 + 0.0 * v17 + 0.0537130037431 * v19 + 0.0 * v20 + 0.287639286531 * v21 + 0.121321128119 * v22 + 0.0886924095515 * v26 + 0.0 * v27 + 0.0451381979715 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
