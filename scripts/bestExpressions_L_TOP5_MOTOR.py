from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.775670146e-14 * 1 + 0.240866609643 * v7 + 0.258158121061 * v11 + 0.309412049666 * v15 + 0.269912363565 * v16
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.98351447519e-14 * 1 + 0.231593858477 * v5 + 0.227271856037 * v7 + 0.188076042063 * v17 + 0.302298164527 * v22
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.92771457405e-14 * 1 + 0.25023841194 * v1 + 0.306135506218 * v5 + 0.128608136844 * v15 + 0.34311411035 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.66243418786e-14 * 1 + 0.0887627095566 * v1 + 0.221874418895 * v7 + 0.394329972248 * v17 + 0.269474060699 * v23
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.87276639005e-14 * 1 + 0.323781045564 * v3 + 0.347341426853 * v21 + 0.265443624254 * v22 + 0.0672839332155 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.86120355676e-14 * 1 + 0.536985955624 * v1 + 0.302994333603 * v5 + 0.232832971077 * v17 + -0.0638231047122 * v27
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.22264292096e-13 * 1 + 0.305257396636 * v5 + 0.382063031105 * v21 + 0.331812115441 * v22 + 0.0434368543083 * v23
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.88642637369e-14 * 1 + 0.203728387594 * v13 + 0.214112021156 * v17 + 0.331818635557 * v20 + 0.193107337646 * v27
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.81868490298e-14 * 1 + -0.0630890849248 * v7 + 0.428415718477 * v11 + 0.313229158681 * v21 + 0.267386656684 * v22
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.72661341183e-14 * 1 + 0.588776016333 * v5 + 0.294860457574 * v7 + -0.247575132292 * v8 + 0.402943051967 * v21
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.64183560337e-14 * 1 + 0.204234949199 * v1 + 0.316282497985 * v5 + 0.298004925229 * v9 + 0.222931669628 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.23615090302e-14 * 1 + 0.484812147538 * v1 + 0.283707714583 * v5 + 0.270838610687 * v20 + -0.060440215542 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.05493052112e-14 * 1 + 0.406387032545 * v5 + 0.200824945222 * v7 + 0.299263932793 * v20 + 0.132528984439 * v21
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.36537465715e-15 * 1 + 0.259126515362 * v4 + 0.391449030879 * v5 + 0.282911480905 * v21 + 0.175498522666 * v22
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.07807782314e-14 * 1 + 0.23515456629 * v1 + 0.224308649543 * v5 + 0.0980354768324 * v15 + 0.425406503512 * v21
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.9171529789e-14 * 1 + 0.420764751353 * v2 + 0.0836322558699 * v10 + 0.228552279459 * v16 + 0.170092109835 * v25
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60933367888e-13 * 1 + 0.207730121068 * v4 + 0.194452378512 * v16 + 0.387484335144 * v21 + 0.21975722185 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84212147341e-13 * 1 + 0.268386504439 * v1 + 0.383458496742 * v5 + 0.186719418174 * v7 + 0.160350572125 * v21
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.53267561672e-13 * 1 + 0.389122826152 * v1 + 0.237655579943 * v5 + 0.223736396723 * v7 + 0.132432448996 * v9
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.43144265413e-15 * 1 + 0.0673524491085 * v1 + 0.385491295203 * v5 + 0.32565997692 * v9 + 0.250215321902 * v21
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.34396985678e-13 * 1 + 0.113887810309 * v3 + 0.309638293256 * v11 + 0.237368099447 * v22 + 0.36047889122 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.0017900676e-14 * 1 + 0.125582519218 * v4 + 0.360083185557 * v22 + 0.285282374323 * v25 + 0.239082339801 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.7560691796e-14 * 1 + 0.193104839856 * v1 + 0.221544676725 * v5 + 0.273702525345 * v9 + 0.337167421693 * v11
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.35079472534e-13 * 1 + 0.275196081444 * v5 + 0.113635606219 * v8 + 0.243807404245 * v22 + 0.415906689658 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.70517257828e-13 * 1 + 0.191389285345 * v1 + 0.0561155086911 * v15 + 0.40075934262 * v17 + 0.316723390229 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.66325079747e-14 * 1 + 0.173281907741 * v1 + 0.46553692358 * v5 + 0.117102290389 * v7 + 0.290095846737 * v21
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.18808590016e-13 * 1 + 0.539979386459 * v5 + 0.0986146251815 * v7 + 0.297644089009 * v21 + 0.0584281103581 * v25
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.95183848978e-14 * 1 + 0.209850367047 * v3 + 0.374073236489 * v5 + 0.0771674338515 * v18 + 0.317850025164 * v25
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.6595419796e-14 * 1 + 0.385783847753 * v1 + 0.383575979726 * v5 + -0.0896575308974 * v8 + 0.386146766393 * v22
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2779018317e-13 * 1 + 0.322540576564 * v5 + 0.242681061012 * v7 + 0.116378127542 * v17 + 0.28615355789 * v21
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.06983574668e-13 * 1 + 0.381873904518 * v5 + 0.148566856772 * v7 + 0.228641903693 * v15 + 0.288229411828 * v21
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.8268303358e-14 * 1 + 0.14406850058 * v7 + 0.372375714038 * v13 + 0.338148589299 * v20 + 0.132272071443 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.05305092024e-14 * 1 + 0.241594226759 * v5 + 0.364522089586 * v9 + 0.158099264396 * v11 + 0.306871580179 * v21
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.78632820475e-13 * 1 + 0.365063162012 * v5 + -0.554362345024 * v6 + 0.0357016664386 * v9 + 0.268887435129 * v22
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.47423870128e-13 * 1 + 0.259163628553 * v4 + 0.704046369545 * v5 + 0.0901654986587 * v20 + -0.0761105290887 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.59351487232e-14 * 1 + 0.485573313421 * v5 + 0.07813261805 * v15 + 0.592882337997 * v17 + -0.127155902101 * v21
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.27595126685e-14 * 1 + 0.316887957725 * v1 + 0.258026034846 * v5 + 0.136855987201 * v20 + 0.268601854278 * v21
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.93031006656e-14 * 1 + 0.0795290862862 * v0 + 0.440145975769 * v5 + 0.229700471056 * v9 + 0.273481298317 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.32083079541e-14 * 1 + 0.226751942517 * v1 + 0.358053587116 * v5 + 0.232079899505 * v11 + 0.169921820264 * v15
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.12358578971e-14 * 1 + 0.0894897199761 * v4 + 0.0655604000962 * v13 + 0.466557055332 * v17 + 0.372651893561 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
