from math import *

def funcL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26154735077e-14 * 1 + 0.0 * v0 + 0.228298820866 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0177762749624 * v11 + 0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.372454242803 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.00991946962178 * v27 + 0.232803898323 * v28
def funcL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00472544736e-13 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v5 + -0.0 * v6 + 0.0200043852402 * v7 + 0.0 * v8 + -0.0 * v9 + 0.0 * v11 + -0.0 * v14 + -0.0 * v15 + 0.36655645216 * v17 + 0.315159442782 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v25 + 0.135874283464 * v27 + -0.0 * v28
def funcL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.35701098167e-14 * 1 + 0.0 * v0 + 0.0241334479823 * v1 + -0.0 * v2 + -0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0272568666032 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.167236619285 * v17 + 0.376470530829 * v18 + 0.109168502472 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.183127138155 * v26 + 0.0 * v27 + 0.228848367522 * v28
def funcL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.19435281725e-14 * 1 + 0.0 * v0 + 0.3459356531 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.220800457088 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0629429661727 * v13 + 0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.168288536049 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0179244281742 * v21 + 0.0407863172967 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0623664173158 * v27 + 0.0 * v28
def funcL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.49934606971e-14 * 1 + 0.098259198641 * v0 + 0.0241735434482 * v1 + -0.0 * v3 + -0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0658308226555 * v9 + 0.132094988485 * v11 + -0.0 * v12 + 0.0 * v13 + 0.113283297431 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.330750971925 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + -0.159315621943 * v26 + 0.0609041205778 * v27 + 0.0 * v28
def funcL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.97016619056e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0644273703092 * v6 + 0.251412245951 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v13 + 0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.318982241965 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0234114119652 * v25 + -0.0 * v26 + 0.116717654366 * v27 + 0.141607619546 * v28
def funcL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.98226751946e-13 * 1 + 0.0 * v0 + 0.119480073219 * v1 + -0.0 * v2 + -0.00840966358164 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0583841358284 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.401084704718 * v17 + 0.0702597635171 * v18 + 0.0208240830904 * v20 + 0.168211523385 * v21 + -0.0 * v22 + -0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.41319579204e-14 * 1 + 0.0 * v0 + 0.152878379735 * v1 + 0.0 * v2 + 0.0 * v4 + -0.0 * v5 + -0.0 * v6 + 0.168090391015 * v7 + 0.101868767858 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.209226006903 * v17 + 0.0414448601677 * v18 + 0.0 * v20 + 0.168622461904 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0333665427849 * v24 + -0.0 * v26 + 0.0417477728266 * v27 + 0.0 * v28
def funcL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.13550195034e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.123397445854 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v14 + -0.0 * v15 + 0.142403199185 * v16 + 0.289484789356 * v17 + 0.044824695512 * v18 + 0.0 * v19 + 0.0 * v20 + 0.051278125504 * v21 + 0.0 * v22 + 0.0 * v23 + 0.226805451218 * v24 + -0.0 * v25 + -0.0 * v27 + 0.0 * v28
def funcL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.45479195857e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.060321869337 * v9 + 0.0 * v10 + 0.0 * v11 + 0.265632532142 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.425094975759 * v17 + 0.0292220471973 * v18 + 0.0 * v20 + 0.090795981747 * v21 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.27863375409e-14 * 1 + -0.0 * v0 + -0.0 * v1 + -0.140464786869 * v5 + -0.0 * v8 + 0.322796207713 * v9 + 0.0 * v10 + -0.0671329027789 * v14 + -0.285121517675 * v15 + 0.511461940208 * v17 + -0.0 * v20 + -0.0 * v21 + -0.236736570139 * v22 + -0.0 * v25 + -0.0 * v26
def funcL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.51199778154e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.188857101394 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.115125769879 * v14 + 0.0489765006248 * v15 + 0.0 * v16 + 0.489719372978 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + -0.0 * v27 + 0.0566052290767 * v28
def funcL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.37434943373e-14 * 1 + 0.0 * v0 + -0.0 * v1 + -0.0 * v2 + -0.0 * v4 + -0.00453478946472 * v5 + -0.0 * v6 + 0.164092941204 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.228260537529 * v18 + 0.0 * v20 + 0.0910131541193 * v21 + 0.0 * v23 + -0.0 * v24 + 0.220396141206 * v27 + 0.258432717192 * v28
def funcL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.74845381373e-13 * 1 + 0.0659537314532 * v0 + 0.0 * v1 + -0.0 * v4 + 0.00888345921623 * v8 + 0.0 * v9 + 0.100959530722 * v10 + 0.0570662284532 * v11 + 0.0 * v12 + -0.0 * v13 + -0.0325285627847 * v15 + 0.0 * v16 + 0.278119741216 * v17 + 0.0 * v18 + 0.0 * v20 + 0.138285175501 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v25 + 0.311611552231 * v27 + 0.0395894203542 * v28
def funcL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56129688775e-13 * 1 + 0.0 * v0 + 0.0950279223079 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.304092641779 * v17 + 0.0 * v18 + 0.0 * v19 + 0.060370881642 * v20 + 0.229374127175 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.246661849882 * v28
def funcL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.75359273575e-14 * 1 + -0.0 * v0 + 0.0963562970643 * v1 + 0.0 * v6 + 0.195896509225 * v7 + -0.0 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v15 + 0.292443167482 * v17 + 0.153325979524 * v18 + 0.129842009462 * v20 + 0.105302148355 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05084126063e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.137213524016 * v8 + 0.0867466079381 * v10 + 0.0314008062851 * v11 + 0.0 * v12 + -0.0280315454395 * v13 + 0.0 * v15 + 0.0193385881241 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.210349543681 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.2862126536 * v27
def funcL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.45394544263e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v2 + -0.0215259846155 * v3 + -0.0 * v4 + -0.0 * v5 + 0.105309102083 * v7 + 0.161010914043 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.227693874371 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.184611253144 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0306379363587 * v27 + 0.254986941299 * v28
def funcL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.5210626416e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0228702538489 * v2 + -0.0 * v3 + -0.0524376196325 * v5 + 0.206051869315 * v6 + 0.049653980998 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.491808812782 * v17 + 0.170889432164 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0458563187809 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.41763815667e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.493145769043 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.243072808589 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.118773794929 * v27 + 0.025046096625 * v28
def funcL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26238550189e-13 * 1 + 0.00900610350598 * v0 + 0.0516680523539 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.483461355951 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0246521400028 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0671098753724 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v26 + 0.255270616797 * v27 + 0.128033226155 * v28
def funcL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.72359472812e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + -0.0 * v6 + 0.0670191046147 * v7 + 0.0 * v8 + 0.0529932553082 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.183805066267 * v15 + 0.0 * v16 + 0.174143178067 * v17 + 0.19958680113 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.201837534956 * v27 + 0.0 * v28
def funcL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.49898695523e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + 0.0 * v16 + 0.755964463801 * v17 + 0.00790254986887 * v18 + 0.0437732010027 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.40265798851e-14 * 1 + 0.0 * v0 + 0.162213084564 * v1 + -0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.445902703985 * v8 + 0.0 * v10 + 0.0315299048609 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.16546508381 * v17 + 0.0720529961192 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.00163701917158 * v25 + 0.0272056349789 * v27 + 0.0 * v28
def funcL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.45879581939e-13 * 1 + 0.0 * v0 + 0.172528078568 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0162034926277 * v6 + 0.136471554854 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + 0.0 * v16 + 0.0873830083674 * v17 + 0.0 * v18 + 0.0 * v19 + 0.116628203895 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.02096830482 * v27 + 0.355229117986 * v28
def funcL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.15495474252e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0567818946659 * v7 + 0.354997279802 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.351775673886 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0447860375421 * v23 + -0.0429966434103 * v25 + 0.0 * v27 + 0.0679733742526 * v28
def funcL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.10668289706e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0628336854094 * v7 + 0.0 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0962153293857 * v11 + 0.0 * v12 + -0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.0714939176625 * v17 + 0.172342798356 * v18 + -0.0 * v19 + 0.282792110835 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.268983392753 * v27 + 0.0 * v28
def funcL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12941076864e-14 * 1 + 0.0 * v0 + 0.146404993026 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.00324089809473 * v7 + 0.12793066332 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.221235214238 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0343324873889 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.261139013453 * v27 + 0.116043728401 * v28
def funcL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.99516001253e-13 * 1 + 0.0 * v0 + 0.0852466940815 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.111993598937 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v15 + 0.0 * v16 + 0.227076229948 * v17 + 0.0 * v18 + -0.0903687510542 * v19 + 0.24416466936 * v20 + 0.0 * v21 + 0.0325180943562 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.20094547515 * v28
def funcL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.80299616982e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.364877678575 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.315066292115 * v17 + 0.186217277424 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + -0.00335054549831 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.12701792109e-14 * 1 + 0.0 * v0 + 0.0105686919011 * v1 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0814735834417 * v7 + 0.0148095772261 * v8 + -0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v15 + -0.0 * v16 + 0.254029819115 * v17 + 0.0320226588455 * v18 + 0.325658333845 * v20 + 0.0644663594518 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v27 + 0.0325609032023 * v28
def funcL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.68561194741e-15 * 1 + 0.0 * v0 + 0.114792423687 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.381568295073 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0647956661219 * v15 + 0.0 * v16 + 0.316228038707 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161293400774 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.69404541799e-13 * 1 + 0.140760875616 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00932059412008 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0475550263102 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.482245425276 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0346040048397 * v21 + 0.0 * v22 + 0.0149918326773 * v23 + 0.0 * v24 + -0.0 * v25 + -0.0 * v26 + 0.0482026304812 * v27 + 0.143373768541 * v28
def funcL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.70923302617e-14 * 1 + 0.0839116398249 * v1 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.056159810263 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + -0.137447914837 * v14 + 0.0 * v15 + 0.0951099456825 * v16 + 0.218699332496 * v17 + 0.0 * v18 + 0.317684862397 * v20 + 0.11396888217 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.00370422511624 * v27
def funcL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.28879036093e-14 * 1 + 0.0 * v0 + 0.00476459088828 * v1 + 0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.265879709629 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.615368011733 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0443373805812 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36445409451e-13 * 1 + 0.0 * v0 + 0.134727067907 * v1 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.268094270101 * v17 + 0.308073349909 * v18 + 0.088086381364 * v20 + 0.0771069131475 * v21 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21368536259e-13 * 1 + 0.0 * v0 + 0.0707598119253 * v1 + -0.0 * v2 + -0.0739086295102 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0933039898822 * v7 + 0.420034244769 * v8 + 0.0 * v9 + 0.0 * v10 + 0.113856831357 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.227770890326 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0299504375487 * v28
def funcL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.40352817027e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.185598950894 * v7 + 0.138549073747 * v8 + 0.0528375233177 * v9 + -0.0 * v10 + 0.109764213175 * v11 + -0.0 * v12 + 0.189079686132 * v16 + 0.0 * v17 + 0.0838309348055 * v18 + 0.0 * v20 + 0.0621603611535 * v21 + -0.0 * v22 + -0.0 * v23 + -0.329417236776 * v26 + 0.0504181587574 * v27
def funcL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.91554389097e-15 * 1 + 0.00261127064517 * v0 + 0.0177719361626 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.111360999776 * v10 + 0.0839975500555 * v11 + 0.0753913310412 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.213819037103 * v17 + 0.0 * v18 + 0.287705649949 * v20 + 0.000482523589244 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0723801069135 * v25 + 0.0926018010003 * v27 + 0.12487914127 * v28
def funcL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.9075092839e-14 * 1 + -0.0 * v0 + 0.160668670441 * v1 + -0.0942807225528 * v3 + -0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + -0.0 * v10 + 0.143693530847 * v11 + 0.0 * v15 + -0.0 * v16 + 0.167012924939 * v17 + 0.423638802282 * v18 + -0.235149522042 * v25 + 0.0 * v27
def funcL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.81318701046e-14 * 1 + 0.0255315787841 * v0 + 0.264810616964 * v1 + 0.0352852275328 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.159562992325 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.44660647276 * v17 + -0.0 * v18 + 0.0 * v20 + 0.0445650044346 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28

funcs = [funcL_100307,funcL_100408,funcL_101006,funcL_101107,funcL_101309,funcL_101410,funcL_101915,funcL_102008,funcL_102311,funcL_102816,funcL_103111,funcL_103414,funcL_103515,funcL_103818,funcL_104012,funcL_104820,funcL_105014,funcL_105115,funcL_105216,funcL_105923,funcL_106016,funcL_106319,funcL_106521,funcL_107321,funcL_107422,funcL_108121,funcL_108323,funcL_108525,funcL_108828,funcL_109123,funcL_109325,funcL_110411,funcL_111312,funcL_111413,funcL_111514,funcL_111716,funcL_113215,funcL_113619,funcL_113922,funcL_114419,funcL_114924,]

def getFuncs(): return funcs
