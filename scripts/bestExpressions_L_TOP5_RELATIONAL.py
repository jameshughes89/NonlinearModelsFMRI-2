from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.58942885827e-13 * 1 + 0.153447779969 * v1 + 0.372594125812 * v8 + 0.297229751482 * v17 + 0.157462832938 * v20
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.30880086492e-13 * 1 + 0.276772230279 * v1 + 0.0381318505466 * v8 + 0.307726623329 * v15 + 0.349485999395 * v17
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.54099153438e-14 * 1 + 0.0390777458376 * v15 + 0.408449975108 * v17 + 0.185776936056 * v18 + 0.293455981525 * v21
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.23543364503e-14 * 1 + -0.318580420188 * v4 + 0.486588452177 * v13 + 0.520555599513 * v17 + 0.308678600504 * v27
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36740078774e-13 * 1 + 0.371033982225 * v1 + 0.2325735633 * v8 + 0.191859641364 * v12 + 0.167091636775 * v25
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9717234141e-13 * 1 + 0.259231792466 * v4 + 0.00999928873119 * v8 + 0.379164620655 * v15 + 0.361911542871 * v17
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97976135299e-13 * 1 + 0.0519334644407 * v8 + 0.418387285565 * v13 + 0.333956572399 * v15 + 0.323685086042 * v17
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.05685426222e-14 * 1 + 0.290757060515 * v13 + 0.579835125603 * v17 + 0.0603432550922 * v18 + 0.000896964247386 * v21
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.78117511721e-14 * 1 + 0.344024208636 * v1 + 0.266351129488 * v6 + 0.555050239139 * v8 + -0.157798113748 * v23
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.1674165235e-14 * 1 + 0.741868351605 * v1 + 0.0752675210404 * v6 + -0.066063474883 * v8 + 0.227609155518 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.73320099164e-14 * 1 + 0.293315380075 * v15 + 0.296908062655 * v17 + 0.119990242029 * v21 + 0.246168272584 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.518457331e-14 * 1 + 0.359416926388 * v1 + 0.310241736942 * v4 + 0.229720482873 * v8 + 0.134513868401 * v15
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.83757126857e-14 * 1 + 0.238206820988 * v1 + 0.271064843312 * v15 + 0.298797437152 * v17 + 0.181211210583 * v20
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.97405842191e-15 * 1 + 0.0822197156732 * v1 + 0.551085545469 * v15 + 0.00683925899718 * v17 + 0.39803736401 * v27
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46757571767e-13 * 1 + 0.398449919035 * v8 + 0.31088405274 * v20 + 0.1884182745 * v22 + 0.057686980504 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.01243732264e-13 * 1 + 0.315491458812 * v1 + 0.00987046829561 * v8 + 0.476047337143 * v17 + 0.197028129996 * v21
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.84583728212e-14 * 1 + 0.0020366869242 * v4 + 0.230207448011 * v15 + 0.446073878826 * v17 + 0.329760985885 * v27
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.90155862051e-14 * 1 + 0.0376960560084 * v8 + 0.289026325033 * v12 + 0.252754525057 * v15 + 0.404988041129 * v17
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.16428853466e-14 * 1 + 0.139863292339 * v4 + 0.360354300114 * v6 + 0.378839021464 * v8 + 0.162711728016 * v27
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.6238285081e-14 * 1 + 0.267028266095 * v12 + 0.122839100676 * v15 + 0.226474935487 * v18 + 0.375227316605 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.85884197946e-14 * 1 + 0.242385928297 * v4 + 0.265784152966 * v15 + 0.153121603444 * v17 + 0.326045077624 * v25
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.11069661776e-13 * 1 + 0.331264327335 * v1 + 0.388506842867 * v15 + 0.103725450365 * v17 + 0.206970473896 * v27
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.90637208698e-14 * 1 + 0.00444722046968 * v1 + 0.429334102878 * v8 + 0.131562610509 * v20 + 0.42249029308 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.74060303344e-13 * 1 + -0.215021223638 * v8 + 0.168277022905 * v12 + 0.288820512224 * v15 + 0.739366097774 * v17
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.1825025984e-14 * 1 + 0.30747789098 * v8 + 0.274092174556 * v13 + 0.436210137394 * v15 + -0.0608435144899 * v17
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.31160494274e-14 * 1 + 0.188731032399 * v8 + 0.53900611325 * v17 + 0.0161915662965 * v20 + 0.308215402958 * v27
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.48131790617e-13 * 1 + 0.333869312575 * v1 + -0.0837957159329 * v9 + 0.464347678201 * v17 + 0.255577036543 * v27
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.81625845778e-14 * 1 + 0.578752494675 * v1 + 0.178070588367 * v4 + -0.267727365887 * v9 + 0.542814070852 * v13
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.24159725683e-14 * 1 + 0.395475887638 * v1 + 0.187197849192 * v4 + 0.229340784094 * v17 + 0.194152654228 * v20
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.15916440347e-13 * 1 + 0.0647236349546 * v1 + 0.0234196188113 * v4 + 0.523699486933 * v17 + 0.353370485567 * v27
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.82940138718e-14 * 1 + 0.18254404592 * v5 + 0.123681280546 * v12 + 0.522995570205 * v13 + 0.137108070999 * v21
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25207191262e-13 * 1 + 0.0819062689351 * v8 + 0.143708040587 * v15 + 0.580537381073 * v17 + 0.156688590525 * v18
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.45924184631e-13 * 1 + 0.177611028164 * v12 + 0.357609763944 * v15 + 0.263511980131 * v17 + 0.241357265563 * v27
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.2376531868e-14 * 1 + 0.284164266542 * v6 + 0.183688177391 * v14 + 0.300226480011 * v17 + 0.31593510616 * v27
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.45463795271e-13 * 1 + 0.106585750316 * v8 + 0.161901772176 * v15 + 0.608250564016 * v18 + 0.0968776407784 * v21
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.72639106671e-13 * 1 + 0.325701832174 * v1 + 0.164737164003 * v7 + 0.540576455147 * v15 + -0.0365967953958 * v17
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.07914508627e-13 * 1 + 0.241630372183 * v13 + 0.291963051574 * v17 + 0.0747075991277 * v20 + 0.301729904317 * v27
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.80885464017e-13 * 1 + 0.261316927523 * v1 + 0.204672345739 * v6 + 0.360225688639 * v15 + -0.111665616699 * v18
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.87209350355e-14 * 1 + 0.162417682022 * v1 + 0.199647298782 * v6 + 0.690807227718 * v15 + -0.0740048001949 * v18
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.11481270444e-15 * 1 + -0.00200495097243 * v8 + 0.191532925248 * v15 + 0.433236487658 * v17 + 0.348008955348 * v27

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
