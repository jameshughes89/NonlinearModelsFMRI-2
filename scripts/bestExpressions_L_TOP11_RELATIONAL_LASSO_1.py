from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65494227982e-13 * 1 + 0.0 * v0 + 0.132771736595 * v1 + 0.0 * v4 + 0.217546849065 * v8 + 0.193136382658 * v15 + 0.332462146605 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v23 + 0.0454634090618 * v28
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24870715809e-13 * 1 + 0.0366898686214 * v1 + 0.0 * v5 + 0.0 * v8 + 0.206496222855 * v13 + 0.390149871566 * v15 + 0.147663772077 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.1796604027 * v27
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.19068374612e-14 * 1 + -0.0 * v0 + 0.13723190083 * v1 + 0.0 * v8 + 0.0 * v13 + 0.0 * v15 + 0.342008569913 * v17 + 0.213278087425 * v18 + 0.160381190933 * v21 + 0.0 * v24 + -0.0 * v28
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.09358215846e-14 * 1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v7 + 0.310618744506 * v13 + 0.0215568426672 * v15 + 0.211066444735 * v17 + 0.0 * v19 + 0.112847180136 * v21 + 0.0 * v22 + 0.243029010067 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60319628481e-13 * 1 + 0.258550195367 * v1 + 0.0 * v2 + 0.171027614105 * v8 + 0.208606700029 * v11 + 0.214925057476 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0251793489888 * v25 + 0.0 * v27
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61141079889e-13 * 1 + 0.0249239360145 * v3 + 0.112546783231 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.087563543891 * v13 + 0.304320135088 * v15 + 0.356806085859 * v17 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81851251006e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0478824506345 * v8 + 0.0 * v12 + 0.358098425306 * v13 + 0.283426707427 * v15 + 0.296951846241 * v17 + 0.0 * v20 + 0.0 * v21
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13981726377e-14 * 1 + 0.148602926458 * v6 + 0.0 * v11 + 0.0 * v12 + 0.202867877734 * v13 + 0.0 * v15 + 0.50196819232 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.6931505129e-14 * 1 + 0.0227350250496 * v1 + 0.0633486288092 * v4 + 0.271077340829 * v6 + 0.0 * v7 + 0.337251799081 * v8 + 0.0 * v9 + 0.0468154570184 * v13 + 0.0 * v18 + 0.0 * v23 + 0.203320076731 * v27
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.90173648373e-14 * 1 + 0.663018146971 * v1 + 0.0 * v2 + 0.0483804181973 * v4 + 0.0317165383729 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.134756893151 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53314939495e-14 * 1 + 0.122516473001 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v13 + 0.201156285013 * v15 + 0.356440737887 * v17 + 0.0 * v20 + 0.040322218969 * v21 + 0.117229364941 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.41127171801e-14 * 1 + 0.220855758853 * v1 + 0.163495232892 * v4 + 0.276839042341 * v8 + 0.0266233935665 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0729463910987 * v15 + 0.0 * v18 + 0.0 * v21 + 0.16421661226 * v27
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.30249372975e-14 * 1 + 0.15618148483 * v1 + 0.0147562653887 * v4 + 0.0 * v6 + 0.0 * v7 + 0.108498576995 * v8 + 0.175539430181 * v15 + 0.2628880923 * v17 + 0.0273037760453 * v20 + 0.0 * v21 + 0.144234048638 * v27
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.7447375901e-15 * 1 + 0.0400176631134 * v1 + 0.015017823733 * v6 + 0.0 * v8 + 0.44453431036 * v15 + 0.0187354887747 * v17 + 0.0600070727005 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.342894896238 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4437653258e-13 * 1 + 0.186894752267 * v8 + 0.00940437666167 * v12 + 0.169533555279 * v13 + 0.01665263624 * v15 + 0.171436018407 * v20 + 0.0821948835843 * v22 + 0.0 * v23 + 0.00378904320795 * v24 + 0.213007865143 * v27 + 0.0725081051444 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.52738920631e-13 * 1 + 0.219498969087 * v1 + 0.0 * v4 + 0.154432984103 * v5 + 0.0 * v8 + 0.0 * v13 + 0.0 * v15 + 0.398809757337 * v17 + 0.0 * v20 + 0.135651680992 * v21 + 0.0 * v27
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.7527090442e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v8 + 0.0824520622896 * v13 + 0.161036656458 * v15 + 0.413884325394 * v17 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.243223979469 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.01655768309e-13 * 1 + 0.0 * v5 + 0.0661768920281 * v7 + 0.0251879740438 * v8 + 0.221481672764 * v12 + 0.164643370266 * v15 + 0.325475937286 * v17 + 0.0820327402988 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v28
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.4874503646e-14 * 1 + 0.0 * v2 + 0.0448659058494 * v4 + 0.0 * v5 + 0.308537328709 * v6 + 0.237163901587 * v8 + 0.0 * v12 + 0.100398487728 * v13 + 0.0731611190342 * v15 + 0.106921113768 * v17 + 0.0646228583573 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.57897207139e-14 * 1 + 0.0 * v0 + 0.00394730524189 * v5 + 0.324690333567 * v12 + 0.0721207524788 * v15 + 0.0 * v16 + 0.0632364988631 * v17 + 0.167326781318 * v18 + 0.213726031841 * v20 + 0.0 * v21 + 0.0657379237862 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.18989770272e-14 * 1 + 0.203348025305 * v4 + 0.017856957985 * v8 + 0.0 * v11 + 0.0 * v13 + 0.218000997897 * v15 + 0.141388661368 * v17 + 0.0 * v20 + 0.0 * v21 + 0.293378477001 * v25 + 0.0 * v28
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06408239698e-13 * 1 + 0.322590304326 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.34897157755 * v15 + 0.0768809014921 * v17 + 0.0 * v18 + 0.0 * v23 + 0.169975705833 * v27
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.87666620296e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0152887505172 * v6 + 0.0 * v7 + 0.432283090623 * v8 + 0.0 * v20 + 0.0 * v21 + 0.234593386024 * v26 + 0.221871736927 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84904804043e-13 * 1 + 0.0 * v3 + 0.0 * v8 + 0.0 * v12 + 0.0616602862188 * v13 + 0.190525104623 * v15 + 0.617877711089 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v22 + 0.0 * v28
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94613303175e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.25876096249 * v8 + 0.0 * v12 + 0.19720957831 * v13 + 0.376811066534 * v15 + 0.0 * v17 + -0.0 * v21 + 0.0 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.20561872873e-15 * 1 + 0.0763760313445 * v1 + 0.0 * v4 + 0.0 * v5 + 0.00609903162692 * v6 + 0.15185943221 * v8 + 0.453458386539 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.254094451985 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.76088238884e-13 * 1 + 0.226485907893 * v1 + 0.0591465535584 * v5 + 0.0510063037511 * v7 + 0.0 * v9 + 0.219463839767 * v13 + 0.227058538715 * v17 + 0.0 * v20 + 0.0 * v21 + 0.101355905617 * v23 + 0.0305844658995 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.00753514038e-14 * 1 + 0.288999120605 * v1 + 0.0 * v4 + 0.0590951786901 * v5 + 0.0 * v8 + 0.0 * v9 + 0.106295251586 * v12 + 0.343167106558 * v13 + 0.0903937302023 * v26 + 0.0482632293135 * v27 + 0.0 * v28
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58188673901e-14 * 1 + 0.317229409138 * v1 + 0.00628367367851 * v4 + 0.0996079967217 * v9 + 0.22990898168 * v13 + 0.195284425932 * v15 + 0.0987899066889 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.46074871985e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v9 + 0.0 * v13 + 0.0 * v15 + 0.567211352449 * v17 + 0.0 * v20 + 0.174415929225 * v26 + 0.163643902948 * v27 + 0.0 * v28
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.69226167423e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.23591055808 * v8 + 0.0 * v12 + 0.339408923287 * v13 + 0.0686296395395 * v17 + 0.0 * v21 + 0.178369231666 * v26 + 0.127817956504 * v27
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17471375527e-13 * 1 + 0.0564919718848 * v0 + 0.1998454906 * v1 + 0.0543799861126 * v8 + 0.0974514516946 * v15 + 0.0506840312945 * v16 + 0.427877624571 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v23 + 0.0 * v27
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002683325e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0940768356662 * v12 + 0.0241734331437 * v13 + 0.343011699552 * v15 + 0.262862487188 * v17 + 0.158201106328 * v27 + 0.0 * v28
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25358330697e-14 * 1 + 0.13828660556 * v1 + 0.0 * v4 + 0.0438564049529 * v5 + 0.210896401241 * v6 + 0.0 * v7 + 0.0197323212378 * v13 + 0.108047289695 * v14 + 0.207418784918 * v17 + 0.0377132165408 * v25 + 0.229586442425 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37661560225e-13 * 1 + 0.0468805052693 * v1 + 0.0 * v3 + 0.157695489925 * v7 + 0.112837723737 * v8 + 0.110297609388 * v15 + 0.0 * v16 + 0.101960470897 * v17 + 0.408758970517 * v18 + 0.0 * v21 + 0.0 * v28
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33929633964e-13 * 1 + 0.253232285543 * v1 + 0.0 * v5 + 0.111692176781 * v7 + 0.091737079 * v13 + 0.440366047389 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.00572110395038 * v21 + 0.00326267726454 * v27
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97643183038e-14 * 1 + 0.0 * v1 + -0.0 * v4 + 0.0 * v5 + 0.188454894301 * v7 + 0.0 * v9 + 0.222959145281 * v13 + 0.224340736167 * v17 + 0.0 * v20 + 0.0 * v25 + 0.226570863476 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20734144005e-13 * 1 + 0.0 * v0 + 0.17500178476 * v1 + 0.130205650508 * v6 + 0.0 * v7 + 0.047381685969 * v9 + 0.218341228828 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v21 + -0.0 * v23
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80361457519e-14 * 1 + 0.0786823964633 * v1 + 0.0 * v3 + 0.201336910426 * v6 + 0.0 * v7 + 0.102660715137 * v12 + 0.483523749968 * v15 + 0.047583369187 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v23
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.2021582924e-14 * 1 + 0.0 * v0 + 0.0 * v8 + 0.0122703680194 * v12 + 0.0 * v13 + 0.152722209335 * v15 + 0.391817032448 * v17 + 0.0 * v18 + 0.0 * v24 + 0.300808164957 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
