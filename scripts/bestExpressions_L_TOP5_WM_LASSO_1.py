from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.15223410513e-13 * 1 + 0.223692908778 * v4 + 0.146699784387 * v15 + 0.134402855329 * v16 + 0.339594134922 * v17
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.27407076962e-14 * 1 + 0.0508071523659 * v4 + 0.273460317538 * v5 + 0.304774195196 * v17 + 0.247258905114 * v21
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.65404170987e-13 * 1 + 0.206602184024 * v5 + 0.0855142028448 * v12 + 0.235869728063 * v16 + 0.211486037738 * v19
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.04747114652e-13 * 1 + 0.0460290139727 * v4 + 0.319944756784 * v17 + 0.136337837362 * v20 + 0.382652309367 * v22
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13349005832e-13 * 1 + 0.180991802478 * v4 + 0.214310866466 * v5 + 0.269307270097 * v20 + 0.202402422621 * v27
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.91011270139e-14 * 1 + 0.192478158147 * v5 + 0.304500521598 * v17 + 0.0917207150107 * v18 + 0.31047601622 * v23
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20544564163e-13 * 1 + 0.194773042955 * v1 + 0.0 * v17 + 0.252692041448 * v20 + 0.363176428017 * v21
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.11041071771e-14 * 1 + 0.0896653643368 * v1 + 0.400917260194 * v2 + 0.117767366081 * v17 + 0.273764790393 * v20
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.20655067301e-13 * 1 + 0.206290773799 * v5 + 0.239833020063 * v17 + 0.349558603989 * v21 + 0.105833816612 * v22
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.79685673526e-13 * 1 + 0.0590827341392 * v7 + 0.228969702858 * v8 + 0.423732465419 * v21 + 0.165883764538 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.44098209255e-14 * 1 + 0.150891526594 * v5 + 0.301716001171 * v21 + 0.358845696049 * v22 + 0.0761162981121 * v23
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.8313296151e-13 * 1 + 0.344828389829 * v1 + 0.27103763884 * v15 + 0.194098483652 * v20 + 0.0 * v27
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.14295678803e-15 * 1 + 0.154834344809 * v3 + 0.0390069186296 * v10 + 0.480608948504 * v17 + 0.118536001733 * v20
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.50065532921e-14 * 1 + 0.218478405427 * v1 + 0.20976111509 * v5 + 0.273839612026 * v25 + 0.169623981857 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.20790108909e-14 * 1 + 0.0892673285397 * v8 + 0.462946577672 * v15 + 0.0740356465957 * v17 + 0.142785636632 * v21
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.6077254812e-13 * 1 + 0.183634229103 * v9 + 0.126569050538 * v10 + 0.282519236476 * v20 + 0.261206813768 * v22
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.90604224214e-15 * 1 + 0.0867871413851 * v15 + 0.314347024587 * v16 + 0.296499580494 * v21 + 0.277126144684 * v22
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.0686397925e-13 * 1 + 0.0834746370995 * v5 + 0.118466020494 * v7 + 0.354114847122 * v9 + 0.306704760192 * v21
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.10190854952e-13 * 1 + 0.276814629971 * v5 + 0.208427824025 * v6 + 0.186276019314 * v11 + 0.216871049303 * v23
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.11350677919e-14 * 1 + 0.195210948332 * v5 + 0.0299621627551 * v17 + 0.403748087508 * v21 + 0.275910606816 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.45533650107e-14 * 1 + 0.146840631652 * v5 + 0.10197829103 * v17 + 0.197997183929 * v25 + 0.44972441438 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97940558608e-14 * 1 + 0.187470335914 * v1 + 0.184526503527 * v9 + 0.174844580009 * v15 + 0.344579956495 * v20
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.37989360054e-13 * 1 + 0.0963004136916 * v1 + 0.162599148664 * v4 + 0.274798536449 * v5 + 0.34107235622 * v20
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.47218424833e-16 * 1 + 0.0 * v5 + 0.0732524955046 * v8 + 0.266950630335 * v17 + 0.566777984804 * v22
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.64876308467e-14 * 1 + 0.270059750088 * v1 + 0.267253093376 * v17 + 0.224348612627 * v23 + 0.101318836879 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03768579332e-13 * 1 + 0.181008561099 * v1 + 0.134419026143 * v4 + 0.380152196418 * v5 + 0.173301191411 * v21
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.24780528559e-13 * 1 + 0.135843781223 * v3 + 0.162327883541 * v4 + 0.317142255773 * v9 + 0.251041971996 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.98221445958e-14 * 1 + 0.0 * v2 + 0.254082160651 * v5 + 0.301985839688 * v21 + 0.338742001848 * v25
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.82871582208e-13 * 1 + 0.226315781137 * v4 + 0.231773861467 * v5 + 0.263597759938 * v21 + 0.178336724027 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.52616391048e-14 * 1 + 1.37120371561e-06 * v19 + 0.282724463503 * v21 + 0.300154192872 * v22 + 0.26012512551 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.51738456595e-13 * 1 + 0.280213389126 * v4 + 0.00434319125067 * v5 + 0.0 * v17 + 0.527126388738 * v21
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.48630216459e-13 * 1 + 0.21130084947 * v7 + 0.18762225218 * v20 + 0.349142597747 * v21 + 0.165710947123 * v22
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.80985974538e-14 * 1 + 0.283710216385 * v9 + 0.0111222324364 * v16 + 0.302127777635 * v21 + 0.310110743184 * v22
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.78207396236e-14 * 1 + 0.0 * v1 + -0.212703654862 * v6 + 0.238340138396 * v15 + 0.446502243874 * v22
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.59771309967e-13 * 1 + 0.024706301431 * v7 + 0.292501045169 * v20 + 0.109506714473 * v21 + 0.37638720432 * v22
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.88221667444e-13 * 1 + 0.361721827195 * v0 + 0.0 * v16 + 0.347271364459 * v22 + 0.159667272386 * v23
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.66939761276e-13 * 1 + 0.128944301956 * v0 + 0.249212242667 * v3 + 0.0186513491519 * v16 + 0.479891445587 * v21
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.64811784744e-14 * 1 + 0.218798953171 * v1 + 0.363264724108 * v5 + 0.0568678469131 * v21 + 0.276595774354 * v22
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.38829643394e-13 * 1 + 0.1982099529 * v1 + 0.257971282724 * v15 + 0.123348094362 * v20 + 0.244346330023 * v21
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.01637498559e-13 * 1 + 0.129829587049 * v4 + 0.392202245753 * v9 + 0.247438247795 * v17 + 0.106349328499 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
