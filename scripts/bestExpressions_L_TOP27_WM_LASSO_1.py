from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.09574729849e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0897641196145 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0961547221197 * v13 + 0.0 * v14 + 0.196939244764 * v15 + 0.0769394752556 * v16 + 0.344392610866 * v17 + 0.0 * v18 + 0.0814563743731 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0735098800637 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.27662838751e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.170481233495 * v5 + 0.121231367064 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.000870619700537 * v16 + 0.226194422979 * v17 + 0.0 * v18 + 0.0 * v19 + 0.080978384483 * v20 + 0.146662515218 * v21 + 0.113010043781 * v22 + 0.0 * v23 + 0.0997859210423 * v24 + 0.0316586494501 * v25 + 0.0 * v27 + 0.0706717429605 * v28
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.22815460616e-13 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.191212377678 * v5 + -0.0249317474134 * v6 + -0.0 * v8 + 0.0546208720343 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.161801730472 * v15 + 0.213055782195 * v16 + 0.0 * v17 + 0.0 * v18 + 0.227074561682 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v28
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.25489403218e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0164662643209 * v3 + 0.021478845588 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.240632027509 * v17 + 0.0966143597314 * v18 + 0.167454896922 * v20 + 0.0 * v21 + 0.375381579261 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26781021186e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0523420080773 * v4 + 0.0960073654134 * v5 + 0.00889931389205 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v17 + 0.0 * v18 + 0.145067616322 * v20 + 0.118384117285 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.253350925989 * v25 + 0.0 * v26 + 0.239635264936 * v27 + 0.0191796686671 * v28
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.00238406088e-14 * 1 + 0.0 * v0 + 0.00745146437094 * v1 + -0.0 * v2 + 0.0 * v4 + 0.146560603061 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + 0.125629238792 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0658181179864 * v15 + 0.0 * v16 + 0.243234513511 * v17 + 0.0305084112202 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0785958509635 * v22 + 0.246164781216 * v23 + -0.0 * v24 + 0.00777351288978 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.6535109487e-13 * 1 + 0.0 * v0 + 0.181249062103 * v1 + 0.0 * v2 + 0.0 * v4 + 0.067232487182 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0547543886838 * v15 + 0.0 * v17 + 0.0 * v18 + 0.15007548187 * v20 + 0.30736940405 * v21 + 0.157690721709 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.00642298489153 * v28
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90771430695e-14 * 1 + 0.0 * v0 + 0.0420846960343 * v1 + 0.429353415755 * v2 + 0.0 * v3 + 0.0 * v5 + 0.0 * v6 + 0.0423139619633 * v7 + -0.0 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0141188113612 * v17 + 0.0 * v18 + 0.0 * v19 + 0.287172076954 * v20 + 0.112493872227 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705311249e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.21646178955 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0783034733505 * v9 + 0.0 * v10 + 0.0859870374143 * v11 + 0.0 * v12 + 0.0 * v13 + 0.155469912559 * v15 + 0.0 * v16 + 0.0769217791098 * v17 + 0.0 * v18 + 0.0487138153117 * v20 + 0.20481346756 * v21 + 0.0762311375244 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27640540216e-13 * 1 + 0.0 * v0 + 0.00217164824841 * v1 + 0.0 * v2 + 0.0 * v3 + 0.221921091481 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0736713034579 * v7 + 0.0413899649829 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0141698068682 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0468814411257 * v20 + 0.325253219436 * v21 + 0.168722747997 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0402709493746 * v27 + 0.0 * v28
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.72986918498e-14 * 1 + 0.0297815854865 * v0 + 0.0886574447096 * v1 + 0.051747129429 * v2 + 0.0 * v3 + 0.0 * v4 + 0.148692228729 * v5 + 0.0 * v7 + 0.0 * v8 + 0.00800558452644 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0698000861898 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0410941763197 * v19 + 0.0 * v20 + 0.227246203639 * v21 + 0.23322381917 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0315163440417 * v28
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.23438648896e-13 * 1 + 0.0 * v0 + 0.133386465996 * v1 + 0.0135913507478 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0179462928459 * v5 + 0.0 * v6 + 0.0803427686272 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0907495171219 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0233675424473 * v15 + 0.0 * v16 + 0.0365761779429 * v17 + 0.0 * v18 + 0.0855342498476 * v19 + 0.184269068954 * v20 + 0.132730707889 * v21 + 0.0739070998904 * v22 + 0.0581227034513 * v23 + 0.0651357938512 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.33096552893e-15 * 1 + -0.0 * v0 + -0.0 * v1 + 0.0 * v2 + 0.121821724957 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v7 + 0.0 * v9 + 0.0155108646191 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + -0.0 * v16 + 0.554751199559 * v17 + -0.279357925802 * v18 + 0.0 * v19 + 0.300001801005 * v20 + -0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0 * v28
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.1976762151e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v3 + 0.00764386428837 * v4 + 0.332648997162 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + -0.0 * v14 + 0.28853360203 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.135841202246 * v20 + 0.0393043158909 * v21 + 0.0530095356938 * v22 + 0.0 * v24 + 0.106735713624 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.38058002684e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0511166475519 * v5 + 0.0 * v7 + 0.0 * v8 + 0.165121332615 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0391866956828 * v14 + 0.453177078071 * v15 + 0.0 * v16 + 0.0653964824578 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0102734574671 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.100934374227 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.59518146726e-13 * 1 + 0.0974344271507 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.103758415396 * v7 + 0.0 * v8 + 0.0693871347721 * v9 + 0.0947608986232 * v10 + 0.0385364104584 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0493851991676 * v20 + 0.105536728482 * v21 + 0.165747690084 * v22 + 0.0409265492022 * v23 + 0.0454752403263 * v24 + 0.183402491219 * v25 + 0.0 * v26 + 0.0 * v27 + 0.049632895862 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97312315687e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0932171550171 * v15 + 0.305861386466 * v16 + 0.0 * v17 + 0.0348896144543 * v19 + 0.275714784198 * v21 + 0.179513357404 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v27 + 0.12303530295 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35543073911e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0402271361033 * v5 + 0.0 * v6 + 0.108326620231 * v7 + 0.0 * v8 + 0.275859786861 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0282262417893 * v12 + 0.0 * v13 + 0.119795238089 * v15 + 0.0 * v16 + 0.00629639184716 * v17 + 0.0 * v18 + 0.0 * v19 + 0.213426057168 * v21 + 0.0 * v22 + 0.0637131560992 * v23 + 0.0347157608695 * v24 + 0.0639936158033 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75903703346e-14 * 1 + 0.0 * v0 + 0.075535310574 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.145946072197 * v5 + 0.164246679434 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.183599394721 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + 0.0 * v16 + -0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.147876721668 * v21 + 0.0 * v22 + 0.195368587692 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.00821036955314 * v28
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33605602247e-14 * 1 + 0.0 * v0 + 0.0349669645688 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0752104590769 * v5 + 0.0 * v7 + 0.0 * v8 + 0.110557487059 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0795082348141 * v20 + 0.365235181142 * v21 + 0.120697280052 * v22 + 0.0 * v23 + 0.131754346553 * v25 + 0.0 * v27 + 0.0169544656609 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18347935274e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0663108043849 * v2 + 0.0 * v3 + 0.0 * v4 + 0.102788060584 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0256696147718 * v9 + 0.0 * v10 + 0.0877781487223 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.169352811971 * v17 + 0.0 * v18 + 0.0 * v19 + 0.13017524235 * v20 + 0.0121072338509 * v21 + 0.0511504150442 * v22 + 0.0 * v23 + 0.0130237187711 * v24 + 0.0417685715421 * v25 + 0.300240268319 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49133469297e-14 * 1 + 0.122953375484 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0838423798382 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0917216107252 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.148504078333 * v15 + 0.0 * v17 + 0.0 * v18 + 0.137835578391 * v19 + 0.288345925862 * v20 + 0.0549643056839 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25860271344e-13 * 1 + 0.0 * v0 + 0.0590540282529 * v1 + 0.0 * v2 + 0.104067611086 * v4 + 0.0961320693033 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0437771193537 * v9 + 0.0 * v10 + 0.189285691023 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.166137845459 * v20 + 0.17003482158 * v21 + 0.150425330621 * v22 + 0.0106089932306 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.21755927994e-15 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + -0.0 * v7 + 0.0632582949122 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0189756233606 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.253214365267 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0228953021471 * v20 + 0.0 * v21 + 0.562931125094 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94023425096e-14 * 1 + 0.0 * v0 + 0.213869442059 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00478617404395 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0488009834959 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0253447418774 * v15 + 0.0 * v16 + 0.236787462291 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0297430537291 * v21 + 0.0982177483416 * v22 + 0.196111968271 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0470052774099 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.23923939812e-14 * 1 + 0.0 * v0 + 0.0316091560521 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0379299395791 * v4 + 0.284128068061 * v5 + 0.199192575007 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.126017053707 * v19 + 0.0964234849031 * v20 + 0.15624966013 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0236640411651 * v25 + 0.0 * v27 + 0.0467761797744 * v28
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49512521781e-13 * 1 + 0.0 * v0 + 0.0330136380915 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0101634741897 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.253214205452 * v9 + 0.0 * v10 + 0.0489320719278 * v11 + 0.0 * v12 + 0.0 * v13 + 0.025380146354 * v15 + 0.0384744981134 * v16 + 0.0508236299384 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.221295583146 * v21 + 0.0408806361787 * v22 + 0.0386343395923 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.2695705615 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85694440826e-14 * 1 + 0.0 * v0 + 0.0329587493266 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00197260629737 * v4 + 0.247592794644 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.130096295667 * v20 + 0.23718958034 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.185543432254 * v25 + 0.0 * v26 + 0.0 * v27 + 0.096177717422 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.38826340961e-13 * 1 + 0.122514517531 * v1 + 0.0 * v2 + 0.0 * v3 + 0.122985891352 * v4 + 0.147732440831 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.113647211708 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0321437842397 * v13 + 0.0 * v15 + 0.028222161484 * v16 + 0.00578554086157 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.263110243492 * v21 + 0.0752460504744 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0524828073302 * v27 + 0.0 * v28
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11390697516e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0259505084793 * v9 + 0.0 * v10 + 0.243535674081 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0882814474702 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0204202750859 * v19 + 0.0 * v20 + 0.235176129042 * v21 + 0.172827918047 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.141557747685 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.38243396502e-13 * 1 + 0.0342812250345 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0982833154047 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0541024109109 * v9 + 0.0 * v10 + 0.0058977865286 * v11 + 0.0 * v12 + 0.0226710622546 * v13 + 0.0 * v15 + 0.00914813580711 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0360075029356 * v20 + 0.443190754706 * v21 + 0.154167175688 * v22 + -0.0 * v23 + 0.110330885831 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.39820281061e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0495705427232 * v2 + 0.0 * v3 + 0.0427978020545 * v4 + 0.0 * v5 + 0.256882412095 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0162490618391 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.105645431254 * v20 + 0.31110360403 * v21 + 0.150400369397 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68029807396e-14 * 1 + 0.0 * v0 + 0.0600821648341 * v1 + 0.0194084440597 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.214080243689 * v9 + 0.0 * v10 + 0.0351540731719 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0263623873639 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.237131885778 * v21 + 0.22611879326 * v22 + 0.0 * v23 + 0.0 * v24 + 0.136075001146 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16639937389e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.262889530611 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v10 + -0.0 * v13 + 0.0 * v14 + 0.0200643214971 * v15 + -0.0895040126474 * v16 + 0.0 * v17 + -0.0 * v18 + 0.247299878599 * v20 + 0.0595791181758 * v21 + 0.300951491234 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.05988671175e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.237648074841 * v5 + 0.0 * v6 + 0.0919936892227 * v7 + -0.0 * v8 + 0.120190535218 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0112772347236 * v19 + 0.15874211464 * v20 + 0.0407085254339 * v21 + 0.291770476013 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.01524541861e-13 * 1 + 0.305016250163 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.29929895022 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v14 + -0.173501488479 * v15 + 0.0 * v16 + 0.247434765803 * v17 + -0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + 0.185808210383 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v27 + 0.146257234845 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.73717812898e-14 * 1 + 0.0303828681139 * v0 + 0.0136229365316 * v1 + 0.0 * v2 + 0.112813822255 * v3 + 0.0489868522717 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0240474669251 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0542592598896 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.16409794668 * v20 + 0.377026593003 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.025711725253 * v25 + 0.0 * v27 + 0.170556218897 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.72188905638e-14 * 1 + 0.132091733118 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.29991000266 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0354096067876 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0433511569709 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0932961724683 * v19 + 0.0 * v20 + 0.0549734630224 * v21 + 0.208817044814 * v22 + 0.0 * v23 + 0.0189850330395 * v25 + 0.0306566332134 * v27 + 0.0505106243963 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12748459308e-13 * 1 + 0.00575019063637 * v0 + 0.129489872333 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.181731592677 * v9 + 0.00621073594477 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.24644557961 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.059370804394 * v20 + 0.219860458258 * v21 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0668056234233 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25244475839e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.234638932989 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.159356242191 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.00369345150872 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0537033404515 * v19 + 0.0 * v20 + 0.287636453232 * v21 + 0.121294952571 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0886835267335 * v26 + 0.0 * v27 + 0.0451765394527 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
