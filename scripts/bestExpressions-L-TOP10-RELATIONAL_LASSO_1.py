from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.85942443376e-13 * 1 + 0.0171975474528 * v0 + 0.113244242938 * v1 + 0.0 * v4 + 0.257283613546 * v8 + 0.319509882584 * v17 + 0.0 * v18 + 0.0532998297381 * v20 + 0.0 * v23 + 0.123529670653 * v28
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24870857931e-13 * 1 + 0.0366895240723 * v1 + 0.0 * v5 + 0.0 * v8 + 0.206495724701 * v13 + 0.390151509961 * v15 + 0.147661696057 * v17 + 0.0 * v18 + 0.0 * v20 + 0.179661863986 * v27
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.1906837353e-14 * 1 + -0.0 * v0 + 0.13723190028 * v1 + 0.0 * v8 + 0.0 * v13 + 0.0 * v15 + 0.342008573129 * v17 + 0.213278084988 * v18 + 0.160381190723 * v21 + 0.0 * v24
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.09503789952e-14 * 1 + 0.0 * v3 + 0.0 * v4 + 0.310584649501 * v13 + 0.0214859915274 * v15 + 0.211220544899 * v17 + 0.0 * v19 + 0.112837047111 * v21 + 0.0 * v22 + 0.242988071536 * v27
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60319759593e-13 * 1 + 0.258550464584 * v1 + 0.171026464475 * v8 + 0.208606901179 * v11 + 0.214926272412 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0251788800633 * v25 + 0.0 * v27
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61141079889e-13 * 1 + 0.0249239360145 * v3 + 0.112546783231 * v4 + 0.0 * v8 + 0.0 * v12 + 0.087563543891 * v13 + 0.304320135088 * v15 + 0.356806085859 * v17 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81861001523e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0481239068041 * v8 + 0.0 * v12 + 0.358084794212 * v13 + 0.283215431208 * v15 + 0.296937281854 * v17 + 0.0 * v20 + 0.0 * v21
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13981726377e-14 * 1 + 0.148602926458 * v6 + 0.0 * v11 + 0.0 * v12 + 0.202867877734 * v13 + 0.0 * v15 + 0.50196819232 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v27
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.63597578866e-14 * 1 + 0.0237624655906 * v1 + 0.236973428785 * v6 + 0.0 * v7 + 0.36277177095 * v8 + 0.00247555242748 * v9 + 0.0811251411847 * v13 + 0.0 * v18 + 0.0 * v23 + 0.228135793567 * v27
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.90173648373e-14 * 1 + 0.663018146971 * v1 + 0.0 * v2 + 0.0483804181973 * v4 + 0.0317165383729 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.134756893151 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53314939495e-14 * 1 + 0.122516473001 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.201156285013 * v15 + 0.356440737887 * v17 + 0.0 * v20 + 0.040322218969 * v21 + 0.117229364941 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.19985072911e-14 * 1 + 0.230350049424 * v1 + 0.175335875577 * v4 + 0.276727423491 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0680442429569 * v15 + 0.0 * v18 + 0.00233286217008 * v21 + 0.170224267323 * v27
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.30249372975e-14 * 1 + 0.15618148483 * v1 + 0.0147562653887 * v4 + 0.0 * v6 + 0.108498576995 * v8 + 0.175539430181 * v15 + 0.2628880923 * v17 + 0.0273037760453 * v20 + 0.0 * v21 + 0.144234048638 * v27
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.1800841751e-15 * 1 + 0.0505602631914 * v1 + 0.0 * v8 + 0.441159235467 * v15 + 0.0260768255677 * v17 + 0.0611603979967 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.339330121 * v27
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.42738719189e-13 * 1 + 0.197861810108 * v8 + 0.0 * v12 + 0.169779063858 * v13 + 0.176030243407 * v20 + 0.0894569639849 * v22 + 0.0 * v23 + 0.00570246966226 * v24 + 0.21004111539 * v27 + 0.0742868726462 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.52738920631e-13 * 1 + 0.219498969087 * v1 + 0.0 * v4 + 0.154432984103 * v5 + 0.0 * v8 + 0.0 * v15 + 0.398809757337 * v17 + 0.0 * v20 + 0.135651680992 * v21 + 0.0 * v27
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.75258265632e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v8 + 0.0824515234669 * v13 + 0.161039627962 * v15 + 0.413881860747 * v17 + -0.0 * v20 + 0.0 * v22 + 0.243224419183 * v27
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.01655768309e-13 * 1 + 0.0 * v5 + 0.0661768920281 * v7 + 0.0251879740438 * v8 + 0.221481672764 * v12 + 0.164643370266 * v15 + 0.325475937286 * v17 + 0.0820327402988 * v20 + 0.0 * v21 + 0.0 * v28
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.48882583085e-14 * 1 + 0.0 * v2 + 0.0449071359764 * v4 + 0.308545012908 * v6 + 0.237062634439 * v8 + 0.0 * v12 + 0.100396186076 * v13 + 0.0732561394355 * v15 + 0.106932358507 * v17 + 0.0645742968644 * v27
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.57773355573e-14 * 1 + 0.00391315258837 * v5 + 0.324683193668 * v12 + 0.0720623127081 * v15 + 0.0 * v16 + 0.0632345774362 * v17 + 0.167402426395 * v18 + 0.213766651151 * v20 + 0.0 * v21 + 0.065724978755 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.18989770272e-14 * 1 + 0.203348025305 * v4 + 0.017856957985 * v8 + 0.0 * v11 + 0.0 * v13 + 0.218000997897 * v15 + 0.141388661368 * v17 + 0.0 * v21 + 0.293378477001 * v25 + 0.0 * v28
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06408239698e-13 * 1 + 0.322590304326 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.34897157755 * v15 + 0.0768809014921 * v17 + 0.0 * v18 + 0.169975705833 * v27
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.87668364025e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0152880188069 * v6 + 0.432281915156 * v8 + 0.0 * v20 + 0.0 * v21 + 0.234592872034 * v26 + 0.221873898762 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906484829e-13 * 1 + 0.0 * v8 + 0.0 * v12 + 0.0616589548227 * v13 + 0.190515048717 * v15 + 0.617886437621 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v22 + 0.0 * v28
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94613101706e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.258761230548 * v8 + 0.0 * v12 + 0.19720972895 * v13 + 0.376810739579 * v15 + 0.0 * v17 + 0.0 * v28
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76115160263e-15 * 1 + 0.07858465956 * v1 + 0.0 * v4 + 0.0 * v5 + 0.150221807847 * v8 + 0.45512180757 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.2568630837 * v27
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.92921846367e-13 * 1 + 0.23875250344 * v1 + 0.0963797884667 * v5 + 0.088298345594 * v7 + 0.0 * v9 + 0.230989829401 * v13 + 0.254588161156 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v27
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.52306505675e-14 * 1 + 0.323088184418 * v1 + 0.0 * v4 + 0.0 * v8 + 0.0 * v9 + 0.1374425192 * v12 + 0.327189029742 * v13 + 0.106154357448 * v26 + 0.0370769540083 * v27 + 0.0 * v28
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58188673901e-14 * 1 + 0.317229409138 * v1 + 0.00628367367851 * v4 + 0.0996079967217 * v9 + 0.22990898168 * v13 + 0.195284425932 * v15 + 0.0987899066889 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v27
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.89477700236e-14 * 1 + 0.0240311509288 * v1 + 0.0 * v4 + 0.0 * v9 + 0.0297847114934 * v13 + 0.0 * v15 + 0.491410837532 * v17 + 0.0 * v20 + 0.308501665898 * v27 + 0.0 * v28
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.18925105316e-14 * 1 + 0.022510821162 * v1 + 0.0 * v4 + 0.0 * v5 + 0.194612883043 * v8 + 0.0 * v12 + 0.340727239381 * v13 + 0.164116245278 * v17 + 0.0 * v21 + 0.213858091191 * v26
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17471375527e-13 * 1 + 0.0564919718848 * v0 + 0.1998454906 * v1 + 0.0543799861126 * v8 + 0.0974514516946 * v15 + 0.0506840312945 * v16 + 0.427877624571 * v17 + 0.0 * v18 + 0.0 * v23 + 0.0 * v27
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002245258e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0940823476855 * v12 + 0.0241701367326 * v13 + 0.343009332242 * v15 + 0.262860483955 * v17 + 0.158203914147 * v27
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25346696041e-14 * 1 + 0.138288513763 * v1 + 0.0438508747579 * v5 + 0.210892130042 * v6 + 0.0 * v7 + 0.019730543284 * v13 + 0.108047743455 * v14 + 0.207419370346 * v17 + 0.037716087127 * v25 + 0.229589802313 * v27
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37660862553e-13 * 1 + 0.0468798270593 * v1 + 0.157695366703 * v7 + 0.11283740198 * v8 + 0.110295247418 * v15 + 0.0 * v16 + 0.101961822241 * v17 + 0.408760679529 * v18 + 0.0 * v21 + 0.0 * v28
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33929633964e-13 * 1 + 0.253232285543 * v1 + 0.0 * v5 + 0.111692176781 * v7 + 0.091737079 * v13 + 0.440366047389 * v15 + 0.0 * v17 + 0.0 * v18 + 0.00572110395038 * v21 + 0.00326267726454 * v27
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97643393446e-14 * 1 + 0.0 * v1 + -0.0 * v4 + 0.188455060918 * v7 + 0.0 * v9 + 0.222959608349 * v13 + 0.224340618487 * v17 + 0.0 * v20 + 0.0 * v25 + 0.226570624242 * v27
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20734144005e-13 * 1 + 0.0 * v0 + 0.17500178476 * v1 + 0.130205650508 * v6 + 0.0 * v7 + 0.047381685969 * v9 + 0.218341228828 * v15 + 0.0 * v18 + 0.0 * v21 + -0.0 * v23
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80333170737e-14 * 1 + 0.0786645251471 * v1 + 0.201338268383 * v6 + 0.0 * v7 + 0.102656334246 * v12 + 0.483537768423 * v15 + 0.0475881229064 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v23
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20214837532e-14 * 1 + 0.0 * v0 + 0.0 * v8 + 0.0122695280257 * v12 + 0.0 * v13 + 0.152722305824 * v15 + 0.391817989392 * v17 + 0.0 * v18 + 0.30080798022 * v27 + 0.0 * v28
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.88655837168e-15 * 1 + 0.104026227147 * v1 + 0.061800997525 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v13 + 0.0110273165407 * v15 + 0.591741928028 * v17 + 0.0 * v20 + 0.0857912395486 * v27

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
