from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.50865742614e-13 * 1 + 0.111785944761 * v1 + 0.0 * v4 + 0.332676891956 * v8 + 0.282873525363 * v17 + 0.0 * v18 + 0.132595711226 * v20 + 0.0 * v23
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47020814143e-13 * 1 + 0.0971192670634 * v1 + 0.0 * v8 + 0.262227164289 * v13 + 0.334452442207 * v15 + 0.222465777918 * v17 + 0.0 * v18 + 0.0 * v20
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.19068213669e-14 * 1 + 0.137233180694 * v1 + 0.0 * v8 + 0.0 * v15 + 0.342007287765 * v17 + 0.213278839095 * v18 + 0.160380699872 * v21 + 0.0 * v24
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.09558527177e-14 * 1 + 0.0 * v4 + 0.310580838271 * v13 + 0.0214748103573 * v15 + 0.211269640473 * v17 + 0.112823099931 * v21 + 0.0 * v22 + 0.242967649794 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60319759593e-13 * 1 + 0.258550464584 * v1 + 0.171026464475 * v8 + 0.208606901179 * v11 + 0.214926272412 * v12 + 0.0 * v18 + 0.0251788800633 * v25 + 0.0 * v27
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59665373279e-13 * 1 + 0.118463144747 * v4 + 0.0 * v8 + 0.0 * v12 + 0.0986529155834 * v13 + 0.303066853432 * v15 + 0.359407063843 * v17 + 0.0 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81860980329e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0481234398688 * v8 + 0.0 * v12 + 0.358084756623 * v13 + 0.283215739439 * v15 + 0.296937418042 * v17
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13961418485e-14 * 1 + 0.148585182773 * v6 + 0.0 * v12 + 0.202880957187 * v13 + 0.0 * v15 + 0.501970176956 * v17 + 0.0 * v18 + 0.0 * v21
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.65770264453e-14 * 1 + 0.0262614381254 * v1 + 0.236049248927 * v6 + 0.362953725556 * v8 + 0.0814587659251 * v13 + 0.0 * v18 + 0.0 * v23 + 0.228318719977 * v27
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.90173648373e-14 * 1 + 0.663018146971 * v1 + 0.0483804181973 * v4 + 0.0317165383729 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.134756893151 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53313163488e-14 * 1 + 0.12251723055 * v1 + 0.0 * v5 + 0.201158295776 * v15 + 0.356440562457 * v17 + 0.0 * v20 + 0.0403200406525 * v21 + 0.117229355541 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.17025210455e-14 * 1 + 0.23096253482 * v1 + 0.174955160071 * v4 + 0.278612597765 * v8 + 0.0 * v12 + 0.0678704943955 * v15 + 0.0 * v18 + 0.17047251699 * v27
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.42072758591e-14 * 1 + 0.15997556665 * v1 + 0.112244247312 * v8 + 0.17106013708 * v15 + 0.263399704742 * v17 + 0.029503275596 * v20 + 0.0 * v21 + 0.151175206838 * v27
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.1800841751e-15 * 1 + 0.0505602631914 * v1 + 0.0 * v8 + 0.441159235467 * v15 + 0.0260768255677 * v17 + 0.0611603979967 * v18 + 0.0 * v22 + 0.339330121 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.43553800559e-13 * 1 + 0.200962786614 * v8 + 0.00114474033779 * v12 + 0.168797002488 * v13 + 0.177489701478 * v20 + 0.0891836842404 * v22 + 0.209763461133 * v27 + 0.0753458052288 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.52734710199e-13 * 1 + 0.21951541474 * v1 + 0.154422062298 * v5 + 0.0 * v8 + 0.0 * v15 + 0.398779467401 * v17 + 0.0 * v20 + 0.135668155315 * v21
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.75223732085e-14 * 1 + 0.0 * v4 + 0.0 * v8 + 0.082458896251 * v13 + 0.161048333509 * v15 + 0.413869379635 * v17 + 0.0 * v22 + 0.243224427813 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.01655768309e-13 * 1 + 0.0 * v5 + 0.0661768920281 * v7 + 0.0251879740438 * v8 + 0.221481672764 * v12 + 0.164643370266 * v15 + 0.325475937286 * v17 + 0.0820327402988 * v20
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.48841225551e-14 * 1 + 0.0448812322889 * v4 + 0.308535017442 * v6 + 0.237117240966 * v8 + 0.100407158267 * v13 + 0.073222155627 * v15 + 0.106913216192 * v17 + 0.0645968765889 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.00225339092e-14 * 1 + 0.312779736882 * v12 + 0.0868616681933 * v15 + 0.0 * v16 + 0.169574165819 * v18 + 0.239139482793 * v20 + 0.0 * v21 + 0.0991033359195 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.18962409892e-14 * 1 + 0.203362346221 * v4 + 0.017873128957 * v8 + 0.0 * v11 + 0.218005051471 * v15 + 0.141373334895 * v17 + 0.0 * v21 + 0.293361227264 * v25
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06399661953e-13 * 1 + 0.322610163591 * v1 + 0.0 * v7 + 0.0 * v8 + 0.348906755372 * v15 + 0.0769610310311 * v17 + 0.0 * v18 + 0.169941567268 * v27
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.3117063359e-14 * 1 + 0.0 * v1 + 0.0209596013848 * v4 + 0.167292712231 * v6 + 0.39748468542 * v8 + 0.00517999680731 * v20 + 0.0 * v21 + 0.302155370034 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906484829e-13 * 1 + 0.0 * v8 + 0.0 * v12 + 0.0616589548227 * v13 + 0.190515048717 * v15 + 0.617886437621 * v17 + 0.0 * v20 + 0.0 * v22
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94606420278e-14 * 1 + 0.0 * v4 + 0.25877009587 * v8 + 0.0 * v12 + 0.197214727329 * v13 + 0.376799915584 * v15 + 0.0 * v17 + 0.0 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.79180645244e-15 * 1 + 0.078485424953 * v1 + 0.0 * v5 + 0.150180686465 * v8 + 0.455243663576 * v17 + 0.0 * v20 + 0.0 * v21 + 0.25685939429 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.84132030601e-13 * 1 + 0.225604635063 * v1 + 0.159298681785 * v7 + 0.0 * v9 + 0.254477214205 * v13 + 0.266095487422 * v17 + 0.0 * v20 + 0.0 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.52306505675e-14 * 1 + 0.323088184418 * v1 + 0.0 * v4 + 0.0 * v9 + 0.1374425192 * v12 + 0.327189029742 * v13 + 0.106154357448 * v26 + 0.0370769540083 * v27
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.86413869162e-14 * 1 + 0.373939546454 * v1 + 0.0591361150914 * v4 + 0.245753907178 * v13 + 0.202877987672 * v15 + 0.0543196498741 * v17 + 0.0 * v20 + 0.0 * v27
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.89477700236e-14 * 1 + 0.0240311509288 * v1 + 0.0 * v4 + 0.0297847114934 * v13 + 0.0 * v15 + 0.491410837532 * v17 + 0.0 * v20 + 0.308501665898 * v27
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.28872080244e-14 * 1 + 0.0 * v5 + 0.189466130374 * v8 + 0.0 * v12 + 0.349443837913 * v13 + 0.177642465967 * v17 + 0.0 * v21 + 0.216787682418 * v26
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17471375527e-13 * 1 + 0.0564919718848 * v0 + 0.1998454906 * v1 + 0.0543799861126 * v8 + 0.0974514516946 * v15 + 0.0506840312945 * v16 + 0.427877624571 * v17 + 0.0 * v18
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002143387e-13 * 1 + 0.0 * v4 + 0.0 * v8 + 0.0940836677754 * v12 + 0.0241693442322 * v13 + 0.343008724739 * v15 + 0.262860069376 * v17 + 0.158204557123 * v27
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.40241558191e-14 * 1 + 0.137550991649 * v1 + 0.0463737513564 * v5 + 0.210857164576 * v6 + 0.11220136254 * v14 + 0.202206397656 * v17 + 0.0392595762567 * v25 + 0.240575686793 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37660862553e-13 * 1 + 0.0468798270593 * v1 + 0.157695366703 * v7 + 0.11283740198 * v8 + 0.110295247418 * v15 + 0.101961822241 * v17 + 0.408760679529 * v18 + 0.0 * v21
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.3427969387e-13 * 1 + 0.253738480914 * v1 + 0.112134584404 * v7 + 0.0936805037488 * v13 + 0.440923531243 * v15 + 0.0 * v17 + 0.0 * v18 + 0.00498537856368 * v21
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97594237456e-14 * 1 + 0.0 * v1 + 0.188457783571 * v7 + 0.222956388716 * v13 + 0.224330135028 * v17 + 0.0 * v20 + 0.0 * v25 + 0.226577929579 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20733880124e-13 * 1 + 0.17500410509 * v1 + 0.130207498562 * v6 + 0.0 * v7 + 0.0473844844294 * v9 + 0.218338552906 * v15 + 0.0 * v18 + 0.0 * v21
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.87104955309e-14 * 1 + 0.100288981965 * v1 + 0.19893927023 * v6 + 0.0 * v7 + 0.113497312108 * v12 + 0.492038377572 * v15 + 0.0 * v18 + 0.0 * v21
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20077717381e-14 * 1 + 0.0 * v8 + 0.0122103243215 * v12 + 0.152666854274 * v15 + 0.391892156514 * v17 + 0.0 * v18 + 0.300838728892 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
