from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.57762166521e-13 * 1 + -0.147265406953 * v0 + 0.208276258388 * v4 + 0.226991923483 * v15 + 0.272232227579 * v16 + 0.295236680124 * v17 + 0.0696268143494 * v20 + 0.0624058231764 * v27
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.92773573203e-14 * 1 + 0.0405782198209 * v4 + 0.364320661345 * v5 + -0.108745814664 * v8 + 0.0687558314726 * v15 + 0.232921067198 * v17 + 0.163502645455 * v20 + 0.280943437349 * v21
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.96391384709e-13 * 1 + -0.19734855159 * v3 + 0.226228821992 * v5 + 0.173779074294 * v9 + 0.255788524864 * v12 + -0.105154252554 * v13 + 0.303194009581 * v16 + 0.247536252688 * v19
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.10499869476e-13 * 1 + -0.0454740418666 * v1 + 0.00995950808811 * v4 + 0.236383622771 * v17 + 0.134400218482 * v18 + 0.244165998907 * v20 + 0.41598033101 * v22 + 0.0125350056165 * v23
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.17493014361e-13 * 1 + 0.219300646644 * v4 + 0.244500507664 * v5 + 0.0382563685359 * v6 + 0.0377553785046 * v14 + 0.241992208936 * v20 + -0.0239197452161 * v26 + 0.220323147655 * v27
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.741622298e-14 * 1 + 0.205039931153 * v5 + 0.182239948349 * v10 + 0.0276791043795 * v11 + 0.0950771282566 * v15 + 0.22972837555 * v17 + 0.0158970450887 * v18 + 0.310589540802 * v23
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.67075567943e-13 * 1 + 0.243184939928 * v1 + 0.14062853984 * v15 + 0.0318847456389 * v17 + 0.0319210115937 * v18 + 0.430886923349 * v20 + 0.441276134781 * v21 + -0.367612734502 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39526806253e-14 * 1 + 0.0748254729477 * v1 + 0.464737207463 * v2 + -0.02473112567 * v6 + 0.156211667295 * v7 + 0.158846369105 * v17 + 0.277618785755 * v20 + -0.0685139640374 * v27
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.59470027503e-13 * 1 + -0.01537511876 * v4 + 0.303405890513 * v5 + 0.170161495996 * v9 + 0.192982408249 * v15 + 0.0669476819138 * v17 + 0.251945530449 * v21 + 0.0820136270092 * v22
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.94623140287e-14 * 1 + 0.384547617108 * v4 + 0.197109339555 * v7 + 0.0201615514087 * v8 + -0.0673271725497 * v17 + 0.0190521495259 * v20 + 0.442941784175 * v21 + 0.0358363111455 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.38510086232e-14 * 1 + -0.050847133843 * v0 + 0.0997072181444 * v5 + 0.096229753466 * v8 + 0.131507148389 * v16 + 0.331990346276 * v21 + 0.37907713904 * v22 + 0.0170967922324 * v23
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.54556599631e-13 * 1 + 0.148915664834 * v1 + 0.265812112784 * v7 + 0.243834234681 * v11 + 0.119812928584 * v15 + 0.0623530214545 * v17 + 0.207786903818 * v20 + 0.0145748542614 * v27
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.06686982824e-14 * 1 + -0.0664618173325 * v2 + 0.312748212956 * v3 + -0.513039973286 * v4 + 0.0960677028697 * v10 + 0.621072065108 * v17 + 0.45684969234 * v20 + 0.0451999395685 * v25
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.59759833856e-14 * 1 + 0.0634264518683 * v1 + 0.417525688773 * v5 + -0.144212698409 * v8 + 0.484227506761 * v15 + 0.26664794233 * v20 + 0.146936159128 * v25 + -0.15994813624 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.47250814411e-14 * 1 + 0.151614782567 * v5 + -0.0662652606431 * v8 + 0.316022710448 * v9 + 0.386015529618 * v15 + 0.204273575404 * v17 + -0.087317400114 * v20 + 0.0683686079201 * v21
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85303603816e-13 * 1 + 0.2300639175 * v1 + 0.144098714215 * v5 + 0.0882254306186 * v9 + 0.20643209236 * v10 + 0.092605607216 * v20 + 0.237230429554 * v22 + 0.0512640860023 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.84758128289e-15 * 1 + 0.14587448937 * v15 + 0.449718088202 * v16 + -0.0271582129055 * v17 + 0.316138336932 * v21 + 0.184467813122 * v22 + -0.07732464481 * v24 + 0.165956942244 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.49257366114e-13 * 1 + 0.119883682039 * v5 + 0.120713754051 * v7 + 0.0418675732287 * v8 + 0.362917376539 * v9 + 0.20180200508 * v15 + -0.00768965361922 * v18 + 0.219554979748 * v21
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.31743502124e-14 * 1 + 0.119540630918 * v1 + 0.402723268119 * v5 + 0.225855210363 * v6 + 0.164770937652 * v11 + 0.217184517215 * v21 + 0.269804767184 * v23 + -0.360308933625 * v25
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.04700364664e-14 * 1 + -0.152172200114 * v4 + 0.198513528496 * v5 + -0.0331693202039 * v17 + 0.299049791418 * v20 + 0.360537065262 * v21 + 0.185307901084 * v22 + 0.180850048972 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.20856248546e-14 * 1 + -0.199522490354 * v3 + 0.199748600948 * v5 + 0.165605376422 * v11 + 0.0392990203729 * v12 + 0.183020174327 * v17 + 0.190595470098 * v25 + 0.488546446908 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.8448587963e-14 * 1 + 0.146661625742 * v1 + 0.154036485598 * v5 + 0.00186966096126 * v7 + 0.165058492808 * v9 + 0.150602551544 * v15 + 0.314978638719 * v20 + 0.108217867293 * v21
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.44391044959e-13 * 1 + 0.129501547966 * v1 + 0.134727806859 * v4 + 0.338235388367 * v5 + -0.0386980544098 * v7 + -0.0198234147698 * v8 + 0.0586484691565 * v13 + 0.380947928115 * v20
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.46152955456e-15 * 1 + 0.0768016771935 * v5 + 0.0846716375613 * v8 + 0.0746318758291 * v11 + 0.05429048834 * v15 + 0.277222484925 * v17 + -0.0645678835288 * v21 + 0.541467798747 * v22
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.04570791583e-14 * 1 + 0.298668374336 * v1 + 0.0158142890612 * v3 + 0.027658239082 * v15 + 0.0248984265499 * v16 + 0.279952605386 * v17 + 0.229057278027 * v23 + 0.110015452913 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.66587107614e-14 * 1 + 0.180507799297 * v1 + 0.126861548441 * v4 + 0.39333995131 * v5 + -0.128923546233 * v8 + 0.00553042879886 * v17 + 0.141425737216 * v20 + 0.283360641157 * v21
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.4141468016e-13 * 1 + 0.304191968995 * v1 + 0.0358955751478 * v3 + 0.109073404592 * v4 + 0.110610068162 * v9 + 0.0523160629422 * v22 + 0.163308421026 * v23 + 0.329095700419 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.14868442437e-14 * 1 + -0.1089889943 * v2 + -0.0870579599039 * v3 + 0.33326008155 * v5 + 0.225348146433 * v20 + 0.326894620548 * v21 + 0.225285702925 * v25 + 0.130281688385 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.96554408117e-13 * 1 + 0.205975653536 * v1 + 0.251356819343 * v4 + 0.307396318384 * v5 + -0.0744823660586 * v8 + -0.00395055548438 * v17 + 0.275652508773 * v21 + 0.085185655643 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02598486699e-13 * 1 + -0.0967930443931 * v3 + 0.0457317495079 * v9 + 0.260198015541 * v11 + 0.0669141658186 * v19 + 0.352963650465 * v21 + 0.171645781679 * v22 + 0.229142478086 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.18523288669e-13 * 1 + 0.0488616716279 * v4 + 0.101341808979 * v5 + 0.123317111548 * v13 + 0.0455676052071 * v17 + -0.00330549998336 * v20 + 0.508628074869 * v21 + 0.161011778847 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.87495938161e-13 * 1 + 0.247595594817 * v7 + 0.13514778381 * v13 + 0.192698134434 * v20 + 0.419701515718 * v21 + 0.207586595259 * v22 + -0.0960313071171 * v27 + -0.0793945876432 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.79595650319e-15 * 1 + 0.0531825883636 * v2 + -0.111526424354 * v5 + 0.270374904321 * v9 + 0.0177890704209 * v16 + 0.353270993694 * v21 + 0.255071743054 * v22 + 0.231911062198 * v25
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.63479057801e-14 * 1 + -0.0910889811927 * v1 + -0.39047922891 * v6 + 0.128623974347 * v15 + 0.308362796777 * v20 + 0.0895166705658 * v21 + 0.299846561659 * v22 + -0.0377006134185 * v27
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.22595143506e-13 * 1 + 0.0196614433906 * v1 + 0.00444374349621 * v7 + 0.272817652476 * v9 + 0.209921048871 * v20 + 0.197903683706 * v21 + 0.286545116625 * v22 + 0.00646235653804 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.29764347857e-13 * 1 + 0.532896340683 * v0 + 0.0859563932283 * v9 + -0.359706668948 * v16 + 0.119443037026 * v17 + 0.433750759708 * v22 + 0.373038851984 * v23 + 0.100793943004 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.28357856136e-15 * 1 + -0.0370078874346 * v0 + 0.121985278416 * v1 + 0.133008022517 * v3 + 0.190200157025 * v4 + 0.138575487245 * v16 + 0.389836277466 * v21 + 0.203395416685 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.710945554e-14 * 1 + 0.16964864029 * v1 + 0.345397859355 * v5 + 0.0685186589594 * v9 + 0.138177008483 * v19 + 0.0916385275508 * v21 + 0.193568698923 * v22 + 0.0834231958127 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.67376683166e-13 * 1 + 0.139383538229 * v1 + 0.216760643188 * v9 + 0.317754871524 * v15 + 0.136626233687 * v20 + 0.26312743801 * v21 + -0.0938768992095 * v27 + 0.0942783855059 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12925214083e-13 * 1 + 0.10688918034 * v4 + 0.10826661981 * v5 + 0.434798926053 * v9 + 0.237557625905 * v17 + 0.0653159235038 * v22 + -0.0471391047219 * v27 + 0.0930489740896 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
