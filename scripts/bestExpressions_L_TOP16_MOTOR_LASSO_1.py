from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58362003114e-14 * 1 + 0.0 * v0 + 0.0909247678865 * v1 + 0.0 * v3 + 0.0949545484425 * v5 + 0.0394015942114 * v7 + 0.205094128094 * v11 + 0.252643036784 * v15 + 0.153130825768 * v16 + 0.0461370338933 * v17 + 0.0172480551657 * v21 + 0.123286132266 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.29411099227e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v3 + 0.250897353108 * v5 + -0.0 * v6 + 0.223780917209 * v7 + 0.161731745017 * v10 + -0.0 * v15 + 0.0203534800751 * v16 + 0.108004423614 * v17 + 0.0 * v20 + -0.0 * v21 + 0.209763774856 * v22 + 0.0495148993672 * v23 + -0.0759806148974 * v25
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.55803865905e-14 * 1 + 0.115304551224 * v1 + 0.0 * v3 + 0.0 * v4 + 0.16826053299 * v5 + 0.0 * v7 + 0.173001771016 * v15 + 0.0327712328983 * v16 + 0.134169256536 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0689187697713 * v24 + 0.0 * v27 + 0.262576764409 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23471116625e-13 * 1 + 0.0 * v0 + 0.0511938323571 * v1 + 0.0275208694692 * v3 + 0.214733923334 * v4 + 0.137758036341 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0103014595228 * v15 + 0.128227110015 * v17 + 0.169463656061 * v18 + 0.0840579613362 * v21 + 0.108295428508 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.13293907059e-14 * 1 + 0.0 * v0 + 0.00564201792889 * v3 + 0.15067168699 * v5 + 0.0 * v7 + 0.0 * v8 + 0.06372306218 * v10 + 0.0 * v12 + 0.0 * v17 + 0.0729527788949 * v18 + 0.0 * v19 + 0.146003245348 * v20 + 0.296582169231 * v21 + 0.180250584814 * v22 + 0.0 * v24 + 0.0622632731631 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.06991661385e-14 * 1 + 0.0 * v0 + 0.388253400294 * v1 + 0.0 * v4 + 0.218786215013 * v5 + 0.021194461317 * v6 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.142164008378 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0408901320534 * v21 + 0.0948683931163 * v22 + 0.0 * v27 + 0.0176064682307 * v28
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21417405267e-13 * 1 + 0.0 * v0 + 0.118787017179 * v1 + 0.260494303502 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0198050751951 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.261204545261 * v21 + 0.297013368317 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53515784373e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v11 + 0.0 * v12 + 0.0719678465627 * v13 + 0.0 * v15 + 0.0 * v17 + 0.388182237897 * v20 + 0.242638820561 * v21 + 0.0643070514087 * v22 + 0.10267501671 * v27 + 0.037474020804 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39758238106e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.363927576494 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v18 + 0.247848080084 * v21 + 0.226189457985 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.18324594979e-14 * 1 + 0.0463479489882 * v3 + 0.0 * v4 + 0.404857046704 * v5 + 0.0782503707478 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0431381319251 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0370186892982 * v20 + 0.244564874664 * v21 + 0.0 * v24 + 0.0 * v25 + 0.107452564906 * v28
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28700650822e-13 * 1 + 0.0921048583507 * v1 + 0.0620515384678 * v3 + 0.0 * v4 + 0.209353603425 * v5 + 0.0 * v8 + 0.209183447742 * v9 + 0.0709230037779 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v19 + 0.0 * v20 + 0.115054387283 * v21 + 0.128059323057 * v22 + 0.0706599205418 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06725941428e-13 * 1 + 0.366645009755 * v1 + 0.0 * v3 + 0.0328469910638 * v4 + 0.0798751604822 * v5 + 0.0 * v8 + 0.059997993644 * v9 + 0.0 * v12 + 0.0407257264318 * v13 + 0.0192238232782 * v16 + 0.00900709556806 * v17 + 0.0430724472269 * v18 + 0.134153525317 * v20 + 0.135233250098 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29328137385e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.126221550463 * v3 + 0.0985080605147 * v4 + 0.324534859459 * v5 + 0.232328471454 * v7 + 0.0 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0179703198828 * v19 + 0.0880850405753 * v20 + 0.0199188527877 * v21 + 0.0 * v27 + 0.0300310098018 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69694871589e-14 * 1 + 0.0 * v1 + 0.0180653607708 * v4 + 0.441471325067 * v5 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.253273533512 * v15 + 9.68713029292e-05 * v17 + 0.0 * v19 + 0.105434763634 * v20 + 0.0820620592505 * v21 + 0.150253547392 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64136199396e-14 * 1 + 0.159134038548 * v1 + 0.150917838278 * v5 + 0.100695742675 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0611213090825 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.345552256271 * v21 + 0.0967724648584 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53317214478e-14 * 1 + 0.282605158259 * v2 + 0.0 * v3 + 0.14613174522 * v5 + 0.0548681889682 * v7 + 0.0 * v9 + 0.0744341622709 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v16 + 0.0 * v19 + 0.0 * v20 + 0.234904561595 * v25 + 0.166556760774 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.14635058639e-13 * 1 + 0.0558840153012 * v0 + 0.192975939373 * v1 + 0.0639566282199 * v3 + 0.0 * v4 + 0.0717920955511 * v5 + 0.0409410713854 * v7 + 0.14437025708 * v11 + 0.0177589586951 * v16 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.174383827755 * v21 + 0.0564449727629 * v22 + 0.0 * v23 + 0.16297999169 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83095884827e-13 * 1 + 0.0 * v0 + 0.20868941515 * v1 + 0.0559319575582 * v3 + 0.297705622259 * v5 + 0.168072883871 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.125537359435 * v21 + 0.0464318906867 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21713487799e-13 * 1 + 0.369343448683 * v1 + 0.0 * v2 + 0.0 * v4 + 0.220850439719 * v5 + 0.108843432915 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185838964947 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21043518561e-14 * 1 + 0.0 * v1 + 0.00307007811617 * v3 + 0.0 * v4 + 0.251965387829 * v5 + 0.0 * v7 + 0.0 * v8 + 0.268344777096 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.16368682845 * v20 + 0.23538443709 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.40612533531e-13 * 1 + 0.0351497768722 * v1 + 0.130093422375 * v3 + 0.0 * v4 + 0.0125352861657 * v5 + 0.102555952749 * v7 + 0.0 * v8 + 0.162185621066 * v11 + 0.039222844538 * v16 + 0.0 * v17 + 0.202289914589 * v20 + 0.0 * v21 + 0.181450920053 * v22 + 0.0 * v25 + 0.0 * v27 + 0.164979083866 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.69221364918e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.1381161687 * v5 + 0.0905164426979 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0137973275243 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.26397040854 * v21 + 0.0799659212837 * v22 + 0.370105903826 * v25 + 0.0441244322586 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30138445695e-15 * 1 + 0.0 * v0 + 0.0263567882365 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100849141605 * v5 + 0.0 * v7 + 0.175936534328 * v9 + 0.378016667427 * v11 + 0.0216853727504 * v17 + 0.0 * v20 + 0.204061612931 * v21 + 0.0 * v22 + 0.0691711939583 * v23 + 0.0 * v26 + 0.0 * v28
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24975891032e-13 * 1 + 0.0896135879731 * v1 + 0.0 * v4 + 0.214104493732 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0152941627303 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0596575360515 * v15 + 0.100591664504 * v17 + 0.00235177694695 * v20 + 0.202220106855 * v22 + 0.0 * v24 + 0.0 * v27 + 0.290349877236 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53749971623e-13 * 1 + 0.0 * v0 + 0.140719667854 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0347682943643 * v5 + 0.0 * v7 + 0.0433157595613 * v10 + 0.165244108105 * v11 + 0.0700675107342 * v15 + 0.0 * v16 + 0.218191921636 * v17 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.219017921351 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.37929974769e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.321916201142 * v5 + 0.150820988951 * v7 + 0.166375643707 * v9 + 0.0 * v10 + 0.0 * v13 + 0.0865565873529 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.230706791816 * v21 + 0.0 * v23 + 0.0 * v27 + 0.00798967239836 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.07209245038e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.484497668735 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0978881068644 * v9 + 0.0 * v11 + 0.0918044606622 * v15 + 0.0 * v17 + 0.0 * v18 + 0.253728564537 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.68620211103e-15 * 1 + 0.163887609339 * v1 + 0.0 * v2 + 0.0760193720852 * v3 + 0.40307982646 * v5 + 0.041822078295 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.0 * v18 + 0.0 * v19 + 0.17640484305 * v20 + 0.0 * v24 + 0.0 * v25 + 0.080691528378 * v26
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.50002079258e-14 * 1 + 0.231247323213 * v1 + 0.0 * v4 + 0.325855392253 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0241702876465 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.106324453401 * v21 + 0.272942163641 * v22 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2464555086e-13 * 1 + 0.131317445678 * v1 + 0.0 * v3 + 0.100181546261 * v4 + 0.213660453235 * v5 + 0.000443291305799 * v7 + 0.0 * v8 + 0.0429129711831 * v9 + 0.0 * v13 + 0.0545051871743 * v15 + 0.0 * v17 + 0.0 * v19 + 0.0136844109965 * v20 + 0.262993044776 * v21 + 0.0 * v22 + 0.119896316423 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13940555594e-13 * 1 + 0.0569847630937 * v1 + 0.0 * v3 + 0.0 * v4 + 0.266608271216 * v5 + 0.0748782307411 * v7 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.108855092747 * v15 + 0.0 * v16 + 0.00255670808832 * v17 + 0.131259054487 * v19 + 0.240926249753 * v21 + 0.0867635062342 * v22 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18182694366e-14 * 1 + 0.0678223389474 * v1 + 0.0 * v2 + 0.0 * v4 + 0.219297927452 * v5 + 0.00805564626078 * v7 + 0.0 * v8 + 0.00568062754956 * v12 + 0.0837346250938 * v13 + 0.0 * v18 + 0.247029407234 * v20 + 0.0785797344117 * v21 + 0.170305263319 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0934237941014 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47724448778e-14 * 1 + 0.0 * v4 + 0.157537301468 * v5 + 0.0 * v8 + 0.310299503128 * v9 + 0.113884349033 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v17 + 0.0 * v20 + 0.234489464027 * v21 + 0.0540664705636 * v22 + 0.0 * v25 + 0.0 * v27 + 0.085801798372 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.03562459535e-13 * 1 + 0.128150063196 * v3 + 0.293503397967 * v5 + -0.345104088506 * v6 + 0.0395466017663 * v7 + 0.0 * v9 + -0.202808248643 * v10 + 0.0 * v11 + 0.0 * v13 + -0.0 * v14 + 0.0 * v17 + 0.0266362284006 * v20 + 0.0547880094687 * v21 + 0.132683010768 * v22 + 0.0 * v25 + 0.097965039102 * v26
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.28817594137e-13 * 1 + 0.0 * v3 + 0.0316943179014 * v4 + 0.597341278774 * v5 + -0.0 * v6 + 0.0132332877777 * v7 + 0.0 * v8 + -0.199189063077 * v10 + 0.0 * v12 + 0.0 * v13 + 0.12549848928 * v14 + 0.106575693212 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v20 + 0.0 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.04700022725e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.273828701431 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0903546107324 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.552394316862 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.47963702642e-14 * 1 + 0.271233611205 * v1 + 0.0 * v3 + 0.0 * v4 + 0.242066998884 * v5 + 0.0 * v8 + 0.0 * v12 + 0.088853586072 * v13 + -0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.133618914028 * v21 + 0.141552819109 * v22 + 0.0 * v23 + 0.0351275594573 * v25 + 0.0 * v27
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.71805202695e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.36130008525 * v5 + 0.0 * v8 + 0.184742590869 * v9 + 0.0 * v12 + 0.0588857796467 * v15 + 0.0 * v17 + 0.0391239708766 * v21 + 0.00538806259998 * v22 + 0.0124526573345 * v23 + 0.0809902340677 * v24 + 0.0 * v25 + 0.180115323392 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.23893178525e-14 * 1 + 0.140941334398 * v1 + -0.0 * v4 + 0.238277192326 * v5 + 0.0 * v7 + 0.183028673116 * v9 + 0.00539465684576 * v10 + 0.0962156836639 * v11 + 0.0 * v13 + 0.137579119096 * v15 + 0.0 * v17 + 0.0 * v20 + 0.0623068397703 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0797936987916 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86044955531e-14 * 1 + 0.0 * v1 + 0.125027874011 * v3 + 0.0493844746772 * v4 + 0.104715331379 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0388973320565 * v13 + 0.305199214126 * v15 + 0.0842829436847 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.147091345721 * v22 + 0.0 * v27 + 0.0893486023104 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
