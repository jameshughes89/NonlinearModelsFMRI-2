from math import *

def funcL_LANGUAGE_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26165033973e-14 * 1 + 0.0 * v0 + 0.228290641754 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0177730813529 * v11 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.372461722696 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.00992451773044 * v27 + 0.232801808368 * v28
def funcL_LANGUAGE_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00472361188e-13 * 1 + 0.0 * v1 + -0.0 * v2 + -0.0 * v5 + -0.0 * v6 + 0.0200036308352 * v7 + 0.0 * v8 + -0.0 * v15 + 0.366555942834 * v17 + 0.315160189929 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v25 + 0.135874614125 * v27 + -0.0 * v28
def funcL_LANGUAGE_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.2299756216e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + -0.0 * v4 + -0.0 * v8 + -0.0 * v12 + -0.0 * v13 + -0.0 * v16 + 0.132782361958 * v17 + 0.406862922825 * v18 + 0.0871920504347 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v27 + 0.281837084669 * v28
def funcL_LANGUAGE_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.19424609551e-14 * 1 + 0.345941947772 * v1 + 0.0 * v4 + 0.0 * v6 + 0.220791115017 * v7 + 0.0 * v9 + 0.0 * v12 + 0.0629528132268 * v13 + 0.0 * v14 + 0.0 * v15 + 0.168298982452 * v17 + 0.0 * v20 + 0.017930808608 * v21 + 0.0407814029641 * v22 + 0.0 * v25 + 0.0623466538648 * v27 + 0.0 * v28
def funcL_LANGUAGE_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.74511570801e-14 * 1 + 0.14377090634 * v0 + 0.0 * v1 + -0.0 * v4 + 0.0 * v8 + 0.0185192497526 * v9 + 0.141561654701 * v11 + 0.0 * v13 + 0.100866286703 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.372385800211 * v21 + 0.0 * v24 + 0.0425451210283 * v27 + 0.0 * v28
def funcL_LANGUAGE_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39989875066e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.00578965993864 * v6 + 0.273291706991 * v7 + 0.0 * v8 + -0.0 * v13 + 0.0 * v15 + 0.404013904809 * v17 + 0.0166821660354 * v18 + 0.0 * v20 + -0.0 * v23 + -0.0 * v26 + 0.0622055794831 * v27
def funcL_LANGUAGE_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9765578947e-13 * 1 + 0.115028670122 * v1 + -0.0 * v2 + -0.0 * v5 + 0.0607641039692 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.398742780896 * v17 + 0.0701750090785 * v18 + 0.0187353823211 * v20 + 0.170170401744 * v21 + -0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_LANGUAGE_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.4129881248e-14 * 1 + 0.0 * v0 + 0.152881541365 * v1 + 0.168092768463 * v7 + 0.101871379619 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.209221773462 * v17 + 0.041439794158 * v18 + 0.0 * v20 + 0.168617844821 * v21 + 0.0333663114779 * v24 + 0.04175337491 * v27
def funcL_LANGUAGE_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.13596572724e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.123372412206 * v7 + 0.0 * v10 + 0.0 * v14 + 0.14242125174 * v16 + 0.289512026729 * v17 + 0.0448418993797 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0512737777989 * v21 + 0.0 * v22 + 0.0 * v23 + 0.226776287696 * v24
def funcL_LANGUAGE_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.45482123125e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0603203687253 * v9 + 0.265637473899 * v12 + 0.0 * v13 + 0.0 * v15 + 0.425093308708 * v17 + 0.029223565357 * v18 + 0.0 * v20 + 0.0907944359849 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.27863375409e-14 * 1 + -0.0 * v0 + -0.0 * v1 + -0.140464786869 * v5 + -0.0 * v8 + 0.322796207713 * v9 + 0.0 * v10 + -0.0671329027789 * v14 + -0.285121517675 * v15 + -0.0 * v16 + 0.511461940208 * v17 + -0.0 * v20 + -0.0 * v21 + -0.236736570139 * v22 + -0.0 * v25 + -0.0 * v26 + 0.0 * v28
def funcL_LANGUAGE_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.51153099949e-14 * 1 + 0.0 * v0 + 0.0 * v3 + -0.0 * v5 + 0.188863969876 * v7 + 0.0 * v10 + 0.0 * v11 + 0.1151539591 * v14 + 0.048961763938 * v15 + 0.0 * v16 + 0.489697266485 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0566154014953 * v28
def funcL_LANGUAGE_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.37443770169e-14 * 1 + 0.0 * v0 + -0.0 * v1 + -0.0 * v2 + -0.00453276657401 * v5 + 0.164090401183 * v7 + 0.0 * v8 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.228262993998 * v18 + 0.0 * v20 + 0.0910120645035 * v21 + 0.0 * v23 + 0.220395516474 * v27 + 0.25843318484 * v28
def funcL_LANGUAGE_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.71464183049e-13 * 1 + 0.0679561990494 * v0 + 0.0 * v1 + -0.0 * v4 + 0.012088148412 * v8 + 0.0 * v9 + 0.112366314426 * v10 + 0.0520994390853 * v11 + 0.0 * v16 + 0.263691874176 * v17 + 0.0 * v18 + 0.0 * v20 + 0.143834172772 * v21 + 0.0 * v22 + 0.0 * v25 + 0.297176925567 * v27 + 0.026414413597 * v28
def funcL_LANGUAGE_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56128430353e-13 * 1 + 0.0950277924042 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.304099396035 * v17 + 0.0 * v18 + 0.0603725199381 * v20 + 0.229370731834 * v21 + 0.0 * v22 + 0.0 * v27 + 0.246657392525 * v28
def funcL_LANGUAGE_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.75359273575e-14 * 1 + -0.0 * v0 + 0.0963562970643 * v1 + 0.0 * v6 + 0.195896509225 * v7 + -0.0 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v15 + 0.292443167482 * v17 + 0.153325979524 * v18 + 0.129842009462 * v20 + 0.105302148355 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02968759233e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.124609413297 * v8 + 0.0842940658342 * v10 + 0.0264189892698 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0210538278061 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.212422417609 * v21 + 0.0 * v22 + 0.279634898898 * v27
def funcL_LANGUAGE_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.67821642471e-14 * 1 + 0.0 * v0 + 0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.102944537361 * v7 + 0.152515679714 * v8 + 0.0 * v9 + -0.0 * v12 + -0.0 * v13 + 0.226350125221 * v17 + 0.0 * v18 + 0.0 * v20 + 0.18454140449 * v21 + 0.0 * v24 + 0.0320180125857 * v27 + 0.247885758524 * v28
def funcL_LANGUAGE_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.00590380726e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + 0.226305577406 * v6 + 0.0309816672854 * v7 + -0.0 * v9 + 0.0 * v10 + 0.0 * v15 + 0.456748480053 * v17 + 0.166357962831 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0391351605839 * v21 + 0.0 * v22 + -0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.41763976535e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.49314791064 * v17 + 0.0 * v18 + 0.0 * v20 + 0.243073731737 * v21 + 0.0 * v24 + 0.118771939688 * v27 + 0.0250449622738 * v28
def funcL_LANGUAGE_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26221950116e-13 * 1 + 0.00897407958731 * v0 + 0.0517323803681 * v1 + 0.0 * v4 + 0.0 * v6 + 0.483401134848 * v7 + 0.0 * v9 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0246621510433 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0671319689019 * v21 + 0.0 * v23 + 0.255262968392 * v27 + 0.128032714355 * v28
def funcL_LANGUAGE_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.72347082763e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0670183385611 * v7 + 0.0 * v8 + 0.0529936362376 * v9 + 0.0 * v11 + 0.183797564541 * v15 + 0.0 * v16 + 0.174141174573 * v17 + 0.199587266865 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v23 + 0.201846112787 * v27 + 0.0 * v28
def funcL_LANGUAGE_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.49888475842e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v16 + 0.75596110274 * v17 + 0.00792878487865 * v18 + 0.0437614029603 * v19 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.38000435807e-14 * 1 + 0.0 * v0 + 0.16224718526 * v1 + -0.0 * v2 + 0.0 * v3 + 0.446284556133 * v8 + 0.0315499325297 * v11 + 0.0 * v12 + 0.0 * v16 + 0.164541065671 * v17 + 0.0717079411487 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0268671071841 * v27 + 0.0 * v28
def funcL_LANGUAGE_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.46234979355e-13 * 1 + 0.0 * v0 + 0.176204241827 * v1 + 0.0 * v3 + 0.0 * v4 + 0.149162362071 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0840415405152 * v17 + 0.0 * v18 + 0.0 * v19 + 0.117490784016 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0260777353166 * v27 + 0.347281270763 * v28
def funcL_LANGUAGE_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.49082902208e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0606551011217 * v7 + 0.326141471863 * v8 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.368238736062 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0681815545932 * v23 + 0.0 * v27 + 0.0607326393195 * v28
def funcL_LANGUAGE_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11366175237e-13 * 1 + 0.0 * v0 + 0.0500702437207 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0897926292094 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0531785572521 * v17 + 0.200786563968 * v18 + 0.288163197505 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.253206712033 * v27 + 0.0 * v28
def funcL_LANGUAGE_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12957039195e-14 * 1 + 0.146403457913 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.00323809023627 * v7 + 0.127923110278 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v15 + 0.221236006738 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0343416254621 * v21 + 0.0 * v26 + 0.26114090438 * v27 + 0.116042842142 * v28
def funcL_LANGUAGE_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.02605827869e-13 * 1 + 0.0 * v0 + 0.0316789297092 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0971089969304 * v8 + 0.0 * v9 + 0.0 * v13 + -0.0 * v15 + 0.0 * v16 + 0.210577330394 * v17 + 0.286630886388 * v20 + 0.00844006767893 * v21 + 0.0281458242488 * v22 + 0.0684771839841 * v27 + 0.167537967267 * v28
def funcL_LANGUAGE_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76545911376e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v5 + -0.0 * v6 + 0.363724699662 * v7 + 0.0 * v8 + 0.0 * v15 + 0.315126702869 * v17 + 0.185391300097 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.42200436299e-14 * 1 + 0.0 * v0 + 0.0571527968468 * v1 + 0.0 * v4 + -0.0 * v5 + 0.0152435362859 * v8 + -0.0 * v9 + -0.0 * v11 + -0.0 * v15 + -0.0 * v16 + 0.235285625495 * v17 + 0.0778249346263 * v18 + 0.318144122583 * v20 + 0.0789401676215 * v21 + 0.0 * v22 + 0.0 * v23 + 0.00619518732563 * v28
def funcL_LANGUAGE_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.68361941609e-15 * 1 + 0.114762174152 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.381571495538 * v7 + 0.0 * v8 + 0.0648275801342 * v15 + 0.316235046869 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161196139033 * v21 + 0.0 * v22 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.64966623824e-13 * 1 + 0.123838952303 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0446109452027 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v11 + 0.0115676411896 * v13 + 0.0 * v15 + 0.465643985434 * v17 + 0.0 * v18 + 0.0 * v20 + 0.020433935414 * v21 + 0.0450977039274 * v23 + 0.0506894416396 * v27 + 0.139548406308 * v28
def funcL_LANGUAGE_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.70923529289e-14 * 1 + 0.0839116310335 * v1 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0561598065137 * v7 + 0.0 * v10 + 0.0 * v11 + -0.137447894818 * v14 + 0.0 * v15 + 0.0951099207699 * v16 + 0.21869914791 * v17 + 0.317684864141 * v20 + 0.113968971932 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0037043302189 * v27
def funcL_LANGUAGE_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.88775069915e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.264848806608 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v15 + 0.589956397621 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.3644555513e-13 * 1 + 0.134729844472 * v1 + -0.0 * v4 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.268073974873 * v17 + 0.308068673004 * v18 + 0.0880877175922 * v20 + 0.0771234457784 * v21 + 0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_LANGUAGE_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.72529742346e-13 * 1 + 0.0 * v0 + 0.110590646625 * v1 + -0.0 * v2 + -0.0 * v4 + 0.379321606587 * v8 + 0.0 * v9 + 0.0 * v10 + 0.102764125913 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.263148298927 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v28
def funcL_LANGUAGE_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.40347748792e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.185594737091 * v7 + 0.138541687797 * v8 + 0.0528351934381 * v9 + 0.109763566638 * v11 + 0.189081995916 * v16 + 0.0 * v17 + 0.0838326634052 * v18 + 0.0 * v20 + 0.062165602069 * v21 + -0.0 * v22 + -0.0 * v23 + -0.329416231478 * v26 + 0.0504218703776 * v27
def funcL_LANGUAGE_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.72519745834e-14 * 1 + 0.0193210407153 * v0 + 0.00900579774875 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0992981336067 * v10 + 0.0775022349331 * v11 + 0.0689186196036 * v12 + 0.0 * v15 + 0.0 * v16 + 0.175253019992 * v17 + 0.281417034727 * v20 + 0.0 * v21 + 0.101208283483 * v27 + 0.125032253583 * v28
def funcL_LANGUAGE_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.90785835621e-14 * 1 + -0.0 * v0 + 0.160655910519 * v1 + -0.0942980363186 * v3 + -0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + -0.0 * v10 + 0.143700410334 * v11 + 0.0 * v15 + -0.0 * v16 + 0.167006901685 * v17 + 0.42364795273 * v18 + -0.0 * v24 + -0.235129079262 * v25 + 0.0 * v27

funcs = [funcL_LANGUAGE_100307,funcL_LANGUAGE_100408,funcL_LANGUAGE_101006,funcL_LANGUAGE_101107,funcL_LANGUAGE_101309,funcL_LANGUAGE_101410,funcL_LANGUAGE_101915,funcL_LANGUAGE_102008,funcL_LANGUAGE_102311,funcL_LANGUAGE_102816,funcL_LANGUAGE_103111,funcL_LANGUAGE_103414,funcL_LANGUAGE_103515,funcL_LANGUAGE_103818,funcL_LANGUAGE_104012,funcL_LANGUAGE_104820,funcL_LANGUAGE_105014,funcL_LANGUAGE_105115,funcL_LANGUAGE_105216,funcL_LANGUAGE_105923,funcL_LANGUAGE_106016,funcL_LANGUAGE_106319,funcL_LANGUAGE_106521,funcL_LANGUAGE_107321,funcL_LANGUAGE_107422,funcL_LANGUAGE_108121,funcL_LANGUAGE_108323,funcL_LANGUAGE_108525,funcL_LANGUAGE_108828,funcL_LANGUAGE_109123,funcL_LANGUAGE_109325,funcL_LANGUAGE_110411,funcL_LANGUAGE_111312,funcL_LANGUAGE_111413,funcL_LANGUAGE_111514,funcL_LANGUAGE_111716,funcL_LANGUAGE_113215,funcL_LANGUAGE_113619,funcL_LANGUAGE_113922,funcL_LANGUAGE_114419,]

def getFuncs(): return funcs
