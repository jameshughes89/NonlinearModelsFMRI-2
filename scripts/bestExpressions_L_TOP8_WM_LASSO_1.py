from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.12081366913e-13 * 1 + 0.0 * v0 + 0.222215832395 * v4 + 0.148962299892 * v15 + 0.133675150372 * v16 + 0.327081759655 * v17 + 0.0164319764209 * v20 + 0.0 * v27
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.06324513319e-14 * 1 + 0.0 * v4 + 0.286412425163 * v5 + 0.0 * v8 + 0.0 * v15 + 0.250744529854 * v17 + 0.104133815229 * v20 + 0.250289921481 * v21
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.38798647104e-13 * 1 + 0.0 * v3 + 0.209596016742 * v5 + 0.0649279128107 * v9 + 0.0528364781158 * v12 + 0.0 * v13 + 0.236958648419 * v16 + 0.19128313838 * v19
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43606271016e-14 * 1 + 0.0 * v1 + 0.0205779947455 * v4 + 0.249658364302 * v17 + 0.0934611129295 * v18 + 0.165690123663 * v20 + 0.363188071584 * v22 + 0.0 * v23
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.1330665297e-13 * 1 + 0.180609422026 * v4 + 0.212308949134 * v5 + 0.00976170301122 * v6 + 0.0 * v14 + 0.266675844423 * v20 + 0.0 * v26 + 0.198009730211 * v27
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.83485832974e-14 * 1 + 0.164706830847 * v5 + 0.152138731146 * v10 + 0.0 * v11 + 0.0364916813563 * v15 + 0.267601132296 * v17 + 0.030014272236 * v18 + 0.276682545998 * v23
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.06005864643e-13 * 1 + 0.18858522207 * v1 + 0.0 * v15 + 0.0 * v17 + 0.0245967221352 * v18 + 0.256460155075 * v20 + 0.344766501479 * v21 + 0.0 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.60678177677e-14 * 1 + 0.0527568055294 * v1 + 0.41427221884 * v2 + 0.0 * v6 + 0.0916080277308 * v7 + 0.100377232175 * v17 + 0.244838194665 * v20 + 0.0 * v27
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.5422487793e-13 * 1 + 0.0 * v4 + 0.25512564588 * v5 + 0.137584268891 * v9 + 0.153712183744 * v15 + 0.0623810982028 * v17 + 0.244200967975 * v21 + 0.0759561735212 * v22
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.01296529905e-13 * 1 + 0.311489923737 * v4 + 0.156317131249 * v7 + 0.0269062983255 * v8 + 0.0 * v17 + 0.023202536628 * v20 + 0.397559970854 * v21 + 0.0 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.22180345183e-14 * 1 + 0.0 * v0 + 0.137839466518 * v5 + 0.0626226461374 * v8 + 0.0812207205984 * v16 + 0.283201255522 * v21 + 0.326552661689 * v22 + 0.000397272010434 * v23
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.45896207007e-13 * 1 + 0.161268894714 * v1 + 0.223215180306 * v7 + 0.199920242619 * v11 + 0.109058389033 * v15 + 0.0476006866694 * v17 + 0.177637929081 * v20 + 0.00125013220092 * v27
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.14261793796e-15 * 1 + 0.0 * v2 + 0.154832993722 * v3 + 0.0 * v4 + 0.0390121791685 * v10 + 0.480608403734 * v17 + 0.118534241097 * v20 + 0.0 * v25
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20922882866e-14 * 1 + 0.0053828542607 * v1 + 0.345432256332 * v5 + 0.0 * v8 + 0.322490518263 * v15 + 0.167335026183 * v20 + 0.103993783285 * v25 + 0.0 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14132786932e-14 * 1 + 0.106837960396 * v5 + 0.0 * v8 + 0.226662655533 * v9 + 0.359593622438 * v15 + 0.0992895860925 * v17 + 0.0 * v20 + 0.0514470995919 * v21
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.90040610829e-13 * 1 + 0.187293209523 * v1 + 0.109251293817 * v5 + 0.0899209838699 * v9 + 0.180607454091 * v10 + 0.116467477589 * v20 + 0.210386659972 * v22 + 0.0158035204056 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.55848396959e-14 * 1 + 0.0914991472663 * v15 + 0.311611742676 * v16 + 0.0 * v17 + 0.270619968275 * v21 + 0.20279974085 * v22 + 0.0 * v24 + 0.125687163493 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.47542149327e-13 * 1 + 0.0814643854696 * v5 + 0.08984810655 * v7 + 0.0284096360017 * v8 + 0.327191991078 * v9 + 0.156387463095 * v15 + 0.0 * v18 + 0.228234949582 * v21
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.8790961437e-14 * 1 + 0.0779347960587 * v1 + 0.146247080296 * v5 + 0.164024072835 * v6 + 0.185335665999 * v11 + 0.14860060813 * v21 + 0.197611669907 * v23 + 0.0 * v25
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00061252677e-13 * 1 + 0.0 * v4 + 0.0960097624218 * v5 + 0.0 * v17 + 0.210684794459 * v20 + 0.355638477928 * v21 + 0.125338860438 * v22 + 0.135242937206 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.15490811877e-14 * 1 + 0.0 * v3 + 0.124628490357 * v5 + 0.134189386287 * v11 + 0.0 * v12 + 0.110643319922 * v17 + 0.139988633534 * v25 + 0.409356678375 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.17012830016e-14 * 1 + 0.132390648173 * v1 + 0.123340932226 * v5 + 0.0 * v7 + 0.146734360808 * v9 + 0.124301376596 * v15 + 0.299933980133 * v20 + 0.0884819347015 * v21
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.38398114624e-13 * 1 + 0.0970178598033 * v1 + 0.15354929524 * v4 + 0.274365818066 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0121870079386 * v13 + 0.33827640436 * v20
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36752316844e-15 * 1 + 0.0 * v5 + 0.0735151455695 * v8 + 0.0155278054578 * v11 + 0.0 * v15 + 0.263756483375 * v17 + 0.0 * v21 + 0.557019404519 * v22
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.64802699433e-14 * 1 + 0.270025827681 * v1 + 0.0 * v3 + 0.0 * v15 + 0.0 * v16 + 0.267283586942 * v17 + 0.224376873538 * v23 + 0.101297568705 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03355644168e-13 * 1 + 0.152324909893 * v1 + 0.112337735864 * v4 + 0.380694324592 * v5 + 0.0 * v8 + 0.0 * v17 + 0.0426871419271 * v20 + 0.184350522873 * v21
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.30569788017e-13 * 1 + 0.261259209119 * v1 + 0.0340231681028 * v3 + 0.0890595107845 * v4 + 0.111019535934 * v9 + 0.0319429052457 * v22 + 0.136009816126 * v23 + 0.297708189323 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.76634340026e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.240209305023 * v5 + 0.153672873588 * v20 + 0.248801083494 * v21 + 0.192502534602 * v25 + 0.0928765637736 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.07094440346e-13 * 1 + 0.159406007345 * v1 + 0.211967723125 * v4 + 0.249768164677 * v5 + 0.0 * v8 + 0.0 * v17 + 0.225421205774 * v21 + 0.0696149371467 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.62665871274e-14 * 1 + 0.0 * v3 + 0.0187905340124 * v9 + 0.219031052392 * v11 + 0.028528898629 * v19 + 0.295319090619 * v21 + 0.163897495719 * v22 + 0.174829872772 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.26348434008e-13 * 1 + 0.115085471902 * v4 + 0.0374477782917 * v5 + 0.0715677401244 * v13 + 0.0 * v17 + 0.0 * v20 + 0.506798170377 * v21 + 0.115816426894 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47400982329e-13 * 1 + 0.216826048962 * v7 + 0.0148930511675 * v13 + 0.178190802218 * v20 + 0.342505181981 * v21 + 0.162290812441 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.51506772441e-14 * 1 + 0.0415224468056 * v2 + 0.0 * v5 + 0.24789456241 * v9 + 0.0 * v16 + 0.287422787593 * v21 + 0.20372732278 * v22 + 0.155967227224 * v25
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.43748815138e-14 * 1 + 0.0 * v1 + -0.313986898704 * v6 + 0.061990488713 * v15 + 0.249014819398 * v20 + 0.0278187356716 * v21 + 0.300206912431 * v22 + 0.0 * v27
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.18603156627e-13 * 1 + 0.0 * v1 + 0.0 * v7 + 0.222530296883 * v9 + 0.192702865515 * v20 + 0.157498928818 * v21 + 0.288578212848 * v22 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.77765317493e-13 * 1 + 0.207186849691 * v0 + 0.0351007963918 * v9 + 0.0 * v16 + 0.12339174307 * v17 + 0.318304363273 * v22 + 0.172556493233 * v23 + 0.103775508686 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.52058805798e-14 * 1 + 0.0 * v0 + 0.080342793231 * v1 + 0.130149589053 * v3 + 0.150168973035 * v4 + 0.0823187396309 * v16 + 0.381881469138 * v21 + 0.146002947421 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.89131883207e-14 * 1 + 0.149144001582 * v1 + 0.321056461198 * v5 + 0.0530396972707 * v9 + 0.105582843918 * v19 + 0.0703940873863 * v21 + 0.186525342148 * v22 + 0.0577829736999 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13675716943e-13 * 1 + 0.129726992775 * v1 + 0.183207948126 * v9 + 0.250540911369 * v15 + 0.0585505310386 * v20 + 0.224572420275 * v21 + 0.0 * v27 + 0.06419503668 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.09655155918e-13 * 1 + 0.113451672689 * v4 + 0.0889098699495 * v5 + 0.385730296189 * v9 + 0.180418326956 * v17 + 0.0380601427847 * v22 + 0.0 * v27 + 0.0754274356875 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
