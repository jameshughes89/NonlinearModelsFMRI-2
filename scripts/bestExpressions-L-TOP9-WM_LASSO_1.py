from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.98281149419e-13 * 1 + 0.0 * v0 + 0.118879837608 * v3 + 0.148817590826 * v4 + 0.162274781735 * v15 + 0.0829785218246 * v16 + 0.361179244967 * v17 + 0.0042045385878 * v20 + 0.0 * v27
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.24367648946e-14 * 1 + 0.0 * v4 + 0.238110680007 * v5 + 0.0 * v8 + 0.0319033107326 * v15 + 0.24979694192 * v17 + 0.0703799929982 * v20 + 0.224378556993 * v21 + 0.105410798101 * v25
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.3850852959e-13 * 1 + 0.0 * v3 + 0.208689676298 * v5 + 0.0652412831339 * v9 + 0.0523983945344 * v12 + 0.0 * v13 + 0.237017113434 * v16 + 0.19084432561 * v19 + 0.00192211993841 * v25
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43458295074e-14 * 1 + 0.0 * v1 + 0.0206350687794 * v4 + 0.0 * v16 + 0.249610962955 * v17 + 0.0934539776494 * v18 + 0.165689666886 * v20 + 0.363185409161 * v22 + 0.0 * v23
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.19133491191e-13 * 1 + 0.0592292345426 * v4 + 0.134286585115 * v5 + 0.0 * v6 + 0.0 * v14 + 0.187645276653 * v20 + 0.22695653836 * v25 + 0.0 * v26 + 0.298232659311 * v27
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.83485832974e-14 * 1 + 0.164706830847 * v5 + 0.152138731146 * v10 + 0.0 * v11 + 0.0364916813563 * v15 + 0.267601132296 * v17 + 0.030014272236 * v18 + 0.276682545998 * v23 + 0.0 * v27
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.06005766859e-13 * 1 + 0.188582488437 * v1 + 0.0 * v8 + 0.0 * v15 + 0.0 * v17 + 0.0245949811136 * v18 + 0.256460529015 * v20 + 0.34476993497 * v21 + 0.0 * v27
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.57675726974e-14 * 1 + 0.0524173232265 * v1 + 0.413262833651 * v2 + 0.0 * v6 + 0.0916826521734 * v7 + 0.0985301156078 * v17 + 0.245973580695 * v20 + 0.0026040628284 * v23 + 0.0 * v27
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.40451905749e-13 * 1 + 0.0 * v4 + 0.235432467785 * v5 + 0.109742383245 * v9 + 0.149483657149 * v15 + 0.0629379064586 * v17 + 0.0577981765252 * v20 + 0.235022556956 * v21 + 0.0828610331955 * v22
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.06202324639e-13 * 1 + 0.297636179161 * v4 + 0.152101934589 * v7 + 0.0103510791664 * v8 + 0.0283124374377 * v12 + 0.0 * v17 + 0.0319534506742 * v20 + 0.396001546446 * v21 + 0.0 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.21830656975e-14 * 1 + 0.0 * v0 + 0.13778874998 * v5 + 0.0626004900097 * v8 + 0.0814099295035 * v16 + 0.0 * v17 + 0.283285664285 * v21 + 0.326531245177 * v22 + 0.000228897533527 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.55543545296e-13 * 1 + 0.153299926569 * v1 + 0.168438399177 * v7 + 0.138593253675 * v11 + 0.111118979043 * v15 + 0.075687718162 * v17 + 0.143513400048 * v19 + 0.145913036324 * v20 + 0.0 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.14037159111e-15 * 1 + 0.0 * v2 + 0.154803176337 * v3 + 0.0 * v4 + 0.0390149647216 * v10 + -0.0 * v11 + 0.480622319993 * v17 + 0.118543209603 * v20 + 0.0 * v25
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.75715304762e-14 * 1 + 0.00499753027261 * v1 + 0.0389062650847 * v4 + 0.341994500333 * v5 + 0.0 * v8 + 0.314509917198 * v15 + 0.138325472578 * v20 + 0.10706187247 * v25 + 0.0 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14132786932e-14 * 1 + 0.106837960396 * v5 + 0.0 * v8 + 0.226662655533 * v9 + 0.359593622438 * v15 + 0.0992895860925 * v17 + 0.0 * v20 + 0.0514470995919 * v21 + 0.0 * v28
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.90040610829e-13 * 1 + 0.187293209523 * v1 + 0.109251293817 * v5 + 0.0899209838699 * v9 + 0.180607454091 * v10 + 0.0 * v16 + 0.116467477589 * v20 + 0.210386659972 * v22 + 0.0158035204056 * v28
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.55907567339e-14 * 1 + 0.0 * v0 + 0.0914972370831 * v15 + 0.311573948359 * v16 + 0.0 * v17 + 0.27060510535 * v21 + 0.202834758671 * v22 + 0.0 * v24 + 0.125689553045 * v28
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35434451048e-13 * 1 + 0.077788903791 * v5 + 0.0743518700791 * v7 + 0.0191458754485 * v8 + 0.302988871055 * v9 + 0.174283621365 * v15 + 0.0 * v18 + 0.211051366401 * v21 + 0.0640511964628 * v25
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.87947814646e-14 * 1 + 0.0779256244991 * v1 + 0.146216413063 * v5 + 0.164028455792 * v6 + 0.0 * v7 + 0.185351589913 * v11 + 0.148615020257 * v21 + 0.197617243391 * v23 + 0.0 * v25
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13091263131e-14 * 1 + 0.0 * v4 + 0.120908547004 * v5 + 0.164820266043 * v9 + 0.0 * v17 + 0.136951866204 * v20 + 0.342971013017 * v21 + 0.122909975241 * v22 + 0.0401608259053 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.50853799543e-14 * 1 + 0.0 * v3 + 0.131280012237 * v5 + 0.118003737992 * v11 + 0.0 * v12 + 0.0800528061937 * v13 + 0.141859490081 * v17 + 0.116412710339 * v25 + 0.350173415385 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49164892836e-14 * 1 + 0.122922554849 * v1 + 0.0838212640637 * v5 + 0.0 * v7 + 0.0916718149034 * v9 + 0.148519799935 * v15 + 0.137869477203 * v19 + 0.28839843235 * v20 + 0.0549626839906 * v21
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4863065688e-13 * 1 + 0.0951964949276 * v1 + 0.172942737564 * v4 + 0.242933926035 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.186125196527 * v20 + 0.208749511221 * v21
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36752316844e-15 * 1 + 0.0 * v5 + 0.0735151455695 * v8 + 0.0155278054578 * v11 + 0.0 * v15 + 0.263756483375 * v17 + 0.0 * v21 + 0.557019404519 * v22 + 0.0 * v28
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.98083651537e-14 * 1 + 0.227609903568 * v1 + 0.0 * v3 + 0.0263882911292 * v15 + 0.00451786237023 * v16 + 0.240967495496 * v17 + 0.109330022307 * v22 + 0.218098883648 * v23 + 0.0554175022654 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03355644168e-13 * 1 + 0.152324909893 * v1 + 0.112337735864 * v4 + 0.380694324592 * v5 + 0.0 * v8 + 0.0 * v12 + 0.0 * v17 + 0.0426871419271 * v20 + 0.184350522873 * v21
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.29791424877e-13 * 1 + 0.238010489734 * v1 + 0.0 * v3 + 0.0834929630488 * v4 + 0.145934843062 * v9 + 0.115427830574 * v16 + 0.0404182939796 * v22 + 0.0684606337662 * v23 + 0.278716424965 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.76633818465e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.240209469647 * v5 + 0.0 * v7 + 0.153673018568 * v20 + 0.248801057 * v21 + 0.192502368199 * v25 + 0.0928764635247 * v28
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.83426081572e-13 * 1 + 0.16128468649 * v1 + 0.128353248295 * v4 + 0.242761048357 * v5 + 0.0 * v8 + 0.105875956626 * v13 + 0.00948220210168 * v17 + 0.242059956897 * v21 + 0.0364796917238 * v27
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.62669646489e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0187916725021 * v9 + 0.219032928426 * v11 + 0.0285309625117 * v19 + 0.295318009423 * v21 + 0.163894418925 * v22 + 0.174829235544 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.30408596255e-13 * 1 + 0.156963939755 * v0 + 0.0902371644411 * v4 + 0.0359991967339 * v5 + 0.0983180646687 * v13 + 0.0 * v17 + 0.0 * v20 + 0.476115195064 * v21 + 0.019510350624 * v28
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47603905359e-13 * 1 + 0.0391277716791 * v4 + 0.227896217948 * v7 + 0.0 * v13 + 0.159971273351 * v20 + 0.330906308263 * v21 + 0.159422794138 * v22 + 0.0 * v27 + 0.0 * v28
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.51510516339e-14 * 1 + 0.041525705434 * v2 + 0.0 * v5 + 0.247873005477 * v9 + 0.0 * v16 + 0.0 * v20 + 0.287412953583 * v21 + 0.203742197062 * v22 + 0.155973369191 * v25
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16659770771e-14 * 1 + 0.0 * v1 + -0.262933785805 * v6 + 0.0200294177147 * v15 + -0.0894965223229 * v16 + 0.247302358613 * v20 + 0.059593903195 * v21 + 0.300936113993 * v22 + 0.0 * v27
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.18603389901e-13 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v7 + 0.222532902791 * v9 + 0.192699023069 * v20 + 0.157510159639 * v21 + 0.288569612608 * v22 + 0.0 * v28
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.77765353947e-13 * 1 + 0.207186881505 * v0 + 0.0 * v4 + 0.0351008257694 * v9 + 0.0 * v16 + 0.123391775597 * v17 + 0.318304426653 * v22 + 0.172556428605 * v23 + 0.103775438913 * v28
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.19102673154e-14 * 1 + 0.0 * v0 + 0.0750981585601 * v1 + 0.127914112804 * v3 + 0.145264803581 * v4 + 0.0238896059512 * v15 + 0.0782304040623 * v16 + 0.377757276982 * v21 + 0.145305485118 * v28
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.60895818515e-14 * 1 + 0.141533744138 * v1 + 0.319679259662 * v5 + 0.0511046431195 * v9 + 0.0938324143869 * v19 + 0.068399075442 * v21 + 0.183136019946 * v22 + 0.0262131791565 * v25 + 0.0617810105886 * v28
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13673125239e-13 * 1 + 0.129726855174 * v1 + 0.0 * v8 + 0.183213874008 * v9 + 0.250553069938 * v15 + 0.0585506835021 * v20 + 0.224565463506 * v21 + 0.0 * v27 + 0.0641875532689 * v28
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.08914218193e-13 * 1 + 0.0384949077278 * v3 + 0.12125840645 * v4 + 0.0861871382619 * v5 + 0.385056370369 * v9 + 0.168844012508 * v17 + 0.0380571483671 * v22 + 0.0 * v27 + 0.0456518316991 * v28
def func_WM_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.5240253335e-14 * 1 + 0.326333211625 * v3 + 0.108634440409 * v4 + 0.0619645512609 * v11 + 0.0 * v13 + 0.171840602258 * v17 + 0.162327899021 * v20 + 0.0500062628472 * v23 + 0.0 * v27

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,funcL_WM_114924,]

def getFuncs(): return funcs
