from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80894563387e-13 * 1 + 0.0943479984483 * v0 + 0.186770770651 * v1 + 0.0210641061799 * v4 + 0.0753103616035 * v7 + 0.351641124357 * v8 + 0.302448703574 * v15 + -0.00502910487067 * v16 + 0.350341402405 * v17 + -0.0685614773877 * v18 + -0.0863179607722 * v20 + -0.129863510478 * v21 + -0.126074570489 * v23 + 0.108339638852 * v28
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47978127858e-13 * 1 + 0.145445754387 * v1 + 0.104691308824 * v5 + -0.0162070504879 * v7 + 0.0810907022367 * v8 + 0.077146465284 * v12 + 0.238699628301 * v13 + 0.602561835627 * v15 + 0.194726227135 * v17 + -0.0172934916568 * v18 + -0.290344307789 * v20 + -0.269363862605 * v21 + 0.0203008830974 * v23 + 0.289598867651 * v27
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.23247232248e-14 * 1 + -0.333377039545 * v0 + 0.258533960727 * v1 + 0.162503259797 * v8 + 0.0391620862265 * v11 + 0.17312281088 * v13 + -0.073962755731 * v15 + -0.16639178943 * v16 + 0.51980617515 * v17 + 0.243813143988 * v18 + 0.0920681490188 * v21 + 0.361729171732 * v24 + -0.0901095254129 * v27 + -0.275021174725 * v28
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.64020577176e-14 * 1 + 0.14730621946 * v1 + 0.102535661513 * v3 + -0.206555881571 * v4 + 0.00475922209458 * v7 + -0.00468680774241 * v11 + 0.464418237017 * v13 + -0.0472766835563 * v15 + 0.393708670283 * v17 + -0.301545951225 * v19 + 0.0516822435438 * v21 + 0.00700139074836 * v22 + 0.0932314983034 * v24 + 0.301917005206 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.95490081255e-14 * 1 + 0.333446260311 * v1 + 0.00232608382876 * v2 + -0.41594609512 * v4 + 0.367990435431 * v8 + 0.271687584454 * v11 + 0.419436072575 * v12 + -0.109590677538 * v15 + 0.181065487985 * v17 + 0.0085963614106 * v18 + -0.426068679642 * v20 + 0.118242476393 * v21 + 0.0568767334785 * v25 + 0.202280608778 * v27
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.90766365597e-14 * 1 + 0.135321544449 * v3 + 0.191245632932 * v4 + -0.175147741445 * v8 + 0.0252193644532 * v9 + 0.15753857968 * v12 + 0.217389479193 * v13 + 0.523537325334 * v15 + 0.506517567693 * v17 + -0.217444189959 * v20 + 0.173411672571 * v22 + -0.136677723711 * v23 + -0.0030580065775 * v27 + -0.394853663219 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12851940853e-13 * 1 + -0.00641415741771 * v0 + 0.0603239438093 * v1 + -0.130262219597 * v2 + -0.0379752676683 * v4 + 0.168076496987 * v8 + 0.0297113610864 * v12 + 0.428970844155 * v13 + 0.305214059434 * v15 + 0.394646324091 * v17 + -0.0423318931678 * v20 + -0.0335671370136 * v21 + 0.0538420228264 * v27 + -0.0896107186958 * v28
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.50237546152e-13 * 1 + 0.00221495420807 * v5 + 0.205695433384 * v6 + -0.317748492876 * v8 + 0.121153156906 * v11 + 0.0180972874722 * v12 + 0.631809302873 * v13 + 0.100092737422 * v15 + -0.0124597920041 * v16 + 0.610639265872 * v17 + 0.235757603987 * v18 + -0.107974393166 * v21 + -0.229926429357 * v27 + -0.266612265661 * v28
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.45196509061e-15 * 1 + 0.105983563456 * v1 + 0.0896665410376 * v4 + 0.0253813924566 * v5 + 0.461366626772 * v6 + -0.200137352378 * v7 + 0.546925827151 * v8 + -0.025001822804 * v9 + 0.101420560507 * v13 + -0.208718660753 * v18 + 0.0720200865542 * v21 + -0.133757194685 * v23 + -0.0187617650203 * v25 + 0.255468605731 * v27
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.49967478549e-14 * 1 + 0.717764919503 * v1 + 0.130961836546 * v2 + 0.0553384670931 * v4 + 0.255420075342 * v6 + -0.0853974772995 * v7 + -0.516023678645 * v8 + -0.498756923989 * v9 + 0.231676123707 * v12 + 0.0654385368072 * v14 + 0.312359894983 * v18 + -0.235148880181 * v23 + 0.124113074022 * v26 + 0.459010601717 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.69278301909e-14 * 1 + 0.0752644923226 * v1 + -0.00280718772763 * v4 + 0.230769438085 * v5 + -0.0355646808546 * v7 + -0.292774986158 * v8 + 0.153657223994 * v13 + 0.548904550802 * v15 + 0.233845013293 * v17 + 0.234551558564 * v20 + 0.0580517429437 * v21 + -0.192018922256 * v22 + 0.339819889399 * v27 + -0.418060185095 * v28
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68871272147e-14 * 1 + 0.225637498083 * v1 + 0.155437894624 * v4 + 0.402660301534 * v8 + 0.0531823506677 * v9 + -0.00342552324336 * v11 + -0.102398350082 * v12 + 0.115585181356 * v13 + 0.117895662691 * v15 + -0.0425390261078 * v17 + -0.0222460223234 * v18 + -0.177589425328 * v20 + 0.0884646118761 * v21 + 0.243081422668 * v27
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.72102146912e-15 * 1 + 0.16439663677 * v1 + -0.0363594712308 * v4 + 0.127063346141 * v5 + 0.0578635010614 * v6 + -0.197758862599 * v7 + 0.0722990419827 * v8 + 0.114158677956 * v13 + 0.431513166774 * v15 + 0.195785974964 * v17 + -0.138483505264 * v20 + 0.034709782877 * v21 + 0.187330936958 * v26 + 0.133567315929 * v27
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.62574052327e-14 * 1 + 0.129598357611 * v1 + -0.00482918773135 * v4 + 0.0520703614523 * v6 + -0.0590485512745 * v7 + 0.0210152260022 * v8 + -0.141535044896 * v11 + 0.487861803263 * v15 + -0.0983035167269 * v17 + 0.148610886682 * v18 + -0.0812089611973 * v20 + 0.0276984968867 * v21 + 0.0445116136766 * v22 + 0.515076000211 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.92430015091e-13 * 1 + -0.570361662949 * v0 + -0.0518333104889 * v5 + 0.313987050961 * v8 + -0.0955744406933 * v12 + 0.294326435597 * v13 + 0.145350622606 * v15 + 0.140550104237 * v16 + 0.133384872314 * v20 + 0.0411391230322 * v22 + 0.0804234531927 * v23 + 0.357184048032 * v24 + 0.17831933716 * v27 + 0.0897115603735 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.36692192419e-13 * 1 + 0.197683171135 * v1 + -0.121801764699 * v2 + 0.225908995212 * v4 + 0.247827734884 * v5 + 0.0573796365869 * v8 + -0.0427531438393 * v9 + 0.12676311312 * v13 + 0.279491460603 * v15 + 0.243657774107 * v17 + 0.0312320356185 * v20 + 0.0993486216253 * v21 + 0.0455626505594 * v27 + -0.367816990941 * v28
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.14964807434e-14 * 1 + 0.0836577178142 * v1 + -0.0455328154054 * v4 + -0.0219789518121 * v5 + 0.0871199594315 * v8 + -0.110124259245 * v12 + 0.202592537221 * v13 + 0.239490912923 * v15 + 0.450276500416 * v17 + -0.0644834828151 * v18 + -0.209556020733 * v20 + -0.0053393741616 * v21 + 0.118492204881 * v22 + 0.292984305649 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.20369114264e-13 * 1 + -0.0913609137438 * v3 + -0.0702653499168 * v5 + 0.1681076005 * v7 + 0.056331964775 * v8 + 0.286618586402 * v12 + 0.10704903561 * v13 + 0.129934902628 * v15 + 0.345364647868 * v17 + 0.150755687929 * v20 + -0.022712417232 * v21 + -0.0406116727966 * v22 + 0.0785600810266 * v23 + -0.0981012373188 * v28
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.53476788471e-14 * 1 + -0.0110111254481 * v1 + 0.0150923793913 * v2 + 0.0630854916496 * v4 + -0.0233120968186 * v5 + 0.308423834892 * v6 + 0.598286210845 * v8 + -0.420594934061 * v12 + 0.292612469784 * v13 + 0.163012926311 * v15 + 0.100335002913 * v17 + -0.218250989147 * v18 + 0.0147470307556 * v22 + 0.160850595135 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.0519620303e-13 * 1 + -0.0954185126791 * v0 + 0.0568935970081 * v5 + 0.0842382694436 * v8 + 0.226404382204 * v12 + 0.29313084536 * v13 + 0.367414969466 * v15 + -0.296333335814 * v16 + 0.293383813697 * v17 + 0.131775434891 * v18 + 0.208254609492 * v20 + -0.11741420545 * v21 + 0.170721210429 * v24 + -0.222933719932 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.07725941901e-14 * 1 + 0.313107928856 * v4 + 0.00567741486795 * v5 + 0.10780246429 * v8 + 0.0796582419255 * v11 + 0.112848455642 * v13 + 0.351918324452 * v15 + 0.345034967194 * v17 + 0.0269107464023 * v18 + -0.166915984615 * v20 + -0.0550897091809 * v21 + 0.168903984918 * v25 + 0.229295762807 * v27 + -0.504776505608 * v28
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.16418687138e-13 * 1 + 0.376878074501 * v1 + 0.016130252125 * v4 + -0.051459217598 * v7 + 0.0524895932741 * v8 + -0.106054639125 * v9 + 0.155360755289 * v13 + 0.5040392514 * v15 + 0.0848419429878 * v17 + -0.0791384158571 * v18 + -0.102663048625 * v20 + 0.0194514726529 * v23 + 0.212277573234 * v27 + -0.0563663655268 * v28
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.87031410266e-15 * 1 + -0.0390546725137 * v1 + -0.083748113963 * v4 + -0.125456196582 * v5 + 0.203053952351 * v6 + -0.00695195686634 * v7 + 0.631974425685 * v8 + 0.13268227797 * v13 + -0.143697350031 * v18 + 0.0256454772098 * v20 + 0.0588582132388 * v21 + -0.120033461481 * v25 + 0.230070525765 * v26 + 0.246572699593 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.15854692321e-13 * 1 + 0.0988822748651 * v0 + -0.0357490092369 * v1 + -0.0608013436121 * v3 + -0.0802619904416 * v8 + 0.138429124971 * v12 + 0.26357185509 * v13 + 0.409963405162 * v15 + -0.0279013088819 * v16 + 0.719765890368 * v17 + -0.278340317929 * v18 + 0.0621498100329 * v20 + -0.136995869768 * v22 + -0.0934554848859 * v28
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.95275664406e-15 * 1 + 0.100787498771 * v0 + 0.187447650428 * v1 + -0.0801522946618 * v4 + 0.955675105557 * v8 + -0.14768496935 * v9 + -0.363849889714 * v12 + 0.490695819525 * v13 + 0.416826833765 * v15 + -0.145140093741 * v16 + 0.232632168412 * v17 + -0.373177399226 * v18 + -0.338928573863 * v21 + -0.0322497755938 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.89114121755e-15 * 1 + 0.0704816791796 * v1 + -0.139190485302 * v4 + 0.0377058194201 * v5 + 0.0110096687369 * v6 + 0.0994903486803 * v7 + 0.339293657764 * v8 + 0.0276044971735 * v15 + 0.40155075225 * v17 + -0.0592625634181 * v18 + -0.029765456134 * v20 + 0.00189834188502 * v21 + -0.113173210758 * v23 + 0.411081448147 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.3003466194e-13 * 1 + 0.227972001623 * v1 + -0.355106713796 * v4 + 0.17302834408 * v5 + 0.110348268795 * v7 + -0.0568317525592 * v8 + -0.244557617849 * v9 + 0.508416647244 * v13 + 0.35743714976 * v17 + 0.205891883236 * v18 + -0.0771840369885 * v20 + -0.104077406072 * v21 + 0.130437846923 * v23 + 0.173416441634 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.61344812515e-14 * 1 + 0.459629778453 * v1 + 0.125653414192 * v4 + 0.156738228507 * v5 + -0.242109042719 * v6 + -0.0630934134175 * v8 + -0.421429057745 * v9 + 0.233102540765 * v12 + 0.335053889896 * v13 + -0.103461709284 * v20 + 0.107258474246 * v21 + 0.0526324088368 * v26 + 0.478743544074 * v27 + -0.0511391148239 * v28
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.03262052519e-14 * 1 + 0.323646714914 * v1 + 0.0768291879918 * v4 + -0.134445842718 * v5 + 0.226972941613 * v8 + 0.172057222781 * v9 + 0.0408059003308 * v11 + 0.304056706041 * v13 + 0.0903993949379 * v15 + 0.20873172082 * v17 + 0.0708444270788 * v20 + -0.0668484328156 * v21 + -0.107010781486 * v22 + -0.109972234302 * v27
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.18830581611e-14 * 1 + -0.00398719729343 * v1 + 0.0254629434094 * v2 + 0.1195822371 * v4 + 0.0914295660181 * v6 + -0.0764522581361 * v8 + 0.00312242587683 * v9 + 0.243730709862 * v13 + 0.320184424146 * v15 + 0.535391490552 * v17 + -0.324651061185 * v20 + 0.200000267696 * v26 + 0.120781086923 * v27 + -0.189984223807 * v28
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.60228244927e-14 * 1 + -0.0735187128895 * v1 + -0.290943765778 * v4 + 0.0364713062428 * v5 + -0.149078307721 * v8 + -0.215468121623 * v9 + 0.222006326248 * v12 + 0.475496339331 * v13 + 0.428803755578 * v15 + 0.122901448538 * v17 + -0.0889293903737 * v21 + 0.0252925655347 * v25 + 0.436126836565 * v26 + 0.242383835518 * v27
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.68194984858e-14 * 1 + 0.252810104477 * v0 + 0.368293396945 * v1 + -0.0201943515361 * v2 + 0.0419959283932 * v4 + 0.240783089406 * v8 + 0.230199599132 * v15 + 0.0952018121864 * v16 + 0.279232068717 * v17 + -0.140094948059 * v18 + -0.155204193732 * v20 + -0.271686196453 * v21 + -0.0279510001151 * v23 + 0.102872566957 * v27
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.29795575174e-13 * 1 + -0.00399892534249 * v3 + -0.172408751575 * v4 + 0.086581430021 * v5 + -0.0770310475291 * v8 + 0.0067001762028 * v11 + 0.30519713652 * v12 + 0.125787583867 * v13 + 0.438282263219 * v15 + -0.134575240485 * v16 + 0.25382471844 * v17 + 0.11335013929 * v19 + 0.217979897259 * v27 + -0.115734274433 * v28
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.21003382952e-14 * 1 + 0.175564286003 * v1 + -0.152947884199 * v4 + 0.100315699299 * v5 + 0.261961391 * v6 + 0.0151022482335 * v7 + -0.18536543572 * v10 + -0.0277322690315 * v11 + 0.245193908803 * v13 + 0.15154966708 * v14 + 0.337997706433 * v17 + 0.0504085687567 * v25 + -0.0207414865883 * v26 + 0.185129700816 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.55933538262e-13 * 1 + 0.0926879293484 * v1 + -0.0248241415843 * v3 + 0.361799716283 * v7 + 0.182637265068 * v8 + 0.0231581878117 * v10 + 0.0423033982049 * v12 + 0.102966100382 * v15 + 0.0143791688645 * v16 + 0.327324572742 * v17 + 0.185475772885 * v18 + -0.209539359652 * v20 + 0.0483670095826 * v21 + -0.00815600286717 * v28
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.80493508745e-14 * 1 + 0.262522762907 * v1 + -0.211854911366 * v4 + 0.161952620167 * v5 + 0.0432407907605 * v7 + -0.259587555854 * v8 + 0.311738096418 * v13 + 0.362775441058 * v15 + 0.200885126192 * v17 + 0.0199086291254 * v18 + -0.244056049202 * v20 + 0.379494765609 * v21 + -0.0535561955276 * v23 + 0.0460507677432 * v27
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.75944729157e-13 * 1 + 0.0542466370867 * v1 + -0.348454376106 * v4 + 0.000879821791926 * v5 + 0.264199852968 * v7 + 0.0714309114193 * v8 + -0.0723516071686 * v9 + 0.523109682429 * v13 + 0.0426681924284 * v15 + 0.394728857163 * v17 + -0.0393923127283 * v20 + -0.14216850318 * v22 + 0.00577325790117 * v25 + 0.279819505087 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.21935886253e-13 * 1 + -0.135333151871 * v0 + 0.306801183771 * v1 + -0.286252601744 * v5 + 0.417172962942 * v6 + -0.0513084066556 * v7 + 0.0931258009773 * v9 + 0.390692288878 * v13 + 0.467882921817 * v15 + 0.00234328756198 * v17 + 0.043308123554 * v18 + -0.293235046642 * v20 + 0.247733840337 * v21 + -0.208903778429 * v23
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.29597533156e-14 * 1 + 0.175924637302 * v1 + 0.0628358521796 * v3 + 0.24940133064 * v6 + -0.0827238512905 * v7 + 0.0010051476552 * v8 + 0.0187491628783 * v9 + 0.175737605003 * v12 + 0.50383348163 * v15 + 0.0108267677786 * v16 + 0.195317490889 * v17 + 0.0269551290492 * v18 + -0.0595651854384 * v21 + -0.231885066229 * v23
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.66214648923e-14 * 1 + 0.0118186113612 * v0 + -0.0443714552543 * v2 + 0.00201468977868 * v3 + 0.0622999368605 * v8 + 0.192634496771 * v12 + -0.0750293890294 * v13 + 0.283708277101 * v15 + 0.39424230791 * v17 + -0.14610176339 * v18 + 0.00534655276543 * v23 + -0.145405972208 * v24 + 0.391964126434 * v27 + 0.0103184400221 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
