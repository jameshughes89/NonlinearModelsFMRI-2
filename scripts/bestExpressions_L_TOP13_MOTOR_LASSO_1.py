from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58444638839e-14 * 1 + 0.0 * v0 + 0.090964350074 * v1 + 0.0949565429924 * v5 + 0.0394111724733 * v7 + 0.205107535146 * v11 + 0.252638488264 * v15 + 0.153112189375 * v16 + 0.0461244463472 * v17 + 0.0172211913905 * v21 + 0.123289755441 * v22 + 0.0 * v24 + 0.0 * v28
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.64248773688e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.237524321165 * v5 + -0.0 * v6 + 0.20973271051 * v7 + 0.171706355838 * v10 + -0.0 * v15 + 0.0113141337253 * v16 + 0.0972207434668 * v17 + 0.0 * v20 + 0.182825477942 * v22 + 0.0621279428067 * v23
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94266376589e-14 * 1 + 0.113289199925 * v1 + 0.0131675943478 * v3 + 0.175957644853 * v5 + 0.0 * v7 + 0.173121085143 * v15 + 0.13891690832 * v17 + 0.0 * v18 + 0.0105322438653 * v19 + 0.0 * v20 + 0.0748667622912 * v24 + 0.0 * v27 + 0.2521502904 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23471116625e-13 * 1 + 0.0 * v0 + 0.0511938323571 * v1 + 0.0275208694692 * v3 + 0.214733923334 * v4 + 0.137758036341 * v7 + 0.0 * v8 + 0.0103014595228 * v15 + 0.128227110015 * v17 + 0.169463656061 * v18 + 0.0840579613362 * v21 + 0.108295428508 * v23 + 0.0 * v27
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.53473501867e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.159333159227 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0909812699047 * v18 + 0.173570470625 * v20 + 0.299971861185 * v21 + 0.20246603042 * v22 + 0.0 * v24 + 0.0478590309496 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.58897757186e-14 * 1 + 0.403608420936 * v1 + 0.0 * v4 + 0.235807243524 * v5 + 0.00486981874469 * v6 + 0.0 * v11 + 0.0 * v15 + 0.128544739102 * v17 + 0.0219918021073 * v18 + 0.0 * v20 + 0.103054036729 * v22 + 0.0 * v27 + 0.0179583357703 * v28
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28221331294e-13 * 1 + 0.124216977563 * v1 + 0.261493506172 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.257544584005 * v21 + 0.309993195786 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.5351554934e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v12 + 0.0719692253955 * v13 + 0.0 * v15 + 0.0 * v17 + 0.388182493561 * v20 + 0.242639297343 * v21 + 0.0643070238499 * v22 + 0.102673772852 * v27 + 0.0374733037782 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39760845336e-14 * 1 + 0.0 * v1 + 0.0 * v5 + 0.0 * v7 + 0.0 * v9 + 0.36393085691 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v18 + 0.247847725455 * v21 + 0.226186960382 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.76603665428e-14 * 1 + 0.0946832038002 * v3 + 0.0 * v4 + 0.405798986954 * v5 + 0.0556456077463 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0580063010793 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0244041710043 * v20 + 0.307297034634 * v21 + 0.0 * v24
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36630906276e-13 * 1 + 0.121217379311 * v1 + 0.095324642135 * v3 + 9.15253951331e-05 * v4 + 0.198303223492 * v5 + 0.223176019189 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v19 + 0.0 * v20 + 0.106396916151 * v21 + 0.136622646658 * v22 + 0.0662387955322 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.88681307422e-14 * 1 + 0.35605727409 * v1 + 0.038429809125 * v4 + 0.0872298294111 * v5 + 0.0 * v8 + 0.0493175880228 * v9 + 0.0 * v12 + 0.0281478174623 * v13 + 0.0318524394815 * v16 + 0.166287394292 * v20 + 0.16000671844 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29328137385e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.126221550463 * v3 + 0.0985080605147 * v4 + 0.324534859459 * v5 + 0.232328471454 * v7 + 0.0 * v15 + 0.0 * v17 + 0.0179703198828 * v19 + 0.0880850405753 * v20 + 0.0199188527877 * v21 + 0.0300310098018 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69705803414e-14 * 1 + 0.0 * v1 + 0.0180660741684 * v4 + 0.441473476635 * v5 + 0.0 * v10 + 0.253275325677 * v15 + 9.95260471866e-05 * v17 + 0.0 * v19 + 0.10543213547 * v20 + 0.0820606973913 * v21 + 0.150251676037 * v22 + 0.0 * v25 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.16717370358e-14 * 1 + 0.202905798923 * v1 + 0.17503372602 * v5 + -0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0490141028654 * v15 + 0.0 * v18 + 0.364050209012 * v21 + 0.0752682889476 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.66791048394e-14 * 1 + 0.264534228743 * v2 + 0.172670673396 * v5 + 0.0 * v9 + 0.0619879037043 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v16 + 0.0112506926991 * v19 + 0.0 * v20 + 0.270168093384 * v25 + 0.151575289211 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.15645702913e-13 * 1 + 0.183116431971 * v1 + 0.0735673213073 * v3 + 0.0 * v4 + 0.0756319102072 * v5 + 0.0382858926964 * v7 + 0.148875165901 * v11 + 0.0447852912245 * v16 + 0.0 * v18 + 0.17873299334 * v21 + 0.0736047028056 * v22 + 0.00332518209972 * v23 + 0.158109881978 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83093262067e-13 * 1 + 0.208687376998 * v1 + 0.0559349223874 * v3 + 0.297730434697 * v5 + 0.168076697151 * v7 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.125529228807 * v21 + 0.0464145524311 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.217124616e-13 * 1 + 0.369341096175 * v1 + 0.0 * v4 + 0.220847207091 * v5 + 0.108847011634 * v7 + 0.0 * v9 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185839968202 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21042905581e-14 * 1 + 0.0 * v1 + 0.00307023997912 * v3 + 0.251965759477 * v5 + 0.0 * v7 + 0.268344826342 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.16368644389 * v20 + 0.235384273728 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.78365819854e-13 * 1 + 0.0697645363684 * v1 + 0.130273801364 * v3 + 0.0 * v4 + 0.0 * v8 + 0.176373788909 * v11 + 0.0580046546394 * v16 + 0.00286001537776 * v17 + 0.213299234683 * v20 + 0.0539381213611 * v21 + 0.179153444052 * v22 + 0.0 * v25 + 0.135246799211 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.69593992386e-13 * 1 + 0.0 * v4 + 0.139721176553 * v5 + 0.0911347821138 * v9 + 0.0 * v13 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.269312478287 * v21 + 0.0808212464164 * v22 + 0.364977279201 * v25 + 0.0529235576816 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30151308488e-15 * 1 + 0.0263599470307 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100850568363 * v5 + 0.0 * v7 + 0.17593805529 * v9 + 0.37801447895 * v11 + 0.0216841506088 * v17 + 0.0 * v20 + 0.204060376958 * v21 + 0.0691699868043 * v23 + 0.0 * v28
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.249759654e-13 * 1 + 0.0896059524554 * v1 + 0.0 * v4 + 0.214102889495 * v5 + 0.0 * v8 + 0.0152952240794 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0596596908366 * v15 + 0.100574610331 * v17 + 0.00235586615502 * v20 + 0.202227325949 * v22 + 0.290354779961 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.57078712294e-13 * 1 + 0.139611237807 * v1 + 0.0 * v3 + 0.0 * v7 + 0.0404901661231 * v10 + 0.170927004368 * v11 + 0.0634502777278 * v15 + 0.0 * v16 + 0.238030868172 * v17 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.229829108197 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.833058822e-14 * 1 + 0.0555399223414 * v1 + 0.0 * v4 + 0.306512247102 * v5 + 0.16223236798 * v7 + 0.159080616479 * v9 + 0.0 * v13 + 0.0 * v16 + 0.0 * v17 + 0.263554471025 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.09279748421e-13 * 1 + 0.00749197035898 * v1 + 0.0 * v4 + 0.507980891891 * v5 + 0.065866057369 * v7 + 0.0 * v8 + 0.0339421832201 * v11 + 0.0 * v17 + 0.0 * v18 + 0.272626021798 * v21 + 0.0 * v23 + 0.000324868508891 * v25 + 0.0 * v27
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80806663025e-14 * 1 + 0.264536484271 * v1 + 0.0 * v2 + 0.129162631913 * v3 + 0.354924983072 * v5 + 0.0703457083819 * v6 + 0.0 * v7 + 0.0 * v8 + 0.00695263911843 * v9 + 0.0 * v14 + 0.0 * v18 + 0.0 * v19 + 0.0854819648336 * v25
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.5002925707e-14 * 1 + 0.231227562915 * v1 + 0.0 * v4 + 0.32587898538 * v5 + 0.0 * v8 + 0.0 * v12 + 0.024183245041 * v13 + 0.0 * v15 + 0.0 * v18 + 0.106330648033 * v21 + 0.272919705957 * v22 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.31960161498e-13 * 1 + 0.141196117466 * v1 + 0.1031802746 * v4 + 0.224725717615 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.0448479199905 * v15 + 0.0 * v17 + 0.0220302555644 * v20 + 0.25540142527 * v21 + 0.0 * v22 + 0.146458132917 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13941994535e-13 * 1 + 0.0569816426687 * v1 + 0.0 * v4 + 0.266604614874 * v5 + 0.0748804907497 * v7 + 0.0 * v9 + 0.108855460809 * v15 + 0.0 * v16 + 0.00255855746206 * v17 + 0.131262891669 * v19 + 0.240928114438 * v21 + 0.0867599582183 * v22 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.3267938916e-14 * 1 + 0.0 * v4 + 0.176193225682 * v5 + 0.0175132409709 * v7 + 0.0 * v8 + 0.02494303197 * v12 + 0.0958316553441 * v13 + 0.0 * v18 + 0.291230394811 * v20 + 0.0918132735385 * v21 + 0.174342838307 * v22 + 0.0 * v27 + 0.083414027013 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47746142845e-14 * 1 + 0.157543445142 * v5 + 0.0 * v8 + 0.310302789244 * v9 + 0.113874212984 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v20 + 0.234484269055 * v21 + 0.0540615737777 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0858111365497 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.75530486911e-13 * 1 + 0.12779430665 * v3 + 0.303303953369 * v5 + -0.35506960289 * v6 + 0.0661345996898 * v7 + 0.0 * v9 + -0.204674735518 * v10 + 0.0 * v11 + -0.0 * v14 + 0.049499959069 * v20 + 0.130328561426 * v22 + 0.0 * v25 + 0.0685164735489 * v26
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.3089493013e-13 * 1 + 0.0738412258472 * v4 + 0.564198221246 * v5 + 0.0716655944893 * v7 + 0.0 * v8 + -0.214099172199 * v10 + 0.0 * v12 + 0.0 * v13 + 0.142228365346 * v14 + 0.0 * v16 + 0.0 * v17 + 0.0 * v20 + 0.0 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.87802453774e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.260372180532 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.554076517225 * v17 + 0.0 * v21 + 0.0799532383386 * v23 + 0.0 * v27
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.4799047458e-14 * 1 + 0.271248012246 * v1 + 0.0 * v4 + 0.242063282821 * v5 + 0.0 * v8 + 0.0 * v12 + 0.0888436759298 * v13 + 0.0 * v20 + 0.133615047344 * v21 + 0.141549775455 * v22 + 0.0 * v23 + 0.0351313218724 * v25 + 0.0 * v27
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.58494832975e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.360942302866 * v5 + 0.189843143117 * v9 + 0.0 * v12 + 0.0 * v17 + 0.0770337846616 * v21 + 0.0 * v22 + 0.088473162658 * v24 + 0.0 * v25 + 0.20193797552 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.23352138722e-14 * 1 + 0.142381921162 * v1 + 0.239555376127 * v5 + 0.183411972081 * v9 + 0.098201723632 * v11 + 0.0 * v13 + 0.136466601492 * v15 + 0.0 * v17 + 0.0 * v20 + 0.0629542639371 * v22 + 0.0 * v25 + 0.0 * v27 + 0.079191164522 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.85974543838e-14 * 1 + 0.125012806598 * v3 + 0.049339761772 * v4 + 0.104712059916 * v5 + 0.0 * v8 + 0.0 * v9 + 0.038944086132 * v13 + 0.305217760015 * v15 + 0.0842810622179 * v17 + 0.0 * v21 + 0.147110855152 * v22 + 0.0 * v27 + 0.089330997553 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
