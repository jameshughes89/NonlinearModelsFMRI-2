from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.50857572774e-13 * 1 + 0.111793579031 * v1 + 0.332702546738 * v8 + 0.282863989076 * v17 + 0.132577273275 * v20
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.1817394773e-13 * 1 + 0.224656823488 * v1 + 0.0374220352828 * v8 + 0.256705846091 * v15 + 0.31536573918 * v17
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.21645792172e-14 * 1 + 0.0361835439922 * v15 + 0.371187904813 * v17 + 0.150252449791 * v18 + 0.254484764204 * v21
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.84705465246e-14 * 1 + 0.0 * v4 + 0.33379195978 * v13 + 0.355520851169 * v17 + 0.205208580625 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36542220047e-13 * 1 + 0.330471300652 * v1 + 0.208730874395 * v8 + 0.160830942101 * v12 + 0.135021291049 * v25
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.64923548077e-13 * 1 + 0.180324681031 * v4 + 0.0 * v8 + 0.299755363471 * v15 + 0.378022418206 * v17
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81859834637e-13 * 1 + 0.0480974314615 * v8 + 0.358083615154 * v13 + 0.283234402057 * v15 + 0.296943395289 * v17
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.89118866092e-14 * 1 + 0.217136240691 * v13 + 0.576525482682 * v17 + 0.0 * v18 + 0.0 * v21
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.0306251025e-14 * 1 + 0.281381626265 * v1 + 0.182555682781 * v6 + 0.423856673016 * v8 + 0.0 * v23
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.91709458606e-14 * 1 + 0.703980302992 * v1 + 0.0126124165146 * v6 + 0.0 * v8 + 0.157148985795 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.34050157866e-14 * 1 + 0.205014422982 * v15 + 0.380206624554 * v17 + 0.0889396237449 * v21 + 0.153377629306 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.72524515712e-14 * 1 + 0.319681335934 * v1 + 0.271771016635 * v4 + 0.209347944995 * v8 + 0.110952901391 * v15
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.03230196866e-14 * 1 + 0.20462218507 * v1 + 0.206674526727 * v15 + 0.310002985016 * v17 + 0.134450715158 * v20
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.23018394363e-15 * 1 + 0.0636202598879 * v1 + 0.479898364657 * v15 + 0.0410992545776 * v17 + 0.325736217888 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.47500751083e-13 * 1 + 0.348646629695 * v8 + 0.263254121753 * v20 + 0.164836050262 * v22 + 0.0559194718532 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.0391741915e-13 * 1 + 0.270410839412 * v1 + 0.00584762993506 * v8 + 0.435426777586 * v17 + 0.160304619677 * v21
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.35514736597e-14 * 1 + 0.0 * v4 + 0.17304150313 * v15 + 0.430325899579 * v17 + 0.270315079172 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.88831478638e-14 * 1 + 0.0440493967984 * v8 + 0.245740699643 * v12 + 0.220703900654 * v15 + 0.365361799948 * v17
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.73324043453e-14 * 1 + 0.125663394906 * v4 + 0.315305585405 * v6 + 0.347365581282 * v8 + 0.134824103154 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.80922816099e-14 * 1 + 0.258485463163 * v12 + 0.105375325495 * v15 + 0.188274680448 * v18 + 0.328372094193 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.34841824808e-14 * 1 + 0.205435908703 * v4 + 0.222955305532 * v15 + 0.146760498029 * v17 + 0.298490537625 * v25
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06402071118e-13 * 1 + 0.322682816778 * v1 + 0.348893561523 * v15 + 0.0770142897813 * v17 + 0.169839770341 * v27
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.01870984277e-14 * 1 + 0.0 * v1 + 0.384164774521 * v8 + 0.112353123767 * v20 + 0.384485263563 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.98291181432e-13 * 1 + 0.0 * v8 + 0.014788478661 * v12 + 0.186512216638 * v15 + 0.657249988225 * v17
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94617350477e-14 * 1 + 0.258755358827 * v8 + 0.197206575223 * v13 + 0.376817804505 * v15 + 0.0 * v17
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.76600687768e-14 * 1 + 0.147264249937 * v8 + 0.521731230343 * v17 + 0.0 * v20 + 0.256141310998 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.37850851983e-13 * 1 + 0.270603440531 * v1 + 0.0 * v9 + 0.400382640365 * v17 + 0.194027275733 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.97770328557e-14 * 1 + 0.462131134184 * v1 + 0.00814845111205 * v4 + 0.0 * v9 + 0.443161082562 * v13
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.57934937402e-14 * 1 + 0.349093235181 * v1 + 0.170179002332 * v4 + 0.202827514201 * v17 + 0.166234078473 * v20
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06973701967e-13 * 1 + 0.0226907249989 * v1 + 0.0 * v4 + 0.490500177783 * v17 + 0.336579558096 * v27
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.10946611143e-14 * 1 + 0.142405338971 * v5 + 0.0877387555242 * v12 + 0.50162996265 * v13 + 0.117127200681 * v21
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.30356366649e-13 * 1 + 0.0743282841822 * v8 + 0.101357165696 * v15 + 0.564091596959 * v17 + 0.113416405931 * v18
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.44444061904e-13 * 1 + 0.115721710085 * v12 + 0.334092697667 * v15 + 0.262939266652 * v17 + 0.169552771006 * v27
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.93661454193e-14 * 1 + 0.239061807254 * v6 + 0.138921952958 * v14 + 0.241861900114 * v17 + 0.302429255287 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.35230777657e-13 * 1 + 0.0835527454019 * v8 + 0.119243688715 * v15 + 0.581712159443 * v18 + 0.0604376608937 * v21
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.50863514172e-13 * 1 + 0.286915262811 * v1 + 0.131976862147 * v7 + 0.454829036895 * v15 + 0.0 * v17
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.23132630281e-14 * 1 + 0.203533903706 * v13 + 0.260011277112 * v17 + 0.0293311140889 * v20 + 0.260459462382 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.16657708481e-13 * 1 + 0.202312880433 * v1 + 0.128572014635 * v6 + 0.224025483985 * v15 + 0.0 * v18
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.66076121634e-14 * 1 + 0.102332691808 * v1 + 0.166245861624 * v6 + 0.60721380096 * v15 + 0.0 * v18
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.96186391828e-14 * 1 + 0.0 * v8 + 0.152980233 * v15 + 0.399004154748 * v17 + 0.304500896579 * v27

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
