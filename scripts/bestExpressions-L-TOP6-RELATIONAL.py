from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.151515771748 * 1 + 0.365545094544 * v1 + 0.295334783139 * v8 + 0.0177097643074 * v17 + 0.151969301957 * v18
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.134231190355 * 1 + -0.0944377216214 * v1 + 0.345251806897 * v8 + 0.447433527081 * v13 + 0.247593808593 * v15
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00111811316712 * 1 + 0.0386481953066 * v8 + 0.408654581982 * v15 + 0.186717638014 * v17 + 0.293783997843 * v18
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.269001625151 * 1 + 0.439194957375 * v4 + 0.354287774011 * v13 + 0.136359586831 * v17 + 0.34075776525 * v21
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.381292168871 * 1 + 0.270534945556 * v1 + 0.193002551859 * v8 + -0.0598168007658 * v12 + 0.175816445811 * v18
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.163176107332 * 1 + -0.0334065454444 * v4 + 0.155056726851 * v8 + 0.397226411239 * v13 + 0.354252939823 * v15
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.130743952889 * 1 + -0.0778678935876 * v8 + 0.432269098275 * v12 + 0.312569820026 * v13 + 0.32845719379 * v15
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.290775274318 * 1 + -0.00108641309611 * v13 + 0.580220960649 * v15 + 0.0606163715966 * v17 + 0.00121195551971 * v18
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.27202253455 * 1 + 0.287333605177 * v1 + 0.486912851448 * v6 + 0.27524129558 * v8 + -0.285252980677 * v13
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.741000094218 * 1 + 0.0827195430744 * v1 + -0.0615604547471 * v6 + -0.0170002112069 * v8 + 0.233273520586 * v14
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.15448744773 * 1 + 0.288393840059 * v1 + 0.267082726372 * v15 + 0.0586827572375 * v17 + 0.200500019049 * v21
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.253703948902 * 1 + 0.194834420306 * v1 + 0.312286556101 * v4 + 0.0830776291412 * v8 + 0.203240885602 * v15
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.222261562298 * 1 + 0.171623765456 * v1 + 0.191873304333 * v8 + 0.275769273589 * v15 + 0.147284221855 * v17
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0572941571126 * 1 + 0.476555592291 * v1 + -0.021252352436 * v15 + 0.116887465582 * v17 + 0.423759760004 * v18
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.242928137073 * 1 + 0.31264208406 * v8 + 0.346712661941 * v13 + 0.137752346103 * v20 + -0.0212201470009 * v22
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.310473872224 * 1 + 0.0049118233195 * v1 + 0.464015603189 * v8 + 0.0286702719302 * v17 + 0.193768094304 * v20
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.00224309206496 * 1 + 0.230279107717 * v4 + 0.446165955728 * v15 + -0.00042504883242 * v17 + 0.329784279277 * v22
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.00617570709586 * 1 + 0.260892243671 * v8 + 0.209039811989 * v12 + 0.365129159113 * v15 + 0.150886132567 * v17
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.11373309761 * 1 + 0.388896985336 * v4 + 0.286586027635 * v6 + 0.171230367136 * v8 + 0.0888721012241 * v17
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.29456969894 * 1 + 0.148650618511 * v12 + -0.0759613427446 * v15 + 0.231795916236 * v16 + 0.390660153386 * v18
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.238896178961 * 1 + 0.0312572646227 * v4 + 0.257448560804 * v8 + 0.143414679686 * v15 + 0.316927419481 * v17
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.352588963019 * 1 + 0.40275181745 * v1 + 0.17328265027 * v15 + -0.0786798452139 * v17 + 0.174786553183 * v18
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.00748899029775 * 1 + 0.0169985416586 * v1 + 0.426306833673 * v4 + 0.124983672533 * v8 + 0.412655785882 * v20
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.194678565773 * 1 + 0.102487117601 * v8 + 0.103384347987 * v12 + 0.299139705665 * v13 + 0.68528204549 * v15
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.852109125433 * 1 + -0.643656884338 * v8 + 0.4615155909 * v12 + 0.449037213845 * v13 + -0.162802770017 * v15
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.137542699463 * 1 + 0.202334485425 * v1 + 0.429233957375 * v8 + -0.00713466086891 * v17 + 0.316602267546 * v20
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.305432337444 * 1 + -0.152283687413 * v1 + 0.397146653859 * v9 + 0.159939004444 * v17 + 0.268550433859 * v20
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.509355561979 * 1 + 0.174611862617 * v1 + -0.347875366251 * v4 + 0.204801796879 * v9 + 0.504090661995 * v12
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.339244134526 * 1 + 0.259429514852 * v1 + 0.261086898242 * v4 + 0.150582567281 * v15 + 0.0132188215844 * v17
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0629418332832 * 1 + -0.0516610414654 * v1 + 0.115040994479 * v4 + 0.545100125104 * v13 + 0.303561298814 * v17
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.071903235909 * 1 + 0.290333412579 * v5 + 0.200311570871 * v12 + 0.168130380938 * v13 + 0.288117915767 * v21
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0113698548635 * 1 + 0.130421527655 * v8 + 0.22992402071 * v15 + 0.56780663782 * v16 + 0.058953776368 * v17
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0607113708727 * 1 + 0.228173658442 * v4 + 0.329665196489 * v12 + 0.292915969865 * v15 + 0.249465417272 * v17
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.136338625402 * 1 + 0.293029332363 * v5 + 0.15425743322 * v6 + 0.247844827149 * v14 + 0.283026568038 * v17
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.16906426193 * 1 + 0.123821377333 * v1 + 0.155249119572 * v8 + 0.509873321161 * v15 + 0.0598262306314 * v18
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.29881626563 * 1 + 0.147487068436 * v1 + 0.593718669608 * v7 + -0.139622858226 * v15 + 0.0994754441369 * v17
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0339715694804 * 1 + 0.246914762043 * v1 + 0.302501566699 * v13 + 0.0819952481032 * v17 + 0.307301344322 * v20
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.196595917963 * 1 + 0.214543606381 * v1 + 0.126089889922 * v6 + 0.369110836819 * v9 + -0.149612033288 * v15
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.163044079416 * 1 + 0.19910335839 * v1 + 0.691939839651 * v6 + -0.0723716265566 * v15 + -0.00304867509865 * v18
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.131268769807 * 1 + 0.131141809988 * v8 + 0.229676703623 * v12 + 0.42400899377 * v15 + 0.324930791968 * v17
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.129911772733 * 1 + 0.114062499949 * v1 + 0.0865091596746 * v4 + 0.550342376896 * v15 + 0.099292530801 * v17

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
