from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.57176712001e-13 * 1 + 0.150850850226 * v1 + 0.0110978838125 * v4 + 0.373572348868 * v8 + 0.285595751608 * v17 + 0.0358328634451 * v18 + 0.157370636157 * v20 + -0.0322178863151 * v23
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9228511844e-13 * 1 + 0.198814610034 * v1 + -0.0298214767488 * v8 + 0.419948992487 * v13 + 0.490876163186 * v15 + 0.335109960684 * v17 + -0.00248971131401 * v18 + -0.319614043793 * v20
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.37720042609e-14 * 1 + 0.200793088882 * v1 + -0.0739765564841 * v8 + -0.0813760976487 * v15 + 0.441019343154 * v17 + 0.422230545956 * v18 + 0.173497902682 * v21 + -0.110042011157 * v24
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18063796239e-14 * 1 + -0.261051007819 * v4 + 0.446177723831 * v13 + 0.0621314182939 * v15 + 0.325858086092 * v17 + 0.105895453788 * v21 + -0.00792212369626 * v22 + 0.332123743337 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.85555872235e-13 * 1 + 0.368281254957 * v1 + 0.337176818288 * v8 + 0.26280624489 * v11 + 0.235073216852 * v12 + -0.15340970992 * v18 + 0.09990009581 * v25 + -0.141915409394 * v27
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.27265472116e-13 * 1 + 0.431812242191 * v4 + -0.268559972989 * v8 + 0.332492152141 * v12 + 0.0771168749963 * v13 + 0.503469245265 * v15 + 0.332590069509 * v17 + -0.364846368705 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.8300518396e-13 * 1 + -0.117830069594 * v0 + -0.00231465472526 * v1 + 0.171064035662 * v8 + -0.0528020187478 * v12 + 0.43247184964 * v13 + 0.364914506071 * v15 + 0.320783980371 * v17
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.09205331246e-13 * 1 + 0.216500920546 * v6 + -0.0450349667039 * v12 + 0.304465583032 * v13 + 0.00201505483197 * v15 + 0.506422531812 * v17 + 0.105105163432 * v18 + -0.0758704706579 * v21
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.09812178897e-14 * 1 + -0.00381376180032 * v1 + 0.397904141596 * v6 + 0.66390248188 * v8 + 0.123624107554 * v13 + -0.268626537926 * v18 + -0.107797390387 * v23 + 0.247262535405 * v27
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.63940793249e-14 * 1 + 0.751546581276 * v1 + 0.00762461608246 * v4 + 0.149879641294 * v6 + -0.0334126369619 * v8 + -0.192015536681 * v9 + 0.0265068767998 * v14 + 0.263307190094 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.57639398862e-14 * 1 + 0.151020372589 * v1 + -0.0960192606796 * v5 + 0.315621851169 * v15 + 0.22453076242 * v17 + -0.181130399191 * v20 + 0.225202882178 * v21 + 0.330033248163 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30084828741e-15 * 1 + 0.253969780113 * v1 + 0.24197061115 * v4 + 0.427472101883 * v8 + -0.134183241874 * v12 + 0.0650262932179 * v15 + -0.0117224183722 * v18 + 0.19921240269 * v27
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.1135076435e-14 * 1 + 0.198045097177 * v1 + 0.163603443128 * v8 + 0.227716646353 * v15 + 0.272301537404 * v17 + 0.0837267530953 * v20 + -0.0922034921309 * v21 + 0.170630361772 * v27
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.27912372755e-15 * 1 + 0.0416955664896 * v1 + -0.092597895117 * v8 + 0.505335655566 * v15 + -0.0385688467969 * v17 + 0.199714851053 * v18 + -0.0145404613994 * v22 + 0.44802231949 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.34748308046e-13 * 1 + 0.188854424354 * v8 + 0.0634688015714 * v12 + 0.181745375062 * v13 + 0.209907890536 * v20 + 0.0998749752532 * v22 + 0.261510590553 * v27 + 0.0616799147969 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.82573181812e-13 * 1 + 0.257294852666 * v1 + 0.249678842147 * v5 + -0.0545742068943 * v8 + 0.103483974228 * v15 + 0.444353860079 * v17 + -0.08255307905 * v20 + 0.137299641923 * v21
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23191589418e-13 * 1 + -0.125314049326 * v4 + -0.104361993518 * v8 + 0.193812301954 * v13 + 0.233857130509 * v15 + 0.504395538106 * v17 + 0.0434745997237 * v22 + 0.28715723045 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.04361946823e-13 * 1 + -0.0509324263335 * v5 + 0.118411039648 * v7 + 0.0266638364534 * v8 + 0.273842618392 * v12 + 0.159006284054 * v15 + 0.361463519857 * v17 + 0.107480042231 * v20
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.52024191694e-14 * 1 + 0.0318764087864 * v4 + 0.348053892101 * v6 + 0.228042499981 * v8 + 0.140979480777 * v13 + 0.113469012333 * v15 + 0.130352648756 * v17 + 0.0663146493641 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.30027999077e-14 * 1 + 0.442432936159 * v12 + 0.165579584315 * v15 + -0.196038216623 * v16 + 0.259943633617 * v18 + 0.354094478396 * v20 + -0.0786093452794 * v21 + 0.0751028049534 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.55444569051e-14 * 1 + 0.190030582815 * v4 + 0.09629708306 * v8 + 0.0264548074309 * v11 + 0.313041464629 * v15 + 0.179657905653 * v17 + -0.16255042519 * v21 + 0.343749903106 * v25
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.20733772145e-13 * 1 + 0.370333799802 * v1 + -0.124612495655 * v7 + -0.0072723028776 * v8 + 0.419075245177 * v15 + 0.117342744103 * v17 + -0.000578370673602 * v18 + 0.24589748779 * v27
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.63906906825e-14 * 1 + -0.103598624004 * v1 + 0.0148848588473 * v4 + 0.267507680514 * v6 + 0.515859311182 * v8 + 0.107865673848 * v20 + -0.143217777862 * v21 + 0.340940218114 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.97006261713e-13 * 1 + -0.147435392404 * v8 + 0.086983236061 * v12 + 0.237161059689 * v13 + 0.327960945878 * v15 + 0.69639706985 * v17 + -0.0141598113748 * v20 + -0.196786934316 * v22
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.76449644381e-14 * 1 + -0.0999646121276 * v4 + 0.806349183617 * v8 + -0.593354132556 * v12 + 0.55408617014 * v13 + 0.452987415438 * v15 + -0.0882037852996 * v17 + -0.0834960909877 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.87970670073e-14 * 1 + 0.124955271799 * v1 + -0.0344375262532 * v5 + 0.199294450529 * v8 + 0.400024032668 * v17 + -0.000693847638703 * v20 + 0.0604310642674 * v21 + 0.333384871337 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.81937867823e-13 * 1 + 0.360729247719 * v1 + 0.280447681016 * v7 + -0.287096338548 * v9 + 0.458804180568 * v13 + 0.426514587218 * v17 + -0.110114338342 * v20 + -0.103407521297 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.04254682511e-14 * 1 + 0.360411905676 * v1 + 0.0794706736124 * v4 + -0.52108550722 * v9 + 0.292288021908 * v12 + 0.350289631246 * v13 + 0.155568973749 * v26 + 0.356687826825 * v27
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.39121547494e-14 * 1 + 0.467677736099 * v1 + 0.0989344851835 * v4 + 0.315308732794 * v13 + 0.254226792478 * v15 + 0.0814999220118 * v17 + -0.0747619182419 * v20 + -0.078615944445 * v27
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.63612770387e-13 * 1 + 0.173751698003 * v1 + 0.122059943854 * v4 + 0.108071998632 * v13 + 0.0871825404583 * v15 + 0.55703957006 * v17 + -0.405943409755 * v20 + 0.320401198807 * v27
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.72554068376e-14 * 1 + -0.101570864058 * v5 + 0.351197049787 * v8 + -0.103339952533 * v12 + 0.352611370586 * v13 + 0.283465792938 * v17 + -0.0463148264657 * v21 + 0.35535432914 * v26
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.30795049124e-13 * 1 + 0.118780182869 * v0 + 0.309525267595 * v1 + 0.145456868894 * v8 + 0.122070712601 * v15 + 0.0483961063831 * v16 + 0.431780667727 * v17 + -0.171036574015 * v18
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.20725540317e-13 * 1 + -0.153528968529 * v4 + -0.0883827028072 * v8 + 0.251697867009 * v12 + 0.0536296630708 * v13 + 0.378060289073 * v15 + 0.335190041725 * v17 + 0.249789072543 * v27
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25875163242e-14 * 1 + 0.174724025961 * v1 + 0.0698213737385 * v5 + 0.246860686118 * v6 + 0.145195925307 * v14 + 0.241383562894 * v17 + 0.0651441274219 * v25 + 0.232035637492 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.32150820182e-13 * 1 + 0.0330944081637 * v1 + 0.319550058894 * v7 + 0.181672956733 * v8 + 0.150676466139 * v15 + 0.200029238887 * v17 + 0.302482548498 * v18 + -0.0452635069471 * v21
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86522974564e-13 * 1 + 0.223742127474 * v1 + 0.186841372723 * v7 + 0.186828433459 * v13 + 0.640776625696 * v15 + -0.217686642446 * v17 + -0.218041206118 * v18 + 0.251813970676 * v21
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.97710592178e-14 * 1 + -0.0183047729903 * v1 + 0.262523384568 * v7 + 0.286953783335 * v13 + 0.264753477931 * v17 + 0.00115151425159 * v20 + -0.00636546638022 * v25 + 0.25599502043 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.66976445142e-13 * 1 + 0.236577027488 * v1 + 0.275097590601 * v6 + -0.184301469565 * v7 + 0.1664148564 * v9 + 0.38677424716 * v15 + -0.0452719504979 * v18 + -0.0850150086035 * v21
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.6108043607e-14 * 1 + 0.170752530752 * v1 + 0.240231861057 * v6 + 0.0698660360829 * v7 + 0.225556235743 * v12 + 0.516673538144 * v15 + -0.144751683673 * v18 + -0.045312072146 * v21
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.0963309189e-14 * 1 + -0.041424141303 * v8 + 0.13299290021 * v12 + 0.279790395769 * v15 + 0.410198335372 * v17 + -0.115043742239 * v18 + 0.331003667154 * v27 + -0.0281878196932 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
