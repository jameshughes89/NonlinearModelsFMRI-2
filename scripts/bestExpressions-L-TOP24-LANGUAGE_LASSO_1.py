from math import *

def func_LANGUAGE_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26159224676e-14 * 1 + 0.0 * v0 + 0.228293241513 * v1 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0177804585175 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.372463579636 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.00991794240255 * v27 + 0.232798195553 * v28
def func_LANGUAGE_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00472792882e-13 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v4 + -0.0 * v5 + -0.0 * v6 + 0.0200051330214 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v14 + -0.0 * v15 + 0.366557213972 * v17 + 0.315158633176 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v25 + 0.13587380966 * v27 + -0.0 * v28
def func_LANGUAGE_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.35701098167e-14 * 1 + 0.0 * v0 + 0.0241334479823 * v1 + -0.0 * v2 + -0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0272568666032 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.167236619285 * v17 + 0.376470530829 * v18 + 0.109168502472 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.183127138155 * v26 + 0.0 * v27 + 0.228848367522 * v28
def func_LANGUAGE_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.19424195423e-14 * 1 + 0.345942222697 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.220790748864 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0629531599556 * v13 + 0.0 * v14 + 0.0 * v15 + 0.168299338746 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0179310533859 * v21 + 0.0407812254531 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0623459353793 * v27 + 0.0 * v28
def func_LANGUAGE_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.49934606971e-14 * 1 + 0.098259198641 * v0 + 0.0241735434482 * v1 + -0.0 * v3 + -0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0658308226555 * v9 + 0.132094988485 * v11 + -0.0 * v12 + 0.0 * v13 + 0.113283297431 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.330750971925 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + -0.159315621943 * v26 + 0.0609041205778 * v27 + 0.0 * v28
def func_LANGUAGE_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.97016619056e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0644273703092 * v6 + 0.251412245951 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.318982241965 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0234114119652 * v25 + -0.0 * v26 + 0.116717654366 * v27 + 0.141607619546 * v28
def func_LANGUAGE_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.96150813012e-13 * 1 + -0.0 * v0 + 0.153146615507 * v1 + -0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0677879049642 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.387914433925 * v17 + 0.0703046405093 * v18 + 0.00993392578903 * v20 + 0.168460194402 * v21 + -0.0 * v22 + -0.0 * v23 + -0.0 * v25 + -0.044033464849 * v26 + 0.0 * v27
def func_LANGUAGE_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.41319579204e-14 * 1 + 0.0 * v0 + 0.152878379735 * v1 + 0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.168090391015 * v7 + 0.101868767858 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.209226006903 * v17 + 0.0414448601677 * v18 + 0.0 * v20 + 0.168622461904 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0333665427849 * v24 + -0.0 * v26 + 0.0417477728266 * v27 + 0.0 * v28
def func_LANGUAGE_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.13550195034e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v6 + 0.123397445854 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v14 + -0.0 * v15 + 0.142403199185 * v16 + 0.289484789356 * v17 + 0.044824695512 * v18 + 0.0 * v19 + 0.0 * v20 + 0.051278125504 * v21 + 0.0 * v22 + 0.0 * v23 + 0.226805451218 * v24 + -0.0 * v25
def func_LANGUAGE_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.45481805062e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0603205008751 * v9 + 0.0 * v10 + 0.0 * v11 + 0.26563622748 * v12 + 0.0 * v13 + 0.0 * v15 + 0.425093990991 * v17 + 0.0292232733851 * v18 + 0.0 * v20 + 0.0907947113375 * v21 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.27851233719e-14 * 1 + -0.0 * v0 + -0.0 * v1 + -0.0 * v2 + -0.0 * v4 + -0.140443802701 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.322800138004 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v12 + -0.0671281694954 * v14 + -0.285120128431 * v15 + -0.0 * v16 + 0.511461341666 * v17 + -0.0 * v20 + -0.0 * v21 + -0.236761310362 * v22 + -0.0 * v23 + -0.0 * v25 + -0.0 * v26 + 0.0 * v28
def func_LANGUAGE_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.51118537957e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.188853588473 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.115194266691 * v14 + 0.0489196565849 * v15 + 0.0 * v16 + 0.489711583572 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0566199138146 * v28
def func_LANGUAGE_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.85404846158e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.163776214572 * v7 + 0.0473869842081 * v8 + -0.0 * v9 + -0.0 * v10 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.206375000791 * v18 + 0.0 * v20 + 0.0661348743523 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.158774985877 * v26 + 0.313416517272 * v27 + 0.229574564789 * v28
def func_LANGUAGE_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.7484398721e-13 * 1 + 0.0659443628735 * v0 + 0.0 * v1 + -0.0 * v3 + -0.0 * v4 + -0.0 * v6 + 0.0088927083687 * v8 + 0.0 * v9 + 0.100979248925 * v10 + 0.0570604278978 * v11 + 0.0 * v12 + -0.0 * v13 + -0.0325124180932 * v15 + 0.0 * v16 + 0.27811496082 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.13830971914 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v25 + 0.311591407306 * v27 + 0.0395747374931 * v28
def func_LANGUAGE_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56129181516e-13 * 1 + 0.0 * v0 + 0.0950190805129 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.30407116574 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0603848228999 * v20 + 0.229383279549 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.246667205441 * v28
def func_LANGUAGE_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.95239367687e-14 * 1 + 0.0 * v0 + 0.114760328968 * v1 + -0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.110009468312 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.367714800188 * v17 + 0.17119831648 * v18 + 0.141278203389 * v20 + 0.0790092131874 * v21 + 0.0 * v23 + -0.0490528469298 * v24 + -0.197435502403 * v25 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05084128071e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.137213609434 * v8 + -0.0 * v9 + 0.0867466401801 * v10 + 0.0314008526577 * v11 + 0.0 * v12 + -0.0280317279267 * v13 + 0.0 * v15 + 0.0193383184212 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.210349623743 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.286212767114 * v27
def func_LANGUAGE_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.45388680147e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v2 + -0.0215256552812 * v3 + -0.0 * v4 + -0.0 * v5 + 0.10530866538 * v7 + 0.161009481968 * v8 + 0.0 * v9 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.227693095251 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.184612056218 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0306393591374 * v27 + 0.254986808426 * v28
def func_LANGUAGE_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.73330475548e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0500349097458 * v2 + -0.0 * v3 + 0.218327371759 * v6 + 0.0315338905684 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.470980649806 * v17 + 0.193931666677 * v18 + -0.0 * v19 + 0.0 * v20 + 0.039173437935 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.41763343221e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.493131764582 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.243069822551 * v21 + 0.0 * v22 + 0.0 * v24 + 0.118785137838 * v27 + 0.0250514774398 * v28
def func_LANGUAGE_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.262506987e-13 * 1 + 0.00902158162254 * v0 + 0.0516309668055 * v1 + -0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.483492955683 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.024658076346 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0671012748114 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v26 + 0.255270476505 * v27 + 0.128030843695 * v28
def func_LANGUAGE_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.72342574647e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.067021524949 * v7 + 0.0 * v8 + 0.0529932022287 * v9 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.183800630518 * v15 + 0.0 * v16 + 0.174136272698 * v17 + 0.199585529511 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.201846930572 * v27 + 0.0 * v28
def func_LANGUAGE_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.4989871491e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + 0.0 * v16 + 0.75596440066 * v17 + 0.00790260354365 * v18 + 0.0437732148304 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.40250191481e-14 * 1 + 0.0 * v0 + 0.162202324015 * v1 + -0.0 * v2 + 0.0 * v3 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.445879248853 * v8 + 0.0 * v10 + 0.0315327618362 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.165491760573 * v17 + 0.0720536441484 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.00164039239445 * v25 + 0.0272083038144 * v27 + 0.0 * v28
def func_LANGUAGE_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.45868243576e-13 * 1 + 0.0 * v0 + 0.172511575867 * v1 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0161994077765 * v6 + 0.136470924393 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v15 + 0.0 * v16 + 0.0873350497085 * v17 + 0.0 * v18 + 0.0 * v19 + 0.116676004671 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0209976015238 * v27 + 0.355228451743 * v28
def func_LANGUAGE_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.15463656028e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0567855928499 * v7 + 0.354981103217 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.351774579661 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.044793148057 * v23 + -0.0 * v24 + -0.0429944738899 * v25 + 0.0 * v27 + 0.0679800970413 * v28
def func_LANGUAGE_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.10668023912e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0628334350731 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0962151357866 * v11 + 0.0 * v12 + -0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.0714957946476 * v17 + 0.17234350982 * v18 + 0.282791397568 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.268982203518 * v27 + 0.0 * v28
def func_LANGUAGE_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12941797006e-14 * 1 + 0.0 * v0 + 0.146404850498 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.00324114094971 * v7 + 0.127928874742 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.221234308853 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0343336822411 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v26 + 0.261139774734 * v27 + 0.116044211682 * v28
def func_LANGUAGE_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.02011548192e-13 * 1 + 0.0 * v0 + 0.0391310888288 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.114930270491 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v13 + -0.0 * v15 + 0.0 * v16 + 0.216255597571 * v17 + 0.0 * v18 + 0.291225330114 * v20 + 0.00291467758586 * v21 + 0.0270188811995 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0259650326832 * v25 + -0.0 * v26 + 0.0624663176395 * v27 + 0.162132247315 * v28
def func_LANGUAGE_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76537473409e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.363727600223 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + -0.0 * v14 + 0.0 * v15 + 0.315130730234 * v17 + 0.185386256359 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.12701792109e-14 * 1 + 0.0 * v0 + 0.0105686919011 * v1 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0814735834417 * v7 + 0.0148095772261 * v8 + -0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v15 + -0.0 * v16 + 0.254029819115 * v17 + 0.0320226588455 * v18 + 0.325658333845 * v20 + 0.0644663594518 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v27 + 0.0325609032023 * v28
def func_LANGUAGE_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.68361941609e-15 * 1 + 0.114762174152 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.381571495538 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0648275801342 * v15 + 0.316235046869 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161196139033 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.64969515501e-13 * 1 + 0.123836661828 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0446061335244 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0115661482434 * v13 + 0.0 * v15 + 0.0 * v16 + 0.465639334035 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0204326520464 * v21 + 0.0 * v22 + 0.0451034116373 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0506916168561 * v27 + 0.13955405258 * v28
def func_LANGUAGE_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.70910832936e-14 * 1 + 0.0 * v0 + 0.0839122806875 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0561656138102 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + -0.137452767677 * v14 + 0.0 * v15 + 0.0951134339336 * v16 + 0.218700847899 * v17 + 0.0 * v18 + 0.31767634512 * v20 + 0.113965364422 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.00370643253312 * v27 + 0.0 * v28
def func_LANGUAGE_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.28856494134e-14 * 1 + 0.0 * v0 + 0.00476881105254 * v1 + 0.0 * v2 + -0.0 * v4 + 0.0 * v6 + 0.265882890559 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.61534859654 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0443285148082 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36445409451e-13 * 1 + 0.0 * v0 + 0.134727067907 * v1 + -0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.268094270101 * v17 + 0.308073349909 * v18 + 0.088086381364 * v20 + 0.0771069131475 * v21 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.46572230533e-13 * 1 + 0.0 * v0 + 0.0563482229514 * v1 + -0.0 * v2 + -0.0 * v4 + 0.0886589404333 * v7 + 0.410916685278 * v8 + 0.0 * v9 + 0.0 * v10 + 0.121578200369 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.229138144325 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.40418154369e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.185564947604 * v7 + 0.138519881994 * v8 + 0.052838123932 * v9 + -0.0 * v10 + 0.109773057352 * v11 + -0.0 * v12 + 0.189086252957 * v16 + 0.0 * v17 + 0.0838624667208 * v18 + 0.0 * v20 + 0.062172561354 * v21 + -0.0 * v22 + -0.0 * v23 + -0.0 * v24 + -0.329414449831 * v26 + 0.0504185743717 * v27 + -0.0 * v28
def func_LANGUAGE_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.91508581741e-15 * 1 + 0.00260957289317 * v0 + 0.0177717766937 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.111359023791 * v10 + 0.0839987927533 * v11 + 0.075392790502 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.213822422769 * v17 + 0.0 * v18 + 0.287705769911 * v20 + 0.000482221845886 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0723804336043 * v25 + 0.0926002891351 * v27 + 0.124878528214 * v28
def func_LANGUAGE_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.90779681046e-14 * 1 + -0.0 * v0 + 0.160658161541 * v1 + -0.0942959860897 * v3 + -0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + -0.0 * v10 + 0.143699414124 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.167008351931 * v17 + 0.423646042351 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v24 + -0.235132127858 * v25 + 0.0 * v27
def func_LANGUAGE_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.81318701046e-14 * 1 + 0.0255315787841 * v0 + 0.264810616964 * v1 + 0.0352852275328 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.159562992325 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.44660647276 * v17 + -0.0 * v18 + 0.0 * v20 + 0.0445650044346 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28

funcs = [funcL_LANGUAGE_100307,funcL_LANGUAGE_100408,funcL_LANGUAGE_101006,funcL_LANGUAGE_101107,funcL_LANGUAGE_101309,funcL_LANGUAGE_101410,funcL_LANGUAGE_101915,funcL_LANGUAGE_102008,funcL_LANGUAGE_102311,funcL_LANGUAGE_102816,funcL_LANGUAGE_103111,funcL_LANGUAGE_103414,funcL_LANGUAGE_103515,funcL_LANGUAGE_103818,funcL_LANGUAGE_104012,funcL_LANGUAGE_104820,funcL_LANGUAGE_105014,funcL_LANGUAGE_105115,funcL_LANGUAGE_105216,funcL_LANGUAGE_105923,funcL_LANGUAGE_106016,funcL_LANGUAGE_106319,funcL_LANGUAGE_106521,funcL_LANGUAGE_107321,funcL_LANGUAGE_107422,funcL_LANGUAGE_108121,funcL_LANGUAGE_108323,funcL_LANGUAGE_108525,funcL_LANGUAGE_108828,funcL_LANGUAGE_109123,funcL_LANGUAGE_109325,funcL_LANGUAGE_110411,funcL_LANGUAGE_111312,funcL_LANGUAGE_111413,funcL_LANGUAGE_111514,funcL_LANGUAGE_111716,funcL_LANGUAGE_113215,funcL_LANGUAGE_113619,funcL_LANGUAGE_113922,funcL_LANGUAGE_114419,funcL_LANGUAGE_114924,]

def getFuncs(): return funcs
