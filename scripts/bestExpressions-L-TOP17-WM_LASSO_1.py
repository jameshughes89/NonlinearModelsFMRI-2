from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.9850554854e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.045288682419 * v3 + 0.0644097792379 * v4 + 0.0 * v11 + 0.0 * v12 + 0.144500666051 * v13 + 0.172737436179 * v15 + 0.0700167782386 * v16 + 0.358362640922 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0799437078594 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.23213243787e-14 * 1 + 0.0 * v0 + 0.0 * v4 + 0.170880574556 * v5 + 0.120935911889 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.22664532649 * v17 + 0.0808454389225 * v20 + 0.146409621446 * v21 + 0.112579218882 * v22 + 0.100369399816 * v24 + 0.031782863031 * v25 + 0.070566939603 * v28
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17466977994e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.186191471154 * v5 + -0.0 * v8 + 0.0625374086576 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.152964695633 * v15 + 0.224853683376 * v16 + 0.222455893693 * v19 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.000209229477485 * v25 + 0.0 * v28
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43328099362e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0206652423006 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v15 + 0.0 * v16 + 0.249544990146 * v17 + 0.0934546556301 * v18 + 0.165716410227 * v20 + 0.0 * v21 + 0.363192535986 * v22 + 0.0 * v23 + 0.0 * v27 + -0.0 * v28
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26780686112e-13 * 1 + 0.0 * v1 + 0.0523410773649 * v4 + 0.0960073499831 * v5 + 0.008904003698 * v6 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v17 + 0.145072830474 * v20 + 0.11838564053 * v21 + 0.0 * v22 + 0.25335027511 * v25 + 0.0 * v26 + 0.239627114673 * v27 + 0.0191785110963 * v28
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.00243522818e-14 * 1 + 0.0 * v0 + 0.00745348630894 * v1 + 0.0 * v4 + 0.146558549594 * v5 + 0.125626122906 * v10 + 0.0 * v11 + 0.0658138200334 * v15 + 0.0 * v16 + 0.243235723687 * v17 + 0.0305086173333 * v18 + 0.0 * v20 + 0.0785955715614 * v22 + 0.246167481445 * v23 + 0.00777544580124 * v25 + 0.0 * v27 + 0.0 * v28
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65684668541e-13 * 1 + 0.182256452756 * v1 + 0.0 * v4 + 0.0668045459469 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0585938137949 * v15 + 0.0 * v17 + 0.0 * v18 + 0.149873533862 * v20 + 0.302612807788 * v21 + 0.161643835178 * v22 + 0.0 * v26 + 0.0 * v27
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90739057607e-14 * 1 + 0.0420794484775 * v1 + 0.429347719219 * v2 + 0.0 * v6 + 0.0423133964166 * v7 + 0.0 * v10 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.0141290342019 * v17 + 0.0 * v18 + 0.287175097592 * v20 + 0.112490346794 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23706260043e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.216461026943 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0783064427482 * v9 + 0.0859851979667 * v11 + 0.0 * v12 + 0.155466533705 * v15 + 0.0769187502414 * v17 + 0.0487122845743 * v20 + 0.204816281964 * v21 + 0.0762346441988 * v22 + 0.0 * v23 + 0.0 * v25
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27635690389e-13 * 1 + 0.0 * v0 + 0.00217015486776 * v1 + 0.0 * v2 + 0.221930720644 * v4 + 0.073687654282 * v7 + 0.0413900448951 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0141720280794 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0468755282741 * v20 + 0.32524372773 * v21 + 0.16871728212 * v22 + 0.0 * v23 + 0.0402658611882 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.99874162543e-14 * 1 + 0.00678599343613 * v0 + 0.0686599011535 * v2 + 0.0806372555384 * v5 + 0.0 * v7 + 0.0298971066362 * v8 + 0.0 * v12 + 0.0604192208141 * v16 + 0.0 * v17 + 0.0465277422835 * v19 + 0.0 * v20 + 0.301177034236 * v21 + 0.271879381268 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0495473915685 * v28
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.24841774504e-13 * 1 + 0.13160245922 * v1 + 0.0789346285289 * v7 + 0.0 * v9 + 0.0885358909713 * v11 + 0.0 * v14 + 0.0218914344929 * v15 + 0.0 * v16 + 0.0383321022072 * v17 + 0.0893484296255 * v19 + 0.184536617939 * v20 + 0.137146940498 * v21 + 0.0809030096582 * v22 + 0.0614535360284 * v23 + 0.0790436424599 * v25 + 0.0 * v27 + 0.0 * v28
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.78752540936e-15 * 1 + 0.0 * v2 + 0.152738252194 * v3 + 0.0 * v4 + -0.0 * v5 + -0.0 * v9 + 0.0374362055863 * v10 + -0.0 * v11 + -0.0 * v14 + -0.0205794615232 * v15 + -0.0 * v16 + 0.496146788033 * v17 + 0.123974297256 * v20 + -0.0 * v22 + 0.0 * v24 + 0.0 * v25 + -0.0 * v28
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19767717769e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.00764389213177 * v4 + 0.332648802628 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.288533562959 * v15 + 0.0 * v17 + 0.0 * v18 + 0.135841153217 * v20 + 0.0393043207162 * v21 + 0.0530095447148 * v22 + 0.106735933166 * v25 + 0.0 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14154825877e-14 * 1 + 0.0 * v0 + 0.0 * v4 + 0.106839772189 * v5 + 0.0 * v8 + 0.226659469463 * v9 + 0.0 * v11 + 0.0 * v12 + 0.35958573512 * v15 + 0.0992958094052 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0514496101855 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.93269985127e-13 * 1 + 0.161434378301 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0582233855192 * v5 + 0.00736691099127 * v9 + 0.103807372098 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v16 + 0.062541977246 * v20 + 0.234183089769 * v22 + 0.0880319140983 * v23 + 0.186929358544 * v25 + 0.0 * v26 + 0.0608758857748 * v28
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9730212354e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + -0.0 * v6 + 0.0 * v7 + 0.0 * v11 + 0.0932214013561 * v15 + 0.305864892784 * v16 + 0.0 * v17 + 0.0348838980158 * v19 + 0.275709300644 * v21 + 0.179512551056 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v26 + 0.12303778231 * v28
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35544429881e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0402309641191 * v5 + 0.108332233783 * v7 + 0.0 * v8 + 0.275876154268 * v9 + 0.0282269432547 * v12 + 0.119806781069 * v15 + 0.00629951782541 * v17 + 0.0 * v18 + 0.213413323638 * v21 + 0.0 * v22 + 0.0637045363288 * v23 + 0.0347139191778 * v24 + 0.0639825473512 * v25 + 0.0 * v27
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75895230851e-14 * 1 + 0.0755406349968 * v1 + 0.0 * v4 + 0.145939883164 * v5 + 0.164241465048 * v6 + 0.0 * v7 + 0.0 * v8 + 0.183600409247 * v11 + 0.0 * v14 + 0.0 * v16 + 0.0 * v19 + 0.0 * v20 + 0.147876827088 * v21 + 0.195372562368 * v23 + 0.0 * v25 + 0.0 * v27 + 0.00821099266339 * v28
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33978691557e-14 * 1 + 0.0350341375302 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0751534407349 * v5 + 0.0 * v7 + 0.0 * v8 + 0.110429328098 * v9 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0794556963275 * v20 + 0.365238909644 * v21 + 0.120713663513 * v22 + 0.13179625528 * v25 + 0.0170566873973 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.88506288217e-15 * 1 + 0.0 * v0 + 0.0920070760671 * v2 + 0.0 * v3 + 0.0471788815974 * v4 + 0.109458143629 * v5 + 0.0133931188565 * v9 + 0.096169449265 * v11 + 0.0 * v12 + 0.0373847193196 * v13 + 0.0 * v16 + 0.189599062865 * v17 + 0.0 * v19 + 0.0 * v22 + 0.0 * v23 + 0.0605299439403 * v25 + 0.315332179426 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49137781664e-14 * 1 + 0.12295073574 * v1 + 0.0 * v3 + 0.0838413720748 * v5 + 0.0 * v7 + 0.0917191563922 * v9 + 0.0 * v13 + 0.148507383923 * v15 + 0.0 * v17 + 0.0 * v18 + 0.137838703453 * v19 + 0.288348334644 * v20 + 0.0549620590996 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.0951558595e-13 * 1 + 0.0482664528954 * v1 + 0.0983929355796 * v4 + 0.0689970847504 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.207735227643 * v11 + 0.0 * v12 + 0.0 * v13 + 0.179004654443 * v20 + 0.154482954306 * v21 + 0.189001819759 * v22 + 0.0185691567068 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0187944488825 * v27
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.21609556432e-15 * 1 + 0.0 * v0 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0632415566736 * v8 + 0.0189718265689 * v11 + 0.0 * v15 + 0.0 * v16 + 0.253226426151 * v17 + 0.0 * v19 + 0.0228973659074 * v20 + 0.0 * v21 + 0.562937773649 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v28
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.17552462882e-14 * 1 + 0.227025968317 * v1 + 0.0 * v3 + 0.0199158589917 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0297937762833 * v15 + 0.0 * v16 + 0.229780137004 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0155373258098 * v21 + 0.10720621843 * v22 + 0.214550332057 * v23 + 0.0429207741502 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.04408911432e-13 * 1 + 0.0 * v0 + 0.035384723328 * v1 + 0.0 * v4 + 0.334391026963 * v5 + 0.172871532978 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0718309373977 * v20 + 0.188819064838 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v27 + 0.131443034973 * v28
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.4950583694e-13 * 1 + 0.033035251484 * v1 + 0.0 * v3 + 0.0101537657858 * v4 + 0.0 * v5 + 0.253198544397 * v9 + 0.0489287014856 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0253526866521 * v15 + 0.0384638607839 * v16 + 0.0508323459006 * v17 + 0.221300935837 * v21 + 0.0408701798039 * v22 + 0.038639477971 * v23 + 0.0 * v25 + 0.269602847413 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85720851909e-14 * 1 + 0.0329650276598 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00198105504962 * v4 + 0.247584447314 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0 * v18 + 0.130076247624 * v20 + 0.237189805785 * v21 + 0.185551695851 * v25 + 0.0961830380319 * v28
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.42819217943e-13 * 1 + 0.117957900928 * v1 + 0.119648170519 * v4 + 0.158642975038 * v5 + 0.0 * v8 + 0.129372507005 * v9 + 0.0 * v11 + 0.0323274173724 * v13 + 0.0101410445253 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.260696827988 * v21 + 0.077553899258 * v22 + 0.0 * v25 + 0.0472498431305 * v27 + 0.0 * v28
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11365209748e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0259526232696 * v9 + 0.24352743482 * v11 + 0.0 * v12 + 0.0882741429908 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0204065834417 * v19 + 0.235177650363 * v21 + 0.172834365559 * v22 + 0.0 * v23 + 0.0 * v25 + 0.141571176113 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.30689582219e-13 * 1 + 0.121357003357 * v0 + 0.0 * v1 + 0.0729400255883 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0530387653269 * v9 + 0.0413437427131 * v13 + 0.0120778994527 * v15 + 0.0529749183485 * v16 + 0.0 * v17 + 0.022020051993 * v20 + 0.415787740555 * v21 + 0.1429790801 * v22 + 0.0 * v27 + 0.0 * v28
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.54086163059e-13 * 1 + 0.0 * v1 + 0.0397980470274 * v4 + 0.22460025691 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v13 + 0.0388515673925 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.13138722413 * v20 + 0.33456671318 * v21 + 0.153101140311 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68091106708e-14 * 1 + 0.0600745749683 * v1 + 0.0194148536159 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.214090483064 * v9 + 0.0351604765665 * v11 + 0.0263625983057 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.237128590327 * v21 + 0.226115283719 * v22 + 0.136068105909 * v25 + 0.0 * v28
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16651674557e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + -0.262901876619 * v6 + 0.0 * v14 + 0.0200677656559 * v15 + -0.0894991474448 * v16 + 0.0 * v17 + 0.247302822022 * v20 + 0.0595842187632 * v21 + 0.300936162276 * v22 + -0.0 * v23 + 0.0 * v27 + 0.0 * v28
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.84897891463e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.240099750627 * v5 + 0.0980768262666 * v7 + 0.123483654664 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.159698642016 * v20 + 0.0334851834168 * v21 + 0.292482865192 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.16386711256e-13 * 1 + 0.309141672728 * v0 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.372442279784 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v16 + 0.137105755001 * v17 + 0.0 * v19 + 0.0 * v21 + 0.197220139504 * v22 + 0.0 * v23 + 0.0 * v24 + 0.176164257625 * v28
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.48667663666e-14 * 1 + 0.00958400616232 * v0 + 0.0139906541765 * v1 + 0.117873672435 * v3 + 0.0554459454555 * v4 + 0.0 * v8 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0718451338118 * v16 + 0.0 * v17 + 0.0 * v18 + 0.173044157829 * v20 + 0.383186696699 * v21 + 0.0 * v23 + 0.0 * v24 + 0.181501523196 * v28
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.67249428592e-14 * 1 + 0.129910384972 * v1 + 0.0 * v3 + 0.0 * v4 + 0.311390282096 * v5 + 0.0 * v7 + 0.0415698043201 * v9 + 0.00591545718819 * v11 + 0.0 * v12 + 0.0 * v17 + 0.0902405612099 * v19 + 0.0 * v20 + 0.0608601387702 * v21 + 0.203008127197 * v22 + 0.0168283559029 * v25 + 0.0332342722672 * v27 + 0.0614781725662 * v28
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12543927541e-13 * 1 + 0.129392571383 * v1 + 0.00111896798223 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.181120543493 * v9 + 0.00674824987236 * v11 + 0.0 * v13 + 0.248462989588 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0583773523966 * v20 + 0.221767368055 * v21 + 0.0 * v27 + 0.0658197069138 * v28
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25242201129e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.234340881324 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.15913477825 * v9 + 0.00369865502054 * v16 + 0.0 * v17 + 0.0535829282172 * v19 + 0.0 * v20 + 0.287708825874 * v21 + 0.121522975213 * v22 + 0.0889390304797 * v26 + 0.0 * v27 + 0.0453095848244 * v28
def func_WM_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.39500017138e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.307547562322 * v3 + 0.112891242211 * v4 + -0.0 * v10 + 0.0595381943121 * v11 + 0.0 * v13 + 0.056678363395 * v14 + 0.0 * v15 + 0.182550666066 * v17 + -0.0 * v18 + 0.0 * v19 + 0.10715024252 * v20 + 0.081761378752 * v23 + 0.0 * v26 + 0.0 * v27

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,funcL_WM_114924,]

def getFuncs(): return funcs
