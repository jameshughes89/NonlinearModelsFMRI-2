from math import *

def funcL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61353377662e-14 * 1 + 0.0 * v0 + 0.0815191557842 * v1 + 0.031067480436 * v2 + 0.0 * v3 + -0.0 * v4 + 0.142968745826 * v6 + 0.164280097078 * v7 + 0.0 * v8 + 0.273629723845 * v9 + 0.0200106847668 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0188737790794 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0189929955469 * v23 + 0.0 * v24 + 0.0 * v26 + 0.149169693845 * v27 + -0.0 * v28
def funcL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.29100651164e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.203314828886 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.172105258762 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0904023882409 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.00290088385615 * v13 + 0.0 * v14 + 0.0665146246023 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0379624506141 * v20 + 0.123765188306 * v21 + 0.0 * v23 + 0.0 * v24 + 0.166044871171 * v26 + 0.0974142965889 * v27 + 0.0 * v28
def funcL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27095582415e-13 * 1 + 0.0 * v1 + 0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.258646699941 * v6 + 0.142540543012 * v7 + 0.0 * v8 + 0.149348586932 * v9 + 0.0 * v11 + 0.0 * v14 + 0.0 * v15 + 0.0 * v18 + 0.23459043619 * v19 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.00586092201828 * v23 + 0.0 * v26 + 0.0437160179979 * v27 + 0.229556540735 * v28
def funcL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.77815231466e-13 * 1 + 0.0 * v0 + 0.164689486494 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0984929792088 * v6 + 0.250704455519 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0277563957207 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.170441363708 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.131263434389 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0594436367036 * v27 + 0.0 * v28
def funcL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.39283658758e-14 * 1 + 0.0971685181371 * v0 + 0.0889689888305 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0850596599714 * v6 + 0.205951772761 * v7 + 0.0 * v8 + 0.223854857223 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0347563412047 * v15 + 0.101039284355 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0932770395599 * v27 + 0.0 * v28
def funcL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.46986001228e-14 * 1 + 0.0 * v0 + 0.171524156565 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.16602543141 * v9 + 0.151325061535 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.00159923276691 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.246602943355 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0378444345484 * v26 + 0.121423375201 * v27 + 0.0 * v28
def funcL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.48336505136e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.127432880925 * v6 + 0.179282415712 * v7 + 0.0 * v8 + 0.205315605633 * v9 + 0.0456609051497 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0319243776211 * v14 + 0.21599625892 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.144108709161 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0186908183769 * v28
def funcL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.12742543348e-14 * 1 + -0.0 * v0 + 0.133260064569 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.196270369233 * v6 + 0.041072965188 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.300707438468 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.182526284948 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0655046726111 * v27 + 0.0 * v28
def funcL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.94211747346e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.141848151258 * v6 + 0.0845386595262 * v7 + 0.0 * v8 + 0.128189819046 * v9 + 0.0 * v10 + 0.170385058739 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.159501773939 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.246705044633 * v27 + 0.0 * v28
def funcL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.6148887337e-15 * 1 + 0.0 * v0 + 0.155681743934 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0624668311836 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0355420696375 * v20 + 0.0 * v21 + 0.0 * v22 + 0.218682682787 * v23 + 0.0 * v24 + 0.0 * v25 + 0.369003097949 * v27 + -0.0 * v28
def funcL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35940901911e-13 * 1 + 0.0 * v0 + 0.188846147067 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0845826061693 * v6 + 0.0671487381761 * v7 + 0.0 * v8 + 0.0363851508177 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.302514897339 * v15 + 0.0 * v16 + 0.00117432769182 * v17 + 0.0 * v18 + 0.0882985298578 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.137276809596 * v27 + 0.0 * v28
def funcL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.35737065753e-14 * 1 + -0.0 * v0 + 0.322983673092 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.140403579872 * v7 + 0.0 * v8 + 0.149275204757 * v9 + 0.0 * v10 + 0.0413145239577 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.120696946852 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0633425962827 * v26 + 0.0465677298885 * v27 + 0.0 * v28
def funcL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.23202582804e-13 * 1 + 0.0 * v0 + 0.0677304324633 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.100506697145 * v6 + 0.197728505616 * v7 + 0.0 * v8 + 0.104082751069 * v9 + 0.0 * v10 + 0.0803418405938 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.145075000168 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.196324315933 * v20 + 0.0504231098365 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0143669663477 * v27 + 0.0 * v28
def funcL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.74274515468e-14 * 1 + 0.0 * v0 + 0.168579374872 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0687956575909 * v6 + 0.126868022417 * v7 + 0.126080986733 * v8 + 0.104197820186 * v9 + 0.0 * v11 + 0.0 * v12 + -0.0 * v13 + 0.0466553843139 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.224123589845 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0319044711776 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0224785704034 * v26 + 0.0735766175279 * v27 + 0.0 * v28
def funcL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.04092656498e-13 * 1 + 0.0 * v0 + 0.105230062807 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.141280486126 * v6 + 0.351502876764 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.150937669827 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.130444032575 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + -0.0 * v28
def funcL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52393211661e-13 * 1 + 0.0 * v0 + 0.1662344483 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.220916551469 * v5 + 0.0764371456625 * v6 + 0.200237952522 * v7 + 0.0 * v8 + 0.0917401976113 * v9 + 0.0 * v10 + 0.102575278478 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.043581831959 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0723205995736 * v26 + 0.0123833559608 * v27 + 0.0 * v28
def funcL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.79536097371e-14 * 1 + 0.0 * v0 + 0.0972297691388 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.111652723624 * v5 + 0.105373418077 * v6 + 0.389770204961 * v7 + 0.0 * v8 + 0.166228063198 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0362885734216 * v18 + 0.0 * v19 + 0.0196659625002 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0279065051226 * v26 + 0.0152723055848 * v27 + 0.0 * v28
def funcL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.38196774419e-13 * 1 + 0.0 * v0 + 0.0045433157868 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.227469543086 * v7 + 0.0 * v8 + 0.023838258442 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.194343796514 * v20 + 0.00575153212003 * v21 + 0.0 * v22 + 0.0539578276521 * v23 + 0.0 * v24 + 0.106459914078 * v25 + 0.0430048960357 * v26 + 0.1778527016 * v27 + 0.0 * v28
def funcL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.65672786924e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0563503736592 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0986590549747 * v6 + 0.106358479863 * v7 + 0.0 * v8 + 0.106857017405 * v9 + 0.0 * v10 + 0.0879244014324 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0362963549136 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.25699798908 * v20 + 0.0 * v21 + 0.0047469809501 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0102521431282 * v25 + 0.0 * v26 + 0.237015624776 * v27 + 0.0 * v28
def funcL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26232690176e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.086163464815 * v6 + 0.268581696943 * v7 + 0.0 * v8 + 0.224321890873 * v9 + 0.0 * v10 + 0.0539624957123 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0214001934141 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.176696629369 * v20 + 0.00735538047891 * v21 + 0.0 * v22 + 0.0479673359344 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0425009755355 * v27 + 0.0 * v28
def funcL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.42695300044e-13 * 1 + 0.00334908144968 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0550414436851 * v6 + 0.264443691021 * v7 + 0.0 * v8 + 0.22242986204 * v9 + 0.00947451198822 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0360537742508 * v23 + 0.0367272904688 * v25 + 0.276729045392 * v26 + 0.0652106956887 * v27 + 0.0 * v28
def funcL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35609050202e-14 * 1 + 0.0 * v0 + 0.0296218675603 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0758780541431 * v6 + 0.243977130978 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.00205660326201 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0625840662582 * v19 + 0.307260591807 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.206484301326 * v27 + 0.0 * v28
def funcL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.42997937814e-15 * 1 + 0.143905215373 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0676311538018 * v7 + 0.0 * v8 + 0.0275960958552 * v9 + 0.0 * v10 + 0.125536968537 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0490045537083 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0210831000613 * v18 + 0.0 * v19 + 0.24849418422 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.173378601273 * v25 + 0.065622203025 * v26 + 0.00266242038644 * v27 + 0.0 * v28
def funcL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.05265018828e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.151317798257 * v6 + 0.0169730013637 * v7 + 0.0 * v8 + 0.0967088400985 * v9 + 0.0198764229029 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.026191288013 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.100219524361 * v20 + 0.303533162645 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.198918519272 * v27 + 0.0 * v28
def funcL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.01067061185e-14 * 1 + 0.0 * v0 + 0.135633755141 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.112971699897 * v6 + 0.212406601983 * v7 + 0.0 * v8 + 0.18793429945 * v9 + 0.000363633398001 * v10 + 0.130160243716 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0433210359682 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0403052974489 * v20 + 0.0775964058043 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.99657721157e-15 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.103144308223 * v6 + 0.221539458757 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0723527770322 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.170759295107 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.077170564411 * v20 + 0.0 * v21 + 0.0776977090242 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.290722063768 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.92916180719e-13 * 1 + 0.0 * v0 + 0.175478087642 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0873281420475 * v6 + 0.189672507673 * v7 + 0.0 * v8 + 0.210261144254 * v9 + 0.00806650118483 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.198221537753 * v15 + 0.0 * v16 + 0.0 * v17 + 0.016397642362 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0786735373663 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.97671862905e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.257214852686 * v7 + 0.0 * v8 + 0.120406946774 * v9 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0340939985759 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.164404565736 * v26 + 0.0449681759571 * v27 + 0.284408654537 * v28
def funcL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86529464025e-13 * 1 + 0.0 * v0 + 0.0757979330202 * v1 + 0.129374858402 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.00735761229336 * v6 + 0.0790139747444 * v7 + 0.0 * v8 + 0.114137577694 * v9 + 0.0373182583955 * v10 + 0.0386362726719 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0667510803603 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.348453903316 * v27 + 0.0 * v28
def funcL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.36007871905e-13 * 1 + 0.0 * v0 + 0.124815672764 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.17355037807 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.201273147467 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0476089002026 * v19 + 0.0538042740494 * v20 + 0.146737159232 * v21 + 0.0 * v22 + 0.0714904711489 * v23 + 0.0 * v24 + 0.0 * v25 + 0.103024468087 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.98965989149e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0328332977624 * v6 + 0.317166317422 * v7 + 0.0 * v8 + 0.0241440756917 * v9 + 0.0413857824098 * v10 + 0.119811751392 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0274241592155 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0335007887919 * v20 + 0.00826056398726 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0423891546439 * v24 + 0.0 * v25 + 0.0 * v26 + 0.297564575196 * v27 + 0.0 * v28
def funcL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13492364275e-13 * 1 + 0.0 * v0 + 0.140906819781 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.223860360011 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0019570918337 * v10 + 0.0357333821104 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0432357417163 * v15 + 0.129413605783 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.383195914802 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.51785517209e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.214125567348 * v6 + 0.294611862532 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0570166785481 * v10 + 0.0804334725991 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0502535895835 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0264663657467 * v19 + 0.135908301368 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.115085061291 * v27 + 0.0 * v28
def funcL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.5716222312e-13 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v5 + 0.347067651498 * v6 + 0.184119002486 * v7 + -0.0 * v8 + 0.0 * v10 + 0.141165608601 * v11 + 0.0 * v14 + 0.15804580483 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.119083973163 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0857876907533 * v27
def funcL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.33878787105e-13 * 1 + 0.0919527400968 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0240514940467 * v8 + 0.0 * v9 + 0.0 * v12 + 0.159712379073 * v14 + 0.0191283225485 * v15 + 0.0464748589616 * v16 + 0.0 * v17 + 0.037405426197 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v25 + 0.105429175035 * v26 + 0.334828228058 * v27 + 0.0 * v28
def funcL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.89309088027e-15 * 1 + -0.0 * v0 + 0.145610566624 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.214568587183 * v6 + 0.0 * v7 + 0.110836776851 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0276929837407 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v16 + -0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.119412141391 * v21 + -0.0 * v22 + 0.00357213134175 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.284256915415 * v27
def funcL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49333642539e-13 * 1 + -0.0 * v0 + 0.118907705894 * v1 + 0.0 * v2 + 0.0867545473856 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0253492434894 * v7 + 0.0 * v8 + 0.146546925821 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.275181664627 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0730763941952 * v20 + 0.0055306233152 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.104588270222 * v26 + 0.0 * v27 + 0.0494375486532 * v28
def funcL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.77692974996e-14 * 1 + 0.0 * v0 + 0.201308071717 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.117692645501 * v6 + 0.186544587759 * v7 + 0.0 * v8 + 0.0890452960062 * v9 + 0.0 * v10 + 0.133189924473 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.117182507031 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0501666105138 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0391860619394 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0464589104757 * v26 + 0.0105266126577 * v27 + 0.0 * v28
def funcL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.54214577956e-14 * 1 + 0.0382718678863 * v1 + 0.0 * v4 + 0.0242618516141 * v5 + 0.163594179659 * v7 + 0.0 * v8 + 0.0450598806802 * v9 + 0.0969115270785 * v11 + 0.0 * v13 + 0.103751624559 * v15 + -0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.120290977025 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v25 + 0.0 * v26 + 0.262092222476 * v27 + 0.0 * v28
def funcL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.24394321043e-14 * 1 + 0.0 * v0 + 0.122122068306 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.11023593405 * v7 + 0.0 * v8 + 0.265055677838 * v9 + 0.0875063110159 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.187111146199 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0222372883812 * v20 + 0.105156213256 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0694469196908 * v26 + 0.0 * v27 + 0.0 * v28

funcs = [funcL_100307,funcL_100408,funcL_101006,funcL_101107,funcL_101309,funcL_101410,funcL_101915,funcL_102008,funcL_102311,funcL_102816,funcL_103111,funcL_103414,funcL_103515,funcL_103818,funcL_104012,funcL_104820,funcL_105014,funcL_105115,funcL_105216,funcL_105923,funcL_106016,funcL_106319,funcL_106521,funcL_107321,funcL_107422,funcL_108121,funcL_108323,funcL_108525,funcL_108828,funcL_109123,funcL_109325,funcL_110411,funcL_111312,funcL_111413,funcL_111514,funcL_111716,funcL_113215,funcL_113619,funcL_113922,funcL_114419,]

def getFuncs(): return funcs
