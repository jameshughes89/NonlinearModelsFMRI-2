from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.98505633818e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0452877853115 * v3 + 0.064411328218 * v4 + 0.0 * v11 + 0.144500110236 * v13 + 0.172738165818 * v15 + 0.0700172174203 * v16 + 0.358361339546 * v17 + 0.0 * v20 + 0.0799436383119 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.99744357469e-14 * 1 + 0.0 * v4 + 0.244970640223 * v5 + 0.0861581327753 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.251105816714 * v17 + 0.0458928295653 * v20 + 0.133348320867 * v21 + 0.118627613648 * v24 + 0.055401105195 * v25 + 0.0822127972928 * v28
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17466977994e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.186191471154 * v5 + 0.0625374086576 * v9 + 0.0 * v12 + 0.0 * v13 + 0.152964695633 * v15 + 0.224853683376 * v16 + 0.222455893693 * v19 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.000209229477485 * v25 + 0.0 * v28
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43436494373e-14 * 1 + 0.0 * v1 + 0.0206383981158 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v15 + 0.0 * v16 + 0.249597827644 * v17 + 0.0934546878335 * v18 + 0.165696479891 * v20 + 0.0 * v21 + 0.363187418473 * v22 + 0.0 * v23 + 0.0 * v27
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26780219555e-13 * 1 + 0.0 * v1 + 0.0523230158843 * v4 + 0.0959980765938 * v5 + 0.00891485733029 * v6 + 0.0 * v8 + 0.0 * v12 + 0.0 * v14 + 0.145109570418 * v20 + 0.118393243129 * v21 + 0.0 * v22 + 0.25335324984 * v25 + 0.0 * v26 + 0.239601470436 * v27 + 0.0191755074709 * v28
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.0024670601e-14 * 1 + 0.0 * v0 + 0.00745369358252 * v1 + 0.146560803851 * v5 + 0.125627771783 * v10 + 0.0 * v11 + 0.06581504343 * v15 + 0.0 * v16 + 0.243234418471 * v17 + 0.0305075607708 * v18 + 0.0785948240141 * v22 + 0.246166914523 * v23 + 0.00777439003409 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65684668541e-13 * 1 + 0.182256452756 * v1 + 0.0 * v4 + 0.0668045459469 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0585938137949 * v15 + 0.0 * v17 + 0.0 * v18 + 0.149873533862 * v20 + 0.302612807788 * v21 + 0.161643835178 * v22 + 0.0 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90739050561e-14 * 1 + 0.042079448098 * v1 + 0.429347720034 * v2 + 0.0 * v6 + 0.0423133989861 * v7 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.0141290365227 * v17 + 0.287175095125 * v20 + 0.112490344255 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23704898733e-13 * 1 + 0.0 * v2 + 0.0 * v4 + 0.216453022117 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0782999408879 * v9 + 0.0859825148734 * v11 + 0.0 * v12 + 0.155457216171 * v15 + 0.0769276397493 * v17 + 0.0487185133367 * v20 + 0.20482590205 * v21 + 0.0762354874282 * v22 + 0.0 * v25
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27641885035e-13 * 1 + 0.00216408181491 * v1 + 0.0 * v2 + 0.221908533499 * v4 + 0.0736665639087 * v7 + 0.0414004351623 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0141711853338 * v16 + 0.0 * v17 + 0.0469025871883 * v20 + 0.325258755705 * v21 + 0.168720498095 * v22 + 0.0 * v23 + 0.0402591697859 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.79024827877e-14 * 1 + 0.0 * v0 + 0.14708989552 * v5 + 0.0 * v7 + 0.0315095718658 * v8 + 0.0 * v12 + 0.0729930984943 * v16 + 0.0 * v17 + 0.0 * v20 + 0.292448447056 * v21 + 0.237411113688 * v22 + 0.00316314571572 * v23 + 0.0 * v24 + 0.057290563332 * v25 + 0.0632806964675 * v28
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19131404531e-13 * 1 + 0.139743932896 * v1 + 0.0941954383325 * v7 + 0.0 * v9 + 0.0985738269106 * v11 + 0.0405187279828 * v15 + 0.00670296377851 * v16 + 0.0371000907766 * v17 + 0.0773088932094 * v19 + 0.185501773906 * v20 + 0.144425542528 * v21 + 0.0760276899487 * v22 + 0.0790545983383 * v25 + 0.0 * v27 + 0.00297753938994 * v28
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.78747081943e-15 * 1 + 0.0 * v2 + 0.15273869447 * v3 + 0.0 * v4 + -0.0 * v5 + 0.037436117119 * v10 + -0.0 * v11 + -0.0 * v14 + -0.0205808202517 * v15 + -0.0 * v16 + 0.496147279973 * v17 + 0.123974588596 * v20 + -0.0 * v22 + 0.0 * v24 + 0.0 * v25
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19769568889e-14 * 1 + 0.0 * v1 + 0.0076444507668 * v4 + 0.332645019888 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.288532803493 * v15 + 0.0 * v18 + 0.135840185562 * v20 + 0.0393044114363 * v21 + 0.0530097169133 * v22 + 0.106740204268 * v25 + 0.0 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14154844682e-14 * 1 + 0.0 * v0 + 0.0 * v4 + 0.106839772625 * v5 + 0.0 * v8 + 0.226659462978 * v9 + 0.0 * v12 + 0.359585730933 * v15 + 0.0992958174254 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0514496113982 * v21 + 0.0 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.93270839532e-13 * 1 + 0.161450728093 * v1 + 0.0 * v3 + 0.0582326343221 * v5 + 0.00736071513487 * v9 + 0.103801319843 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v16 + 0.062519359919 * v20 + 0.234183917636 * v22 + 0.0880196432225 * v23 + 0.186930689836 * v25 + 0.0 * v26 + 0.0608942886781 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97302583761e-14 * 1 + 0.0 * v0 + 0.0 * v4 + -0.0 * v6 + 0.0 * v7 + 0.0 * v11 + 0.0932211882956 * v15 + 0.305864724021 * v16 + 0.0 * v17 + 0.0348840915155 * v19 + 0.275709524312 * v21 + 0.179512660511 * v22 + 0.0 * v23 + 0.0 * v24 + 0.123037680194 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.3330031708e-13 * 1 + 0.0 * v1 + 0.0402060241639 * v5 + 0.109514821619 * v7 + 0.0 * v8 + 0.274156599976 * v9 + 0.0303104652918 * v12 + 0.123451295353 * v15 + 0.0 * v18 + 0.213898132248 * v21 + 0.0 * v22 + 0.062383060264 * v23 + 0.0324186236916 * v24 + 0.0661628992601 * v25 + 0.0 * v27
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75895230851e-14 * 1 + 0.0755406349968 * v1 + 0.0 * v4 + 0.145939883164 * v5 + 0.164241465048 * v6 + 0.0 * v7 + 0.0 * v8 + 0.183600409247 * v11 + 0.0 * v16 + 0.0 * v20 + 0.147876827088 * v21 + 0.195372562368 * v23 + 0.0 * v25 + 0.0 * v27 + 0.00821099266339 * v28
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.34215208992e-14 * 1 + 0.0351220048313 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0751669660192 * v5 + 0.0 * v7 + 0.0 * v8 + 0.110337373129 * v9 + 0.0 * v17 + 0.0 * v18 + 0.0793884834948 * v20 + 0.365201922958 * v21 + 0.120708949217 * v22 + 0.131798146454 * v25 + 0.0171491786072 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.88506288217e-15 * 1 + 0.0 * v0 + 0.0920070760671 * v2 + 0.0 * v3 + 0.0471788815974 * v4 + 0.109458143629 * v5 + 0.0133931188565 * v9 + 0.096169449265 * v11 + 0.0 * v12 + 0.0373847193196 * v13 + 0.189599062865 * v17 + 0.0 * v19 + 0.0 * v22 + 0.0605299439403 * v25 + 0.315332179426 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49137896201e-14 * 1 + 0.122944028389 * v1 + 0.0838334580996 * v5 + 0.0 * v7 + 0.0917008150364 * v9 + 0.0 * v13 + 0.148502680678 * v15 + 0.0 * v17 + 0.137845158728 * v19 + 0.28836841886 * v20 + 0.0549704465986 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.50604252042e-13 * 1 + 0.242701634051 * v1 + 0.107324557963 * v4 + 0.194543213102 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v13 + 0.116345651335 * v20 + 0.0625707144547 * v21 + 0.21212099153 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52683653593e-15 * 1 + 0.0 * v0 + -0.0 * v3 + 0.0126608951077 * v4 + 0.0 * v5 + 0.0671120033072 * v8 + 0.0177726383999 * v11 + 0.0 * v15 + 0.0 * v16 + 0.260483827082 * v17 + 0.0 * v21 + 0.555494951914 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.17372249093e-14 * 1 + 0.227010423401 * v1 + 0.0 * v3 + 0.0198856208906 * v4 + 0.0 * v8 + 0.0 * v12 + 0.0297633887711 * v15 + 0.0 * v16 + 0.229776186762 * v17 + 0.0 * v18 + 0.0 * v19 + 0.015517510016 * v21 + 0.107202063826 * v22 + 0.214588127123 * v23 + 0.0429724903247 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.04408473667e-13 * 1 + 0.0354125328459 * v1 + 0.0 * v4 + 0.334382035832 * v5 + 0.172861444694 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0718198450789 * v20 + 0.188814511868 * v21 + 0.0 * v23 + 0.0 * v27 + 0.131446981671 * v28
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49502863613e-13 * 1 + 0.0330321400809 * v1 + 0.0 * v3 + 0.010139898528 * v4 + 0.0 * v5 + 0.253198621064 * v9 + 0.0489249444144 * v11 + 0.0 * v13 + 0.0253423059765 * v15 + 0.0384601269243 * v16 + 0.0508460330354 * v17 + 0.221303767879 * v21 + 0.0408712777005 * v22 + 0.0386441194628 * v23 + 0.269614455609 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85720851909e-14 * 1 + 0.0329650276598 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00198105504962 * v4 + 0.247584447314 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v18 + 0.130076247624 * v20 + 0.237189805785 * v21 + 0.185551695851 * v25 + 0.0961830380319 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.42819217943e-13 * 1 + 0.117957900928 * v1 + 0.119648170519 * v4 + 0.158642975038 * v5 + 0.0 * v8 + 0.129372507005 * v9 + 0.0 * v11 + 0.0323274173724 * v13 + 0.0101410445253 * v15 + 0.0 * v17 + 0.0 * v18 + 0.260696827988 * v21 + 0.077553899258 * v22 + 0.0 * v25 + 0.0472498431305 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11365252775e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.025952801643 * v9 + 0.243527812381 * v11 + 0.0 * v12 + 0.088274734281 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0204067475975 * v19 + 0.235177071234 * v21 + 0.172834115707 * v22 + 0.0 * v23 + 0.141570903455 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.30692395199e-13 * 1 + 0.121366723837 * v0 + 0.0729407078305 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0530352997939 * v9 + 0.0413422173779 * v13 + 0.0120650977423 * v15 + 0.0529694282952 * v16 + 0.0 * v17 + 0.022022183887 * v20 + 0.415795533802 * v21 + 0.142978391592 * v22 + 0.0 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.54086163059e-13 * 1 + 0.0 * v1 + 0.0397980470274 * v4 + 0.22460025691 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v13 + 0.0388515673925 * v14 + 0.0 * v17 + 0.0 * v18 + 0.13138722413 * v20 + 0.33456671318 * v21 + 0.153101140311 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.13368955533e-14 * 1 + 0.0375186843391 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.22995653326 * v9 + 0.0438778718706 * v11 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.273945384679 * v21 + 0.214688423996 * v22 + 0.142114791914 * v25 + 0.0 * v28
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16654289324e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + -0.262890594448 * v6 + 0.0 * v14 + 0.0200695038402 * v15 + -0.0895044573739 * v16 + 0.0 * v17 + 0.247301940772 * v20 + 0.0595839784411 * v21 + 0.300941338416 * v22 + -0.0 * v23 + 0.0 * v27
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.84872577802e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.240102601114 * v5 + 0.0980801304386 * v7 + 0.123482186104 * v9 + 0.0 * v17 + 0.159693012844 * v20 + 0.0334717982079 * v21 + 0.292495651781 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.1638621443e-13 * 1 + 0.309159555105 * v0 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.372449274259 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v16 + 0.137095924805 * v17 + 0.0 * v19 + 0.197216361399 * v22 + 0.0 * v23 + 0.0 * v24 + 0.17616052239 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.4865366871e-14 * 1 + 0.00958643204951 * v0 + 0.0139932347224 * v1 + 0.117877352006 * v3 + 0.0554482819625 * v4 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.071841356122 * v16 + 0.0 * v18 + 0.173042057323 * v20 + 0.38318536039 * v21 + 0.0 * v23 + 0.0 * v24 + 0.18149855429 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.5847567502e-14 * 1 + 0.139610804546 * v1 + 0.0 * v3 + 0.0 * v4 + 0.317593448765 * v5 + 0.0 * v7 + 0.0492915029499 * v9 + 0.00937969845835 * v11 + 0.0 * v12 + 0.0 * v17 + 0.0912252531242 * v19 + 0.067165022367 * v21 + 0.185757922193 * v22 + 0.0255177162557 * v25 + 0.0622277052594 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12543927541e-13 * 1 + 0.129392571383 * v1 + 0.00111896798223 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.181120543493 * v9 + 0.00674824987236 * v11 + 0.248462989588 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0583773523966 * v20 + 0.221767368055 * v21 + 0.0 * v27 + 0.0658197069138 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25241953413e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.234346043605 * v4 + 0.0 * v5 + 0.159138593509 * v9 + 0.00369914669328 * v16 + 0.0 * v17 + 0.053585768221 * v19 + 0.0 * v20 + 0.287707705959 * v21 + 0.121520194471 * v22 + 0.0889348595104 * v26 + 0.0 * v27 + 0.045304999738 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
