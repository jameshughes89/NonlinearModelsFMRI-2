from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65494035033e-13 * 1 + 0.0 * v0 + 0.132771845865 * v1 + 0.0 * v4 + 0.21754716735 * v8 + 0.193136424491 * v15 + 0.0 * v16 + 0.332461874695 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0454632416861 * v28
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2487081035e-13 * 1 + 0.0366892755399 * v1 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.206497844297 * v13 + 0.39014943723 * v15 + 0.147665182291 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.179658921348 * v27
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.19068374612e-14 * 1 + -0.0 * v0 + 0.13723190083 * v1 + 0.0 * v8 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.342008569913 * v17 + 0.213278087425 * v18 + 0.160381190933 * v21 + 0.0 * v24 + -0.0 * v28
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.61050117827e-14 * 1 + 0.0470101554014 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v7 + 0.0 * v11 + 0.32169649217 * v13 + 0.0 * v15 + 0.203230388343 * v17 + 0.0 * v19 + 0.0992045630406 * v21 + 0.0 * v22 + 0.22975843361 * v27
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60319628481e-13 * 1 + 0.258550195367 * v1 + 0.0 * v2 + 0.0 * v4 + 0.171027614105 * v8 + 0.208606700029 * v11 + 0.214925057476 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0251793489888 * v25 + 0.0 * v27
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.6113921074e-13 * 1 + 0.0249243942745 * v3 + 0.112546198463 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0875624929542 * v13 + 0.304315636007 * v15 + 0.356810308365 * v17 + -0.0 * v20 + -0.0 * v23 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81851251006e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0478824506345 * v8 + 0.0 * v12 + 0.358098425306 * v13 + 0.283426707427 * v15 + 0.296951846241 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v28
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13988987085e-14 * 1 + 0.148610019343 * v6 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.202862121723 * v13 + 0.0 * v15 + 0.0 * v16 + 0.501967719829 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.6931505129e-14 * 1 + 0.0227350250496 * v1 + 0.0633486288092 * v4 + 0.0 * v5 + 0.271077340829 * v6 + 0.0 * v7 + 0.337251799081 * v8 + 0.0 * v9 + 0.0468154570184 * v13 + 0.0 * v18 + 0.0 * v21 + 0.0 * v23 + 0.203320076731 * v27
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.9018994178e-14 * 1 + 0.662973305479 * v1 + 0.0 * v2 + 0.0483898954763 * v4 + 0.0317564770375 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v18 + 0.0 * v26 + 0.134753116957 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53311877958e-14 * 1 + 0.122516135492 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.201157090911 * v15 + 0.356433642505 * v17 + 0.0 * v20 + 0.0403247898203 * v21 + 0.0 * v22 + 0.117233352719 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.43298271515e-14 * 1 + 0.221187649413 * v1 + 0.162376318386 * v4 + 0.276773307185 * v8 + 0.0263979328242 * v9 + 0.0 * v11 + 0.0 * v12 + 0.00146374101472 * v13 + 0.0729631008959 * v15 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.16390814021 * v27
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.5392391832e-14 * 1 + 0.13947330639 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0918882892616 * v8 + 0.0875503299282 * v13 + 0.195479205771 * v15 + 0.285357755279 * v17 + 0.000673561057144 * v20 + 0.0 * v21 + 0.111015097793 * v27
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.74175051451e-15 * 1 + 0.0399725206871 * v1 + 0.0 * v4 + 0.0150066753635 * v6 + 0.0 * v8 + 0.0 * v11 + 0.444536865205 * v15 + 0.0188067117929 * v17 + 0.0599995376077 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.342879844276 * v27
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46150189513e-13 * 1 + 0.0 * v5 + 0.187276326235 * v8 + 0.0 * v12 + 0.163965104894 * v13 + 0.00718284880944 * v15 + 0.0440834507901 * v16 + 0.165703914209 * v20 + 0.0676033659314 * v22 + 0.0 * v23 + 0.0 * v24 + 0.210062782771 * v27 + 0.0829682150851 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.52738917588e-13 * 1 + 0.219499114724 * v1 + 0.0 * v2 + 0.0 * v4 + 0.154433007031 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v13 + 0.0 * v15 + 0.398809565947 * v17 + 0.0 * v20 + 0.13565170217 * v21 + 0.0 * v27
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.7527090442e-14 * 1 + 0.0 * v1 + 0.0 * v4 + -0.0 * v5 + 0.0 * v8 + 0.0 * v12 + 0.0824520622896 * v13 + 0.161036656458 * v15 + 0.413884325394 * v17 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.243223979469 * v27
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.02017742956e-13 * 1 + 0.0 * v5 + 0.0661689698891 * v7 + 0.0168385927328 * v8 + 0.216543759363 * v12 + 0.0 * v13 + 0.165956791731 * v15 + 0.329974711717 * v17 + 0.0768670963191 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0136211250977 * v23 + 0.0 * v28
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.4874503646e-14 * 1 + 0.0 * v2 + 0.0448659058494 * v4 + 0.0 * v5 + 0.308537328709 * v6 + 0.237163901587 * v8 + 0.0 * v12 + 0.100398487728 * v13 + 0.0731611190342 * v15 + 0.106921113768 * v17 + 0.0 * v18 + 0.0 * v22 + 0.0646228583573 * v27
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.70987027863e-14 * 1 + 0.0 * v0 + 0.0 * v5 + 0.0415187805093 * v8 + 0.303251003955 * v12 + 0.0662003052644 * v15 + 0.0 * v16 + 0.0796893115068 * v17 + 0.145828865643 * v18 + 0.216522997366 * v20 + 0.0 * v21 + 0.0 * v24 + 0.0626005154595 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.07569937262e-14 * 1 + 0.162638734887 * v4 + 0.0 * v8 + 0.0 * v11 + 0.0 * v13 + 0.178069129892 * v15 + 0.168689564648 * v17 + 0.0403631718729 * v18 + 0.0 * v20 + 0.0 * v21 + 0.274162409359 * v25 + 0.0566917673494 * v27 + 0.0 * v28
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06408239698e-13 * 1 + 0.322590304326 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.34897157755 * v15 + 0.0768809014921 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v23 + 0.169975705833 * v27 + 0.0 * v28
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.74261969799e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0340931322847 * v6 + 0.0 * v7 + 0.419578743501 * v8 + 0.0264423063389 * v13 + 0.0 * v20 + 0.0 * v21 + 0.0 * v25 + 0.220780543428 * v26 + 0.205944955167 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84904071817e-13 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v8 + 0.0 * v12 + 0.0616607414751 * v13 + 0.190529742272 * v15 + 0.0 * v16 + 0.617873809335 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v22 + 0.0 * v28
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94613432341e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.258760781146 * v8 + 0.0 * v9 + 0.0 * v12 + 0.197209482734 * v13 + 0.376811283517 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v21 + 0.0 * v28
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.20744421499e-15 * 1 + 0.0763455775503 * v1 + 0.0 * v4 + 0.0 * v5 + 0.00611710955204 * v6 + 0.0 * v7 + 0.151905294663 * v8 + 0.0 * v15 + 0.453447558196 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.254078379721 * v27
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.64118749997e-13 * 1 + 0.246409240013 * v1 + 0.0683953955396 * v5 + 0.00038435043595 * v7 + 0.0 * v8 + 0.0 * v9 + 0.184995544819 * v13 + 0.18053655224 * v17 + 0.0845614067236 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0655318666445 * v23 + 0.0919367589285 * v27
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.58970867937e-14 * 1 + 0.260822668539 * v1 + 0.0 * v4 + 0.0286114122376 * v5 + 0.0 * v8 + 0.0 * v9 + 0.116557792859 * v12 + 0.327627007777 * v13 + 0.0 * v20 + 0.0381200991142 * v21 + 0.106759095248 * v26 + 0.0619390608608 * v27 + 0.0 * v28
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58209075162e-14 * 1 + 0.317333409899 * v1 + 0.00631857788701 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0995233103989 * v9 + 0.229983272389 * v13 + 0.19529334165 * v15 + 0.0986672594116 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.46031944132e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v13 + 0.0 * v15 + 0.567224087455 * v17 + 0.0 * v20 + 0.174427021103 * v26 + 0.163625203803 * v27 + 0.0 * v28
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.69226167423e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.23591055808 * v8 + 0.0 * v9 + 0.0 * v12 + 0.339408923287 * v13 + 0.0686296395395 * v17 + 0.0 * v21 + 0.0 * v25 + 0.178369231666 * v26 + 0.127817956504 * v27
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17474343137e-13 * 1 + 0.0564804701251 * v0 + 0.199828473247 * v1 + 0.0 * v4 + 0.054355536499 * v8 + 0.0974470615919 * v15 + 0.0507138853657 * v16 + 0.427902314554 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46003381529e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v11 + 0.0940680465653 * v12 + 0.0241786896907 * v13 + 0.343015478427 * v15 + 0.0 * v16 + 0.262865674787 * v17 + 0.158196632159 * v27 + 0.0 * v28
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25356511272e-14 * 1 + 0.138287161223 * v1 + 0.0 * v4 + 0.0438553145262 * v5 + 0.210895434085 * v6 + 0.0 * v7 + 0.0 * v11 + 0.0197317246372 * v13 + 0.108047281841 * v14 + 0.207418521364 * v17 + 0.0377137719464 * v25 + 0.0 * v26 + 0.229587536943 * v27
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37661621227e-13 * 1 + 0.0468805483255 * v1 + 0.0 * v3 + 0.157695530443 * v7 + 0.112837748502 * v8 + 0.0 * v10 + 0.0 * v12 + 0.110297839204 * v15 + 0.0 * v16 + 0.101960366732 * v17 + 0.408758788874 * v18 + 0.0 * v21 + 0.0 * v28
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33930839205e-13 * 1 + 0.253233557611 * v1 + 0.0 * v4 + 0.0 * v5 + 0.111694753223 * v7 + 0.0 * v8 + 0.0917390655821 * v13 + 0.440366211781 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.00571858724548 * v21 + 0.00325983860351 * v27
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97643717562e-14 * 1 + 0.0 * v1 + -0.0 * v4 + 0.0 * v5 + 0.188454971864 * v7 + 0.0 * v9 + 0.222959450384 * v13 + 0.0 * v15 + 0.224340752444 * v17 + 0.0 * v20 + -0.0 * v22 + 0.0 * v25 + 0.226570659018 * v27
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20734145749e-13 * 1 + 0.0 * v0 + 0.175001843265 * v1 + -0.0 * v5 + 0.130205614069 * v6 + 0.0 * v7 + 0.0473816124035 * v9 + 0.218341240478 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + -0.0 * v23
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80361457519e-14 * 1 + 0.0786823964633 * v1 + 0.0 * v3 + 0.201336910426 * v6 + 0.0 * v7 + 0.0 * v8 + 0.102660715137 * v12 + 0.483523749968 * v15 + 0.0 * v16 + 0.047583369187 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v23
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20219198539e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v8 + 0.0122705431963 * v12 + 0.0 * v13 + 0.152725104009 * v15 + 0.391816530643 * v17 + 0.0 * v18 + 0.0 * v23 + 0.0 * v24 + 0.300806144073 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
