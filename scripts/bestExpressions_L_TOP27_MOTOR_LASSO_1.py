from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58362003114e-14 * 1 + 0.0 * v0 + 0.0909247678865 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0949545484425 * v5 + 0.0394015942114 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.205094128094 * v11 + 0.0 * v12 + 0.0 * v13 + 0.252643036784 * v15 + 0.153130825768 * v16 + 0.0461370338933 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0172480551657 * v21 + 0.123286132266 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.87987634222e-15 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0145655724217 * v2 + 0.0 * v3 + 0.0 * v4 + 0.32363466139 * v5 + 0.0 * v6 + 0.205061264548 * v7 + 0.0537397519395 * v10 + -0.0 * v11 + -0.0 * v13 + -0.0611739523255 * v14 + 0.0 * v15 + 0.0674950451985 * v16 + 0.0908838292141 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0341979053416 * v20 + 0.0 * v21 + 0.195379942025 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + -0.215478376627 * v26 + -0.0 * v27 + 0.0 * v28
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.56092781717e-14 * 1 + 0.0 * v0 + 0.104421484951 * v1 + 0.0 * v3 + 0.0 * v4 + 0.175656238263 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.189813174552 * v15 + 0.0476974833044 * v16 + 0.11890708368 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0374085413071 * v22 + 0.0624234024325 * v24 + -0.0 * v25 + 0.0 * v27 + 0.230155002822 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.44924251915e-13 * 1 + 0.0 * v0 + 0.0414793891714 * v1 + 0.00953725894889 * v3 + 0.200223680612 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0941548154996 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0935366442359 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0138809363616 * v15 + 0.0 * v16 + 0.141374121231 * v17 + 0.188374635128 * v18 + 0.0136965761742 * v20 + 0.0465068124815 * v21 + 0.0 * v22 + 0.11990957165 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.40147091589e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0277805169486 * v3 + 0.0 * v4 + 0.170094340106 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0550255715178 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0411843660379 * v18 + 0.0 * v19 + 0.112341849076 * v20 + 0.269635003772 * v21 + 0.170192240223 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0110406254374 * v25 + 0.0678790539199 * v27 + 0.0626149092299 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.84643417059e-14 * 1 + 0.0 * v0 + 0.405025832431 * v1 + -0.0 * v2 + 0.0 * v4 + 0.185585090753 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.00395731227299 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.160211539745 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0149767226904 * v21 + 0.0993743120927 * v22 + 0.0623761276347 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.00192798565592 * v28
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21417117732e-13 * 1 + 0.0 * v0 + 0.118795854404 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.260500216541 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0198060217397 * v9 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.261194906878 * v21 + 0.297010884983 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53503546213e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0719972852649 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.388172802864 * v20 + 0.242641023603 * v21 + 0.064288319874 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.102663322221 * v27 + 0.0374785353819 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.83425318384e-14 * 1 + 0.079684527639 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0294906123371 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0671037448222 * v10 + 0.338195566751 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0626976332129 * v15 + 0.0824591441872 * v17 + 0.0 * v18 + 0.0 * v20 + 0.23821671535 * v21 + 0.0975928476639 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.64743568299e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0109320257611 * v3 + 0.0 * v4 + 0.402433564533 * v5 + 0.0 * v6 + 0.0777274021673 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0544470368705 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0368289777735 * v20 + 0.239660019169 * v21 + 0.0381646857819 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.10659331778 * v28
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2870156677e-13 * 1 + 0.0921140178753 * v1 + 0.0 * v2 + 0.0620615807685 * v3 + 0.0 * v4 + 0.209358190307 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.209183502256 * v9 + 0.0709196771094 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.115048481439 * v21 + 0.128053095782 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0706525179282 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.91546415536e-14 * 1 + 0.0 * v0 + 0.352862725346 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00570643744427 * v4 + 0.0831986222972 * v5 + 0.0106202533647 * v7 + 0.0 * v8 + 0.0732898957559 * v9 + 0.0 * v10 + 0.0722005667238 * v11 + 0.0 * v12 + 0.0571673602774 * v13 + 0.0355700527685 * v15 + 0.0 * v16 + 0.00644530501518 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0886090376916 * v20 + 0.133814618411 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0295281300929 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29251456071e-15 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.126221580779 * v3 + 0.0984988716459 * v4 + 0.324530201531 * v5 + 0.0 * v6 + 0.232306900708 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0179721407996 * v19 + 0.0880953806839 * v20 + 0.0199376992832 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0300341973691 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69689607355e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0180688383868 * v4 + 0.441470366588 * v5 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.253273223334 * v15 + 0.0 * v16 + 9.53905708486e-05 * v17 + 0.0 * v18 + 0.0 * v19 + 0.105433526211 * v20 + 0.0820623386871 * v21 + 0.150252933729 * v22 + 0.0 * v23 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64144113787e-14 * 1 + -0.0 * v0 + 0.159144042585 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.150918074627 * v5 + 0.100694678315 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + -0.0 * v13 + 0.061107120715 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + -0.0 * v20 + 0.345553172676 * v21 + 0.0967770607047 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.19343625065e-14 * 1 + 0.0 * v1 + 0.283945521781 * v2 + 0.0 * v3 + -0.0 * v4 + 0.139871680071 * v5 + -0.0 * v6 + 0.0254449979391 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0743967473781 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0354524953814 * v15 + 0.0 * v16 + -0.0 * v17 + 0.0 * v19 + 0.0 * v20 + -0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.240796606259 * v25 + -0.0 * v26 + 0.168453581905 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.10692599687e-13 * 1 + 0.0589701537562 * v0 + 0.174137216426 * v1 + 0.0 * v2 + 0.062692438329 * v3 + 0.0 * v4 + 0.0691988149146 * v5 + 0.040606307286 * v7 + 0.0 * v8 + 0.0264582837977 * v9 + 0.0 * v10 + 0.134886638463 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.020530647356 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.17486383001 * v21 + 0.060999281932 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.161464130589 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83096074547e-13 * 1 + 0.0 * v0 + 0.208688640514 * v1 + 0.0559316779436 * v3 + -0.0 * v4 + 0.297704169685 * v5 + 0.0 * v6 + 0.168073749881 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.125537748754 * v21 + 0.0464328481083 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.23564256331e-13 * 1 + 0.0 * v0 + 0.369702524131 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.224680818684 * v5 + 0.105405559348 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.176908178858 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0113627807191 * v28
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21043857364e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.00307283776912 * v3 + 0.0 * v4 + 0.2519588733 * v5 + 0.0 * v7 + 0.0 * v8 + 0.268339273265 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.163690316413 * v20 + 0.235389470104 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.40230315148e-13 * 1 + 0.0 * v0 + 0.0348951973148 * v1 + -0.0 * v2 + 0.129424414401 * v3 + 0.0 * v4 + 0.0124953101146 * v5 + 0.103252570047 * v7 + 0.0 * v8 + 0.00211540984828 * v9 + 0.0 * v10 + 0.161150136439 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0395103084075 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.201940999252 * v20 + 0.0 * v21 + 0.18072357938 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.165924906317 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.69220460018e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.138117682891 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0905229630216 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.013798046907 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.263966320928 * v21 + 0.0799671866062 * v22 + 0.0 * v23 + 0.0 * v24 + 0.370097934159 * v25 + 0.0 * v26 + 0.0441272576502 * v27 + 0.0 * v28
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30135009093e-15 * 1 + 0.0 * v0 + 0.0263534304781 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.100848377871 * v5 + 0.0 * v7 + -0.0 * v8 + 0.175935889301 * v9 + 0.0 * v10 + 0.378018376287 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0216865020937 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.204062886909 * v21 + 0.0 * v22 + 0.0691718279357 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v26 + -0.0 * v27 + 0.0 * v28
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.23412852463e-13 * 1 + 0.0 * v0 + 0.0789297926031 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.207994435565 * v5 + 0.0 * v7 + 0.0 * v8 + 0.034846724329 * v9 + 0.0 * v10 + 0.0143399540572 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0587456748465 * v15 + 0.0 * v16 + 0.113082933907 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0058567121636 * v20 + 0.0 * v21 + 0.181671952818 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.297233336827 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53750357623e-13 * 1 + 0.0 * v0 + 0.140716465215 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0347666825312 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0433153079991 * v10 + 0.165241662417 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0700662011992 * v15 + 0.0 * v16 + 0.218197480771 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.219020144207 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.37966273723e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.321936722942 * v5 + 0.0 * v6 + 0.150823357111 * v7 + 0.0 * v8 + 0.166360751058 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0865584280663 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.23069403994 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.00799261340798 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11992817973e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v4 + 0.42225889787 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.086364248592 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0973946120355 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.30401989444 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0393389082528 * v28
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.39940017014e-14 * 1 + 0.0 * v0 + 0.144792997563 * v1 + 0.0 * v2 + 0.0419832250385 * v3 + 0.0 * v4 + 0.413435676771 * v5 + 0.0396334841399 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.176750021909 * v20 + 0.0357384936984 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0976274818649 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.5003445479e-14 * 1 + 0.0 * v0 + 0.23122526942 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.325883682708 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0241843767431 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.106331359067 * v21 + 0.272915604308 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.16110155675e-13 * 1 + 0.0 * v0 + 0.0528238371816 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0850999241583 * v4 + 0.174554359261 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0168133981963 * v9 + 0.1309803667 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.152495279724 * v15 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.250507816743 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.110029006043 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.1394139198e-13 * 1 + 0.0 * v0 + 0.0569812039536 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.266604462894 * v5 + 0.0748734490733 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.108854384888 * v15 + 0.0 * v16 + 0.00255918110849 * v17 + 0.0 * v18 + 0.131264831687 * v19 + 0.0 * v20 + 0.240933255404 * v21 + 0.0867598080133 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v27 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18177791436e-14 * 1 + 0.0 * v0 + 0.0678172185314 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.219291524006 * v5 + 0.0 * v6 + 0.00805323653831 * v7 + 0.0 * v8 + 0.0 * v9 + 0.00568153170346 * v12 + 0.0837405517383 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.247035520333 * v20 + 0.0785829933558 * v21 + 0.170305240528 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0934197649951 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.22957324841e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.173830867934 * v5 + 0.0877193554575 * v7 + 0.0 * v8 + 0.293427657939 * v9 + 0.0967953818644 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.14990188774 * v21 + 0.0873828299657 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.105047848651 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.03568765914e-13 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.128158517655 * v3 + 0.0 * v4 + 0.293510167552 * v5 + -0.345086683214 * v6 + 0.0395278234653 * v7 + 0.0 * v9 + -0.202818366612 * v10 + 0.0 * v11 + 0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0266245519582 * v20 + 0.0547996639342 * v21 + 0.132685660323 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.097972253572 * v26 + -0.0 * v27 + 0.0 * v28
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.09650369053e-13 * 1 + 0.0 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0414075205088 * v4 + 0.563054104938 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.223646627206 * v10 + 0.0 * v12 + 0.0 * v13 + 0.120634688263 * v14 + 0.0697566735994 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0411088720672 * v18 + 0.0 * v19 + 0.0 * v20 + 0.114028164582 * v21 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.33312589927e-14 * 1 + 0.0400000769087 * v1 + -0.0 * v2 + 0.0 * v4 + 0.262589125762 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.082736878421 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.523573588266 * v17 + 0.0 * v18 + 0.0590000515998 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.31549369644e-16 * 1 + 0.222111664034 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.28462848996 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.101889494012 * v11 + 0.0 * v12 + 0.0623065260925 * v13 + 0.0 * v14 + -0.0 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.156036139322 * v21 + 0.0539628074936 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.115198162471 * v28
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.16479769956e-14 * 1 + 0.0 * v0 + 0.0883783803031 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.365551764346 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0720481101758 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0244176744654 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0574115537266 * v20 + 0.0308759350891 * v21 + 0.0570822201275 * v22 + 0.0 * v23 + 0.0728830779374 * v24 + 0.0 * v25 + 0.177266683655 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.74239432724e-14 * 1 + -0.0 * v0 + 0.180977274812 * v1 + -0.0 * v2 + 0.0 * v4 + 0.215227065568 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0199601054185 * v8 + 0.183749350399 * v9 + 0.0109550215638 * v10 + 0.0794447875893 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0771959825185 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.105132580239 * v21 + 0.0393453734532 * v22 + 0.0 * v23 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.109416793953 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86073508036e-14 * 1 + 0.0 * v1 + 0.12503360929 * v3 + 0.0493989870203 * v4 + 0.1047133211 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0388802715522 * v13 + 0.0 * v14 + 0.305190197277 * v15 + 0.0 * v16 + 0.0842874899009 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.147085259499 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0893566083996 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
