from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.13839260892e-13 * 1 + 0.242009727178 * v4 + 0.163882032832 * v15 + 0.180133932408 * v16 + 0.32032100313 * v17 + 0.0633095833696 * v20 + 0.0276921242278 * v27
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.56684547031e-14 * 1 + -0.00434495534473 * v4 + 0.348133382585 * v5 + 0.0305533470314 * v15 + 0.255230932696 * v17 + 0.15581450496 * v20 + 0.258221382154 * v21
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.22012779645e-13 * 1 + -0.132640373788 * v3 + 0.223660129467 * v5 + 0.21040362204 * v12 + -0.00993879665088 * v13 + 0.298523846019 * v16 + 0.289496457674 * v19
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.84545404765e-14 * 1 + 0.0193525371309 * v4 + 0.227532587866 * v17 + 0.139562386636 * v18 + 0.219921063346 * v20 + 0.404992048702 * v22 + -0.00194419786183 * v23
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.19703118146e-13 * 1 + 0.216635182523 * v4 + 0.251157554637 * v5 + 0.0411460203358 * v6 + 0.25723064875 * v20 + -0.0104392890897 * v26 + 0.220342182641 * v27
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.91023743715e-14 * 1 + 0.205205554118 * v5 + 0.185445453061 * v10 + 0.0996433499591 * v15 + 0.238447531325 * v17 + 0.0148955228566 * v18 + 0.319092660896 * v23
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.6161741061e-13 * 1 + 0.247081773528 * v1 + 0.102403969266 * v17 + 0.0688716002597 * v18 + 0.386987887664 * v20 + 0.447138857481 * v21 + -0.313255967963 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.80041799021e-14 * 1 + 0.0738510260097 * v1 + 0.483743164905 * v2 + -0.0370671775759 * v6 + 0.145906912556 * v7 + 0.110748280588 * v17 + 0.26775308812 * v20
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.58131056859e-13 * 1 + 0.294318960702 * v5 + 0.166283655883 * v9 + 0.190355373592 * v15 + 0.0615009100594 * v17 + 0.254322149599 * v21 + 0.085810824189 * v22
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.57135358648e-13 * 1 + 0.0473273864316 * v7 + 0.239304229257 * v8 + 0.00191539586153 * v17 + 0.302018197989 * v20 + 0.459658941949 * v21 + -0.0458405542873 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.78239896222e-14 * 1 + 0.117346670491 * v5 + 0.0810664542131 * v8 + 0.112251841359 * v16 + 0.32981796124 * v21 + 0.363540170737 * v22 + 0.00107396028608 * v23
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.31552998769e-13 * 1 + 0.134434077161 * v1 + 0.278679126771 * v7 + 0.242462498883 * v11 + 0.145096396633 * v15 + 0.219970819712 * v20 + 0.0402970133623 * v27
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.86120162342e-14 * 1 + -0.0381206950015 * v2 + 0.302757176028 * v3 + -0.493590321133 * v4 + 0.100143661136 * v10 + 0.625080732924 * v17 + 0.454301400967 * v20
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.68986290981e-14 * 1 + 0.0380902503543 * v1 + 0.435150110925 * v5 + 0.41250412777 * v15 + 0.272100978371 * v20 + 0.0731561319573 * v25 + -0.153025822725 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.92112290771e-14 * 1 + 0.228084027792 * v5 + -0.0118301976368 * v8 + 0.424260219255 * v15 + 0.0532503960035 * v17 + 0.125759553179 * v20 + 0.113137177172 * v21
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85841385018e-13 * 1 + 0.225075315472 * v1 + 0.148012546291 * v5 + 0.122008535013 * v9 + 0.214420757268 * v10 + 0.0943472032265 * v20 + 0.241128131741 * v22
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.82502392114e-15 * 1 + 0.138944406225 * v15 + 0.374824464332 * v16 + -0.0314906867104 * v17 + 0.319725277493 * v21 + 0.198684740873 * v22 + 0.164682829542 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.487707626e-13 * 1 + 0.121149181649 * v5 + 0.119865648695 * v7 + 0.0376990866342 * v8 + 0.362986236069 * v9 + 0.201297985117 * v15 + 0.216587923943 * v21
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.30823066981e-14 * 1 + 0.399063889083 * v5 + 0.281407070759 * v6 + 0.183895752168 * v11 + 0.250698590372 * v21 + 0.264402237936 * v23 + -0.350642364569 * v25
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.90938081778e-14 * 1 + -0.0721691937231 * v4 + 0.190434179313 * v5 + 0.0912071350571 * v17 + 0.393854518301 * v21 + 0.120650859254 * v22 + 0.297195685625 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.81661820086e-14 * 1 + -0.192256314089 * v3 + 0.200664554846 * v5 + 0.172420359495 * v11 + 0.174001457814 * v17 + 0.196544795628 * v25 + 0.510034899097 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.88881378873e-14 * 1 + 0.150705828903 * v1 + 0.180383642122 * v5 + 0.0255421137341 * v7 + 0.147924567633 * v9 + 0.207081110849 * v15 + 0.324915958821 * v20
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.43320505477e-13 * 1 + 0.117688184274 * v1 + 0.148064043168 * v4 + 0.319156667047 * v5 + -0.0281781894763 * v8 + 0.0659378331854 * v13 + 0.36270922092 * v20
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.43757920172e-17 * 1 + 0.0466131008263 * v5 + 0.106646840751 * v8 + 0.0701096100177 * v11 + 0.310207246068 * v17 + -0.0433793024196 * v21 + 0.546057623533 * v22
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.17629672926e-14 * 1 + 0.300372853823 * v1 + 0.0205590348666 * v3 + 0.0277503537935 * v15 + 0.279548319575 * v17 + 0.246187265763 * v23 + 0.110134552506 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.54272388941e-14 * 1 + 0.259070373254 * v1 + 0.210535933785 * v4 + 0.389319644883 * v5 + -0.100769818655 * v8 + -0.0358192797707 * v17 + 0.267126966215 * v21
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.37535881073e-13 * 1 + 0.308235015843 * v1 + 0.0542840796927 * v3 + 0.110652012044 * v4 + 0.130136976953 * v9 + 0.173850027263 * v23 + 0.323738096735 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.81400262878e-14 * 1 + -0.166834154245 * v2 + -0.00948496761411 * v3 + 0.335619646649 * v5 + 0.290082335038 * v20 + 0.362233083207 * v21 + 0.226070799861 * v25
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9727205986e-13 * 1 + 0.197686828821 * v1 + 0.243984736517 * v4 + 0.284583470841 * v5 + 0.00351509665809 * v17 + 0.246891279563 * v21 + 0.0741085624111 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.82777061136e-14 * 1 + 0.0440998112427 * v9 + 0.265735637883 * v11 + 0.062079239548 * v19 + 0.332456669037 * v21 + 0.166577574432 * v22 + 0.167995911323 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.18843994388e-13 * 1 + 0.048378032387 * v4 + 0.101365002744 * v5 + 0.122283044513 * v13 + 0.0434849356037 * v17 + 0.508539194579 * v21 + 0.161548448399 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61209863357e-13 * 1 + 0.254124399143 * v7 + 0.0818419262578 * v13 + 0.163062450307 * v20 + 0.382106080753 * v21 + 0.200219584317 * v22 + -0.0505603083605 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.31463133721e-14 * 1 + 0.127650904254 * v2 + -0.000669121066706 * v5 + 0.308387239909 * v9 + -0.0281898190279 * v16 + 0.289493051288 * v21 + 0.346269044764 * v22
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.97014283136e-14 * 1 + -0.0874652155607 * v1 + -0.348426586703 * v6 + 0.175576412394 * v15 + 0.326357614725 * v20 + 0.349890205243 * v22 + -0.0434571569729 * v27
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.16899262924e-13 * 1 + 0.014017939152 * v7 + 0.27366118619 * v9 + 0.212661145803 * v20 + 0.200966761932 * v21 + 0.28968104382 * v22 + 0.00496807996482 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.90932533273e-13 * 1 + 0.470109040376 * v0 + -0.345028111238 * v16 + 0.156795199444 * v17 + 0.425307008659 * v22 + 0.404789398025 * v23 + 0.163845488471 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.00823163217e-14 * 1 + 0.0650808460073 * v0 + 0.122459398783 * v1 + 0.210462066261 * v3 + 0.220229341744 * v4 + 0.0239086108049 * v16 + 0.446561626974 * v21
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.02013789152e-14 * 1 + 0.178362004659 * v1 + 0.342132945385 * v5 + 0.0991972562216 * v9 + 0.134867602874 * v19 + 0.106242806124 * v21 + 0.22215272929 * v22
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.02944777073e-13 * 1 + 0.172955215562 * v1 + 0.264997305928 * v15 + 0.219322646684 * v20 + 0.314359852422 * v21 + -0.130083529344 * v27 + 0.17854095634 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.18425606332e-13 * 1 + 0.117336370033 * v4 + 0.143582027742 * v5 + 0.434031233889 * v9 + 0.230133327558 * v17 + -0.0461283904833 * v27 + 0.11725525627 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
