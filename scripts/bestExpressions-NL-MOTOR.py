from math import *

def funcNL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( 3.6603199491340135 + v20 ) /tan( 4.404579947524091 )) - (abs( ( ( ( ( v26 + 2.583162279488299 ) / ( ( v3 + 5.112189730849085 ) + ( ( ( v8 - v21 ) - v11 ) - v4 ) ) ) / ( 1.3818526380470857 / v15 ) ) - ( ( v26 + 2.583162279488299 ) - v5 ) ) )/ ( (exp( v17 )+ ( ( ( ( v18 * v11 ) + ( v22 + v18 ) ) + ( ( v26 + 2.583162279488299 ) + v22 ) ) - ( -10.329268758948839 - 3.6603199491340135 ) ) ) / 8.106219695997268 ) ) ) - ( ( ( ( v8 - v21 ) - v11 ) + ( v18 - v17 ) ) / 5.112189730849085 ) ) 
def funcNL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( 3.460965685850482 * ( v13 - ( ( v13 - ( ( ( v13 - v12 ) - ( ( v26 - v5 ) - v20 ) ) - v8 ) ) - v22 ) ) ) / ( 11.484833328978475 -cos( ( ( v26 + ( v26 - v5 ) ) * v22 ) )) ) - ( ( ( ( v16 - ( v26 - v5 ) ) + v21 ) + (sin( (cos( v22 )+ ( -10.42894568923803 + 1.0761647492534188 ) ) )* ( ( v20 - v21 ) - v7 ) ) ) * -0.218406401844355 ) ) 
def funcNL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( 0.38442523184714616 * v5 ) - ( ( ( v8 - ( ( v1 + v22 ) - ( v8 - v17 ) ) ) - ( v16 - v12 ) ) / (abs( ( 3.399585953844799 + ( 3.399585953844799 +sin( ( v1 + v1 ) )) ) )+ v14 ) ) ) + ( v15 / ( 3.399585953844799 +sin( ( v1 + v1 ) )) ) ) + ( v24 / ( 3.399585953844799 + ( v1 * v27 ) ) ) ) 
def funcNL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v2 - v21 ) - v23 ) - v5 ) / ( -4.011404227371651 - ( v26 +exp( ( v2 - v21 ) )) ) ) - ( ( (exp( ( ( ( v26 - v20 ) +sin( ( v3 - v26 ) )) - 2.2031960491778513 ) )- v4 ) + ( ( ( ( v26 - v20 ) + v19 ) - ( v7 + v3 ) ) / 1.1046184897563727 ) ) / 4.043425738900623 ) ) 
def funcNL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( v28 + ( ( ( v20 + v21 ) + v5 ) + ( (sin( (sin( v25 )+tan(sin(sin( v11 )))) )- (cos( ( ( v25 / v11 ) * (sin( v11 )/ v4 ) ) )/ 4.062490477838807 ) ) /exp(sin( ( v16 - v14 ) ))) ) ) / 4.062490477838807 ) 
def funcNL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( (tan( (exp( -2.2003748094362194 )* v16 ) )*abs( v18 )) - ( ( ( ( v21 + ( ( v16 - v2 ) / 2.411702898861453 ) ) + v1 ) / -2.4024436610842272 ) - ( v17 / ( 2.411702898861453 + (exp( v2 )- v12 ) ) ) ) ) - ( ( ( v21 + v14 ) -sin( v9 )) / (exp(sin( v25 ))- ( ( v21 + -2.4024436610842272 ) -cos( ( ( v16 - v2 ) + (exp( -2.2003748094362194 )* v16 ) ) )) ) ) ) 
def funcNL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v5 / ( ( ( ( v11 * v11 ) - v12 ) - -4.468695237153604 ) * 0.49361196787252126 ) ) - ( -2.4560792650294196 / ( ( ( ( v6 - v1 ) + v12 ) *abs(abs( -6.828205007350046 ))) / ( ( ( v6 - v1 ) + v12 ) * ( ( v22 -abs(abs( -6.828205007350046 ))) + ( ( v12 - v1 ) / -4.468695237153604 ) ) ) ) ) ) + ( (exp( ( ( v12 - v1 ) / -4.468695237153604 ) )+ v21 ) *exp( (abs( -6.828205007350046 )/ ( ( ( ( ( v6 - v1 ) + v12 ) - (abs( -6.828205007350046 )- v21 ) ) - v9 ) - v17 ) ) )) ) - -2.0089187580858123 ) 
def funcNL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v20 / 2.738794909004014 ) - (exp( (sin( v8 )/ -5.853913715531975 ) )/ ( -7.411125536240789 / ( 8.550022027806467 + ( ( ( v27 + v22 ) - v26 ) + v28 ) ) ) ) ) - ( ( 2.738794909004014 -sin( v5 )) / (exp( 0.7376175758298373 )+sin( ( (cos(cos( ( v27 + v22 ) ))- v0 ) + v2 ) )) ) ) + ( 0.20748265305322278 * v21 ) ) 
def funcNL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v20 - ( ( v8 - v7 ) - v24 ) ) + (sin( ( v15 - (sin( v7 )+ v8 ) ) )*cos( ( (sin( v7 )* (exp( v8 )+ v21 ) ) - -6.697403128414017 ) )) ) /exp( ( ( (sin( v7 )* (exp( v8 )+ v21 ) ) / 4.132427046297899 ) +exp( ( v15 / 5.337215124480398 ) )) )) + ( ( ( ( 2.6238703671231676 + ( v21 - v8 ) ) / 3.4619154890255928 ) * v5 ) + ( ( v21 - v8 ) / 2.446712483343198 ) ) ) 
def funcNL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( v7 + v5 ) * 0.5410958838794429 ) + ( ( ( ( ( v22 - v2 ) *exp( ( ( v22 - v2 ) / -8.543714763544074 ) )) + ( v20 - v7 ) ) - ( v8 /exp( ( v21 * ( v7 + v5 ) ) )) ) / ( ( ( v17 + ( ( v25 * v5 ) - -3.144755629458654 ) ) +abs( (cos( v3 )/cos( v7 )) )) +cos( 15.374671946161008 )) ) ) 
def funcNL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( 0.17719889266633615 * ( ( v21 + v9 ) + ( v22 + ( -7.938820123758429 / -7.938820123758429 ) ) ) ) + ( ( v18 / 11.030906098173382 ) + ( ( ( -3.778910064323963 + ( v22 + ( -7.938820123758429 / -7.938820123758429 ) ) ) + v4 ) / (exp( (abs( v19 )*exp( v15 )) )- ( v23 - 5.232183504924013 ) ) ) ) ) - ( (cos( v9 )+ v5 ) / ( ( ( v19 - v0 ) - 3.1337232449161476 ) -abs( v5 )) ) ) 
def funcNL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v5 /cos(cos( v9 ))) + ( v1 /cos(cos( ( v28 - v22 ) ))) ) / (exp(exp( ( v28 - v22 ) ))- -4.396079507370455 ) ) - ( ( ( v1 - v9 ) - v21 ) / ( 6.271658808423606 - ( ( v1 - v9 ) - v21 ) ) ) ) - ( ( v1 + ( ( ( ( ( 1.996298245969463 / v5 ) - v0 ) - ( 1.996298245969463 / v5 ) ) + (sin( v0 )* v19 ) ) / -2.733810698949153 ) ) / ( -2.733810698949153 +sin(exp( v21 ))) ) ) 
def funcNL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( -16.32462670910373 * -0.011275776506778357 ) * (cos( (exp( v15 )- ( v22 *abs(tan(cos( v14 )))) ) )+ ( ( ( ( (cos( 8.338745954016424 )+abs( ( 0.5355170149902619 + v10 ) )) - v12 ) -tan( 0.5355170149902619 )) + v15 ) + v7 ) ) ) + ( -0.011275776506778357 + ( ( v5 + ( v4 + v3 ) ) / 3.56134165164773 ) ) ) 
def funcNL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v26 - v22 ) + v12 ) / ( ( (cos( ( ( (tan( v20 )-exp( -12.841184668963926 )) * v12 ) * (tan( v20 )-exp( -12.841184668963926 )) ) )- 4.2136498024094 ) -exp( (abs( v20 )+abs( ( v14 / 7.713503370764485 ) )) )) - ( v22 -sin(abs( v20 ))) ) ) + ( ( ( ( v5 + ( ( ( v20 + v15 ) / -7.361843756954901 ) *abs( v25 )) ) - ( ( v20 + v15 ) - ( v14 / 7.713503370764485 ) ) ) / (cos( ( ( (tan( v20 )-exp( -12.841184668963926 )) * v12 ) * (tan( v20 )-exp( -12.841184668963926 )) ) )- 4.2136498024094 ) ) + v5 ) ) 
def funcNL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  (sin( -16.022037053357423 )* ( ( ( v1 + ( ( ( v2 +tan(cos( v25 ))) + v13 ) /tan( ( -19.790470118786963 * -19.790470118786963 ) )) ) + ( v5 - ( ( ( v28 *sin( (tan( ( -19.790470118786963 * -19.790470118786963 ) )-sin( ( v4 + 2.600411920512663 ) )) )) +sin(sin( ( ( v13 / ( ( v4 / ( v13 - v25 ) ) -tan( ( -19.790470118786963 * -19.790470118786963 ) )) ) - v21 ) ))) + v19 ) ) ) + ( v22 + ( ( v25 +cos( v4 )) /abs( ( 11.788482271541099 / ( v2 - 7.8303988639472735 ) ) )) ) ) ) 
def funcNL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( (sin( ( ( (abs( ( v22 + v6 ) )- (cos( v6 )+ v22 ) ) / -2.4014520644155652 ) / ( -0.9355507092169333 / (cos( v21 )- ( v6 + -0.4558538266078642 ) ) ) ) )+ ( v5 + v7 ) ) + ( (exp( ( (abs( ( v22 + v6 ) )- (cos( v6 )+ v22 ) ) / -2.4014520644155652 ) )* v28 ) + ( v25 - v8 ) ) ) * 0.38253785409863994 ) 
def funcNL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( 0.22180321853739215 * ( ( ( ( ( ( v0 + v28 ) + v1 ) - ( v26 -cos( v6 )) ) / -3.4113888660728904 ) + ( ( (exp(sin( v5 ))/exp( ( (abs(cos( v5 ))* v15 ) * ( ( v0 + v28 ) + v1 ) ) )) + ( ( v8 - v1 ) - ( 1.199352398057492 *exp( v12 )) ) ) / -3.4113888660728904 ) ) + ( v11 + ( ( v5 - ( ( v8 - v21 ) - (abs(cos( v5 ))* v15 ) ) ) + ( ( v0 + v28 ) + v1 ) ) ) ) ) 
def funcNL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( v21 - (sin( -8.224973679372475 )* ( ( ( v12 + ( v5 - v12 ) ) + v20 ) - ( ( v12 - v7 ) + ( v18 /tan(cos(sin( ( 19.600961108178097 + ( v20 * v28 ) ) )))) ) ) ) ) + ( ( ( ( v23 +cos( v3 )) - ( ( ( v9 + v9 ) + ( ( ( v12 + ( v5 - v12 ) ) + v20 ) + v19 ) ) / ( (sin( ( 19.600961108178097 + ( v20 * v28 ) ) )-abs( v28 )) + -3.7984971583620855 ) ) ) - v26 ) -cos( ( v5 + -5.486620781189648 ) )) ) /abs( -3.7984971583620855 )) 
def funcNL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( v5 + ( (exp(abs( (abs( v5 )/ 3.1881724329417196 ) ))/exp( ( ( v2 - ( v6 + ( 17.258630907830224 - v13 ) ) ) / ( v22 - 9.915854682015581 ) ) )) * ( ( ( v28 + (sin(cos( ( v21 - v8 ) ))+ ( v20 + 4.508358744605285 ) ) ) + (exp(cos( v20 ))+ v1 ) ) - ( ( (sin( ( v21 - v8 ) )- v5 ) /sin( -2.5788245341155616 )) - ( ( -6.87826084934828 + (cos( ( v21 - v8 ) )- v13 ) ) -cos( v20 )) ) ) ) ) 
def funcNL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  (tan( -9.155744004002893 )* ( ( (sin( ( v22 - ( v4 + v19 ) ) )*cos( ( ( v5 + v19 ) - v24 ) )) + ( (sin( v19 )- v23 ) /exp(abs(sin( v19 )))) ) + ( v20 + ( v21 + ( v5 + v9 ) ) ) ) ) 
def funcNL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  (exp( -1.2537505896615713 )* ( ( ( v3 - v12 ) + v20 ) + ( ( v5 +cos( ( v3 - v12 ) )) + ( ( v28 + ( v28 -abs( v1 )) ) /abs( (sin(exp(sin(tan(abs( v1 )))))+exp( ( v22 / 7.264100119301965 ) )) )) ) ) ) 
def funcNL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( 0.43662901228751494 * ( ( ( ( v21 *cos( ( v26 / -8.677952033372286 ) )) + ( v25 - ( v26 / -8.677952033372286 ) ) ) + ( ( v7 - ( ( v5 - (sin( ( v12 - ( v15 + v23 ) ) )+ v8 ) ) + ( v9 + v15 ) ) ) / (cos( ( v20 - ( 2.43249609887933 /abs( ( ( v15 + v23 ) * -9.412526912183065 ) )) ) )- 2.43249609887933 ) ) ) +sin(exp( ( (abs( ( 3.281765049357027 * v5 ) )/ v25 ) - 9.692368545701385 ) ))) ) 
def funcNL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v26 - v6 ) + v24 ) +sin( ( -16.940409140332754 - ( v21 - v6 ) ) )) / ( 5.87776609685406 + (abs( v7 )-sin( ( -16.940409140332754 - ( v21 - v6 ) ) )) ) ) + ( ( v21 + ( v4 - ( ( v12 - v11 ) + ( -1.3240623974305805 * v5 ) ) ) ) * ( -4.913747817693469 / ( ( ( v12 - v21 ) + v1 ) -abs( ( ( v24 +exp( v6 )) - -16.940409140332754 ) )) ) ) ) 
def funcNL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( 2.7181493106487338 / ( 15.879182728602764 - v5 ) ) * ( ( ( ( ( v20 + v12 ) *sin( 8.585187455526054 )) + ( v28 - v12 ) ) - ( v6 - v11 ) ) + ( (abs(cos( v16 ))* ( v28 - v12 ) ) + ( ( v8 + v5 ) + ( v1 + v22 ) ) ) ) ) 
def funcNL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  (exp( ( v1 /abs( ( 3.8492268082378303 + ( v22 +sin(tan( v5 ))) ) )) )- ( ( ( v2 - v28 ) / ( ( ( ( 3.8492268082378303 - v22 ) + v22 ) -cos( v5 )) + ( v28 / ( 3.8492268082378303 - v22 ) ) ) ) - ( ( ( v17 +cos( v0 )) + ( ( v5 - 3.8492268082378303 ) + ( ( (cos( v0 )/ ( 3.8492268082378303 + v14 ) ) + v19 ) - v13 ) ) ) / ( ( ( 3.8492268082378303 - v22 ) + v22 ) -cos( v5 )) ) ) ) 
def funcNL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v9 + v28 ) - ( v12 + v6 ) ) / ( ( (cos( v24 )- v24 ) + ( ( v21 * v6 ) + v9 ) ) - -3.997150313368639 ) ) - ( ( ( v5 /cos(cos( (cos( v24 )* v22 ) ))) / -3.997150313368639 ) + ( ( v17 + ( v21 + v7 ) ) / -4.6897597538958955 ) ) ) 
def funcNL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( (cos(abs( ( v9 * 1.1524859084124763 ) ))+abs( v18 )) -tan( -4.834133694510863 )) / -11.766574719360126 ) * v5 ) + ( ( ( v6 - ( (sin( v9 )- ( (cos(sin( v24 ))* v26 ) - ( v9 -sin( v24 )) ) ) + v15 ) ) - ( v21 *abs( 2.575982856601371 )) ) / -6.734538321072737 ) ) 
def funcNL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v1 - (cos( 10.699693965673234 )+ v17 ) ) /exp( (cos( v21 )/ 1.5656999194727597 ) )) + (sin( v7 )- ( ( v19 + ( ( ( v20 - ( v0 + ( ( v5 + v5 ) - v27 ) ) ) + ( v20 - v27 ) ) /sin( 11.028395042282622 )) ) - v28 ) ) ) / ( 5.08508285273718 + ( (sin( ( v3 + v3 ) )+ v23 ) - ( ( v5 + v5 ) - v27 ) ) ) ) + ( v5 - ( v26 / -5.561039369522254 ) ) ) 
def funcNL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v1 - v21 ) + ( ( ( ( v24 - v16 ) - ( v25 - v2 ) ) + ( ( v6 - v18 ) * ( v22 / (abs(abs( -3.280562889806827 ))/ -3.2553584843113796 ) ) ) ) /exp(abs( v21 ))) ) / -4.630766206744568 ) + ( ( ( v6 + ( (abs( v21 )- ( (abs(abs( -3.280562889806827 ))/ v5 ) * ( v1 - ( v22 / (abs(abs( -3.280562889806827 ))/ -3.2553584843113796 ) ) ) ) ) + ( -3.2553584843113796 - v1 ) ) ) * (abs( -3.280562889806827 )/ (abs(abs( -3.280562889806827 ))/ v5 ) ) ) / ( -7.738402114432109 + -0.6974534193059903 ) ) ) 
def funcNL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( v18 + ( ( ( v0 - v18 ) *sin( v1 )) - v21 ) ) / -4.049481555995298 ) + ( ( ( v28 + (sin( (sin( (exp( v1 )/ v16 ) )/ -1.9464944204859655 ) )+ ( v15 + v5 ) ) ) / 2.927594758695399 ) + ( ( v1 + ( v25 - v18 ) ) / 5.215481925784484 ) ) ) 

funcs = [funcNL_100307,funcNL_100408,funcNL_101006,funcNL_101107,funcNL_101309,funcNL_101410,funcNL_101915,funcNL_102008,funcNL_102311,funcNL_102816,funcNL_103111,funcNL_103414,funcNL_103515,funcNL_103818,funcNL_104012,funcNL_104820,funcNL_105014,funcNL_105115,funcNL_105216,funcNL_105923,funcNL_106016,funcNL_106319,funcNL_106521,funcNL_107321,funcNL_107422,funcNL_108121,funcNL_108323,funcNL_108525,funcNL_108828,funcNL_109123,]

def getFuncs(): return funcs
