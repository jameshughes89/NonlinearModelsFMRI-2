from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58362003114e-14 * 1 + 0.0 * v0 + 0.0909247678865 * v1 + 0.0 * v3 + 0.0949545484425 * v5 + 0.0394015942114 * v7 + 0.205094128094 * v11 + 0.0 * v12 + 0.0 * v13 + 0.252643036784 * v15 + 0.153130825768 * v16 + 0.0461370338933 * v17 + 0.0 * v19 + 0.0172480551657 * v21 + 0.123286132266 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.04148742041e-15 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.323558537708 * v5 + 0.0 * v6 + 0.20285041105 * v7 + 0.053146431652 * v10 + -0.0 * v11 + -0.0628207440203 * v14 + 0.0 * v15 + 0.0663222209812 * v16 + 0.0892106665829 * v17 + 0.0356787749758 * v20 + 0.0 * v21 + 0.195848253537 * v22 + 0.0 * v23 + -0.0 * v25 + -0.227127407334 * v26
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.56089667063e-14 * 1 + 0.104422946628 * v1 + 0.0 * v3 + 0.0 * v4 + 0.17565713625 * v5 + 0.0 * v7 + -0.0 * v8 + 0.0 * v14 + 0.18981127067 * v15 + 0.0476967632897 * v16 + 0.11890748704 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0374075459269 * v22 + 0.0624228214334 * v24 + 0.0 * v27 + 0.23015598746 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4492473622e-13 * 1 + 0.0 * v0 + 0.0414743851448 * v1 + 0.00953420809676 * v3 + 0.200220649495 * v4 + 0.0941543169385 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0935392031241 * v11 + 0.0 * v13 + 0.0138831421541 * v15 + 0.0 * v16 + 0.141381177065 * v17 + 0.188380166668 * v18 + 0.0136964932187 * v20 + 0.0465021531571 * v21 + 0.119909359863 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.55449878016e-14 * 1 + 0.0 * v0 + 0.0243339192308 * v3 + 0.0 * v4 + 0.168179253731 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0586296906107 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v17 + 0.0461243393049 * v18 + 0.0 * v19 + 0.113098980826 * v20 + 0.271453464168 * v21 + 0.177010314697 * v22 + 0.0 * v24 + 0.0668773084452 * v27 + 0.0597560525891 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.78848497966e-14 * 1 + 0.0 * v0 + 0.405983102031 * v1 + 0.0 * v4 + 0.185350567113 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.15824909243 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0161692590801 * v21 + 0.0987654400012 * v22 + 0.0638565267816 * v23 + 0.0 * v27 + 0.00349029786124 * v28
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21417405267e-13 * 1 + 0.0 * v0 + 0.118787017179 * v1 + 0.260494303502 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0198050751951 * v9 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.261204545261 * v21 + 0.297013368317 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53513196147e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v11 + 0.0 * v12 + 0.0719739018777 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v19 + 0.388180150854 * v20 + 0.242639195341 * v21 + 0.0643030202238 * v22 + 0.102672757269 * v27 + 0.0374751441774 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39758238106e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.363927576494 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v18 + 0.0 * v20 + 0.247848080084 * v21 + 0.226189457985 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.64744677981e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0109316005994 * v3 + 0.0 * v4 + 0.402433464736 * v5 + 0.0777271603137 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.054446889958 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0368295951125 * v20 + 0.239659614121 * v21 + 0.0381650002515 * v22 + 0.0 * v24 + 0.0 * v25 + 0.106593675674 * v28
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28696131694e-13 * 1 + 0.0921061745119 * v1 + 0.0620447979463 * v3 + 0.0 * v4 + 0.209346697075 * v5 + 0.0 * v7 + 0.0 * v8 + 0.209178262614 * v9 + 0.0709198141883 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v19 + 0.0 * v20 + 0.115054153121 * v21 + 0.128060769947 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0706744427888 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.08969928238e-13 * 1 + 0.354460137093 * v1 + 0.0 * v3 + 0.0257200677012 * v4 + 0.0778886087754 * v5 + 0.0 * v8 + 0.0738887465222 * v9 + 0.0 * v12 + 0.0500530277143 * v13 + 0.040137443147 * v15 + 0.0249464503283 * v16 + 0.0 * v17 + 0.0300626437039 * v18 + 0.116363134771 * v20 + 0.133010544246 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29328137385e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.126221550463 * v3 + 0.0985080605147 * v4 + 0.324534859459 * v5 + 0.232328471454 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0179703198828 * v19 + 0.0880850405753 * v20 + 0.0199188527877 * v21 + 0.0 * v27 + 0.0300310098018 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69703134135e-14 * 1 + 0.0 * v1 + 0.0180688603411 * v4 + 0.441473011395 * v5 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.253275316244 * v15 + 9.87212165676e-05 * v17 + 0.0 * v19 + 0.105430837959 * v20 + 0.0820607384608 * v21 + 0.15025095937 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64137028851e-14 * 1 + 0.159134652332 * v1 + 0.0 * v4 + 0.150918300781 * v5 + 0.100695696671 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0611204884466 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.345551954464 * v21 + 0.0967726683486 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.19346077424e-14 * 1 + 0.0 * v1 + 0.283943905465 * v2 + 0.0 * v3 + -0.0 * v4 + 0.139870764189 * v5 + 0.0254442872572 * v7 + 0.0 * v9 + 0.0744006428727 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0354535230978 * v15 + 0.0 * v16 + 0.0 * v19 + 0.0 * v20 + 0.240794999512 * v25 + 0.168453696669 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.14626872588e-13 * 1 + 0.0559057193444 * v0 + 0.192956280487 * v1 + 0.064006257657 * v3 + 0.0 * v4 + 0.0717938433729 * v5 + 0.0409891154504 * v7 + 0.0 * v8 + 0.144385753128 * v11 + 0.0 * v15 + 0.0177025016156 * v16 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.174360908835 * v21 + 0.0564237901948 * v22 + 0.0 * v23 + 0.0 * v25 + 0.162971140422 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83095936293e-13 * 1 + 0.0 * v0 + 0.208689725379 * v1 + 0.0559319184875 * v3 + 0.297705034995 * v5 + 0.0 * v6 + 0.168072474457 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v12 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.12553757722 * v21 + 0.0464323179058 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21711460001e-13 * 1 + 0.369333166941 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.220864565455 * v5 + 0.108842455001 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185838453798 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21056670877e-14 * 1 + 0.0 * v1 + 0.00307141932151 * v3 + 0.0 * v4 + 0.251946752448 * v5 + 0.0 * v7 + 0.0 * v8 + 0.268334465856 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.163700614678 * v20 + 0.235396294685 * v21 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.40612533531e-13 * 1 + 0.0351497768722 * v1 + 0.130093422375 * v3 + 0.0 * v4 + 0.0125352861657 * v5 + 0.102555952749 * v7 + 0.0 * v8 + 0.162185621066 * v11 + 0.0 * v13 + 0.039222844538 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.202289914589 * v20 + 0.0 * v21 + 0.181450920053 * v22 + 0.0 * v25 + 0.0 * v27 + 0.164979083866 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.69221863576e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.138116124423 * v5 + 0.0 * v8 + 0.0905139654985 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.013796092347 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.263972155764 * v21 + 0.0799651338781 * v22 + 0.0 * v24 + 0.370108602405 * v25 + 0.044124027833 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30139550385e-15 * 1 + 0.0 * v0 + 0.0263562958889 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100849147877 * v5 + 0.0 * v7 + 0.175936592317 * v9 + 0.378016821038 * v11 + 0.0 * v13 + 0.021685511801 * v17 + 0.0 * v18 + 0.0 * v20 + 0.204061793463 * v21 + 0.0 * v22 + 0.0691711848944 * v23 + 0.0 * v24 + 0.0 * v26 + 0.0 * v28
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24976609499e-13 * 1 + 0.0896096193153 * v1 + 0.0 * v3 + 0.0 * v4 + 0.214103825183 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0152956735823 * v11 + 0.0 * v12 + 0.0 * v13 + 0.059659064523 * v15 + 0.100581137852 * v17 + 0.0 * v18 + 0.00235322602225 * v20 + 0.0 * v21 + 0.202223366088 * v22 + 0.0 * v24 + 0.0 * v27 + 0.290353256969 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53749954026e-13 * 1 + 0.0 * v0 + 0.140719398784 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0347682074026 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0433157373543 * v10 + 0.165244006152 * v11 + 0.0700675651294 * v15 + 0.0 * v16 + 0.218192215119 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27 + 0.219018001507 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.37911220617e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.321905772852 * v5 + 0.150820722506 * v7 + 0.166383049004 * v9 + 0.0 * v10 + 0.0 * v13 + 0.0865558605625 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.230712259705 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.00798833436618 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11994295611e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.42223021511 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0863663239344 * v9 + 0.0 * v11 + 0.0973909181164 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.3040442867 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0393425079412 * v28
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.39963701086e-14 * 1 + 0.144787100205 * v1 + 0.0 * v2 + 0.0419698519076 * v3 + 0.413438901102 * v5 + 0.0396315638745 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.0 * v18 + 0.0 * v19 + 0.176754250862 * v20 + 0.0357455488717 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0976357541543 * v26 + 0.0 * v27
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.50026440994e-14 * 1 + 0.231241448842 * v1 + 0.0 * v3 + 0.0 * v4 + 0.325878016323 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0241711736604 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.106326231603 * v21 + 0.272923573695 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24646564802e-13 * 1 + 0.131336056186 * v1 + 0.0 * v3 + 0.100174114748 * v4 + 0.213658416047 * v5 + 0.000434722643309 * v7 + 0.0 * v8 + 0.0428981273558 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0544789529869 * v15 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0136909005632 * v20 + 0.263007735798 * v21 + 0.0 * v22 + 0.0 * v27 + 0.119914212481 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13945230698e-13 * 1 + 0.0 * v0 + 0.056969059025 * v1 + 0.0 * v3 + 0.0 * v4 + 0.266609393039 * v5 + 0.0748802685465 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.108876713754 * v15 + 0.0 * v16 + 0.00255853233265 * v17 + 0.131264575002 * v19 + 0.240920138548 * v21 + 0.0867538142848 * v22 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18184299088e-14 * 1 + 0.0678259738113 * v1 + 0.0 * v2 + 0.0 * v4 + 0.219302599024 * v5 + 0.0080552670396 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0056779856559 * v12 + 0.0837286463617 * v13 + 0.0 * v15 + 0.0 * v18 + 0.247025946266 * v20 + 0.0785790304009 * v21 + 0.170305385885 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0934297219687 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47721900292e-14 * 1 + 0.0 * v4 + 0.157535092098 * v5 + 0.0 * v8 + 0.310297875036 * v9 + 0.113884263257 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.234490354167 * v21 + 0.054070022585 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0858009897654 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.03567993681e-13 * 1 + -0.0 * v2 + 0.128153663687 * v3 + 0.0 * v4 + 0.293517488827 * v5 + -0.345090570599 * v6 + 0.0395389049088 * v7 + 0.0 * v9 + -0.202814777661 * v10 + 0.0 * v11 + 0.0 * v13 + -0.0 * v14 + 0.0 * v17 + 0.0266173285527 * v20 + 0.054795418695 * v21 + 0.132683823275 * v22 + -0.0 * v23 + 0.0 * v25 + 0.0979722387189 * v26
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05272812912e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.0381397748403 * v4 + 0.567139584049 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.246884807854 * v10 + 0.0 * v12 + 0.0 * v13 + 0.119631810169 * v14 + 0.0477446710413 * v15 + 0.0 * v16 + 0.0 * v17 + 0.00153689036536 * v20 + 0.110375388566 * v21 + 0.0 * v26 + -0.0 * v27
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.04692757885e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.273830737977 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0903466665382 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.552396092479 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27682309464e-14 * 1 + 0.275574888206 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.271013353726 * v5 + 0.0 * v8 + 0.0 * v10 + 0.0 * v12 + 0.0693217288913 * v13 + -0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.125798032717 * v21 + 0.0635861668329 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.139737555369 * v28
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.20199089384e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.334472237089 * v5 + 0.0 * v8 + 0.123170822268 * v9 + 0.0 * v12 + 0.0261533440467 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0907099963712 * v20 + 0.0494235050214 * v21 + 0.0228062417575 * v22 + 0.0 * v23 + 0.0767176081157 * v24 + 0.0 * v25 + 0.209060091452 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69401339087e-14 * 1 + 0.184319332589 * v1 + 0.0 * v4 + 0.202713028689 * v5 + 0.0 * v7 + 0.184792076242 * v9 + 0.00884334629097 * v10 + 0.0803446259642 * v11 + 0.0 * v13 + 0.0726657228205 * v15 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.10455704199 * v21 + 0.0341783321689 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.112314491038 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86040071058e-14 * 1 + 0.0 * v1 + 0.125026862426 * v3 + 0.0493816979068 * v4 + 0.104715404069 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0389004049091 * v13 + 0.0 * v14 + 0.305200635021 * v15 + 0.0842824734525 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.147092535219 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0893473031946 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
