from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0928126275834 * 1 + 0.160124713639 * v0 + -0.0320076944203 * v1 + 0.0304739766176 * v4 + 0.330639601556 * v7 + 0.37248201608 * v8 + 0.0379553163898 * v15 + 0.27125721997 * v16 + -0.0473931099022 * v17 + -0.094651589388 * v18 + -0.113112171801 * v20 + -0.129507666603 * v21 + 0.166523760089 * v23 + 0.0741695872076 * v27
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.145906556123 * 1 + -0.164714151968 * v1 + 0.127894406342 * v4 + -0.0505644036497 * v5 + 0.0772192802939 * v7 + 0.126779145181 * v8 + 0.262970006222 * v12 + 0.567883097564 * v13 + 0.220853749551 * v15 + -0.0169052299619 * v17 + -0.221897661253 * v18 + -0.28250884472 * v20 + 0.00815464925941 * v21 + 0.34079697729 * v23
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.320441497921 * 1 + 0.26510002181 * v0 + -0.0344076883209 * v1 + 0.148702729566 * v7 + 0.04911283974 * v8 + 0.158408460612 * v11 + -0.0631368731038 * v13 + -0.155358548669 * v15 + 0.514100753637 * v16 + 0.266259355485 * v17 + 0.103113696023 * v18 + 0.331850016072 * v21 + -0.0783406865359 * v24 + -0.279229832688 * v27
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.144313307372 * 1 + 0.0759591489885 * v1 + -0.210746562951 * v3 + 0.0116903599183 * v4 + -0.00670359341651 * v7 + 0.0927735483345 * v11 + 0.427751963744 * v12 + -0.0550375674653 * v13 + 0.357472047527 * v15 + -0.311458974138 * v17 + 0.0532316682475 * v19 + -0.00823941699533 * v21 + 0.065015411852 * v22 + 0.373446802118 * v24
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.213109641427 * 1 + -0.0165561076405 * v1 + -0.353626400181 * v2 + 0.2159073777 * v4 + 0.526797916682 * v6 + 0.263659991635 * v8 + 0.39502573344 * v11 + -0.114361748491 * v12 + 0.175307483021 * v15 + -0.077302159757 * v17 + -0.343900140219 * v18 + 0.10128128768 * v20 + 0.00243504852713 * v21 + 0.118376973433 * v25
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.103967161701 * 1 + 0.117074885126 * v1 + 0.2552149403 * v3 + -0.177637440228 * v4 + 0.0162569816972 * v8 + 0.188858724052 * v9 + 0.190788924103 * v12 + 0.515551343902 * v13 + 0.49441378909 * v15 + -0.254551846386 * v17 + 0.173366383577 * v20 + -0.149565280737 * v22 + -0.0219825936878 * v23 + -0.429454698293 * v27
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00728658155854 * 1 + 0.0569962549103 * v0 + -0.131746207965 * v1 + -0.0308764989232 * v2 + 0.15180206645 * v4 + 0.0316635172653 * v8 + 0.426045124718 * v12 + 0.31161632601 * v13 + 0.391325335926 * v15 + 0.0233393271129 * v17 + -0.04046357246 * v18 + -0.0397161940079 * v20 + 0.0525461987692 * v21 + -0.0895895909571 * v27
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0120370001345 * 1 + 0.00214404735043 * v3 + 0.205169168806 * v5 + -0.3129671868 * v6 + 0.12078258942 * v8 + 0.0150152766069 * v11 + 0.630974993002 * v12 + 0.103370921722 * v13 + -0.0185550761394 * v15 + 0.611203558016 * v16 + 0.232323858163 * v17 + -0.10801235707 * v18 + -0.2321192595 * v21 + -0.269682133243 * v27
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.116308341771 * 1 + -0.303591748331 * v1 + 0.0410211220726 * v2 + -0.081204402522 * v4 + 0.360079797649 * v5 + -0.117313540481 * v6 + 0.676630295816 * v7 + -0.025948446682 * v8 + 0.111820307632 * v9 + -0.140651217653 * v13 + 0.0975804704826 * v18 + 0.013194264304 * v21 + -0.0096123929207 * v23 + 0.287833617416 * v25
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.540926549608 * 1 + 0.123530297099 * v1 + 0.078504187079 * v2 + 0.305968173963 * v4 + -0.103733045821 * v6 + -0.420288975526 * v7 + -0.468724449289 * v8 + 0.113350395598 * v9 + 0.179318128772 * v11 + -0.00103263149226 * v12 + 0.345911729131 * v14 + -0.238277057199 * v18 + 0.13590077858 * v23 + 0.45203289134 * v26
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0690244280765 * 1 + -0.0124958841519 * v1 + 0.189859437502 * v4 + -0.0353044664963 * v5 + -0.326701835088 * v7 + 0.0892321529455 * v8 + 0.155956693647 * v11 + 0.565528039887 * v13 + 0.259668270561 * v15 + 0.212345206694 * v17 + 0.0597419401209 * v20 + -0.216042535186 * v21 + 0.326428826962 * v22 + -0.395408716537 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.228944300155 * 1 + 0.154847354248 * v1 + 0.3949727823 * v4 + 0.0677197980791 * v8 + 0.00782784726112 * v9 + -0.0632050456615 * v11 + 0.120869824576 * v12 + 0.0964224485447 * v13 + -0.0515025977407 * v15 + -0.0160882510354 * v17 + -0.143158862085 * v18 + 0.0941701177694 * v20 + -0.0873164656536 * v21 + 0.247208055956 * v22
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.132151193188 * 1 + -0.062206959132 * v1 + 0.0790546256227 * v4 + 0.007101796433 * v5 + -0.0870035367595 * v6 + 0.0934485516361 * v7 + 0.169942516981 * v8 + 0.115291709248 * v11 + 0.408095530107 * v13 + 0.126241419235 * v15 + -0.156695703557 * v17 + 0.0137311878688 * v20 + 0.152746632626 * v21 + 0.210660025706 * v26
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.107361371753 * 1 + 0.0538148074486 * v1 + 0.0215842101232 * v4 + -0.0687465042367 * v6 + 0.0467356610999 * v7 + -0.126560859866 * v8 + 0.521990938853 * v11 + -0.131842531579 * v15 + 0.122395418578 * v17 + -0.0769532883518 * v18 + 0.0596167570634 * v20 + 0.0738289860846 * v21 + 0.532567725171 * v22 + -0.109576878115 * v27
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.554653368645 * 1 + 0.0461591198629 * v0 + -0.0511796253577 * v4 + 0.324227629619 * v5 + -0.111006897342 * v8 + 0.290761003719 * v12 + 0.163344060564 * v13 + 0.14566507045 * v15 + 0.124125681888 * v16 + 0.0361577062048 * v20 + 0.0810483931831 * v22 + 0.352438286136 * v23 + 0.156524645547 * v24 + 0.06222849533 * v27
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.187301336414 * 1 + -0.105466571787 * v1 + 0.23137277332 * v2 + 0.24350281477 * v4 + 0.121161018297 * v5 + -0.0473294023273 * v8 + -0.133144162852 * v9 + 0.153409183426 * v12 + 0.258312767232 * v13 + 0.228922304088 * v15 + 0.0316702195016 * v17 + 0.104141615264 * v20 + 0.0146838013349 * v21 + -0.284196733322 * v27
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.100258738983 * 1 + -0.0430773933749 * v1 + -0.00818165849863 * v4 + 0.0896826825352 * v5 + -0.0658081346374 * v8 + -0.0909841750652 * v11 + 0.200478263689 * v12 + 0.244359172986 * v13 + 0.439042691241 * v15 + -0.0655004601569 * v17 + -0.199775227728 * v18 + -0.0158074710011 * v20 + 0.129816250351 * v21 + 0.294392206161 * v22
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0861218433208 * 1 + -0.350831288636 * v3 + -0.0465432512251 * v4 + 0.156697986447 * v5 + -0.059458401519 * v7 + 0.304647448868 * v8 + 0.302017575981 * v12 + 0.0726358191573 * v13 + 0.498548947275 * v15 + 0.141123973376 * v17 + -0.00967493565274 * v20 + -0.0163754057354 * v21 + 0.152995393463 * v22 + -0.0567261550138 * v23
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0235406785931 * 1 + 0.0451364231625 * v1 + 0.0438347636768 * v2 + 0.0143698064512 * v4 + 0.287529542086 * v5 + 0.571772876069 * v6 + -0.42886928809 * v8 + 0.315227932449 * v12 + 0.177668612466 * v13 + 0.11733274864 * v15 + -0.196984964901 * v17 + -0.112284518666 * v18 + 0.0416843205368 * v20 + 0.145342234351 * v22
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0887293534289 * 1 + 0.0811235649299 * v0 + 0.0718680930462 * v5 + 0.256906504064 * v8 + 0.225660128868 * v12 + 0.359311879701 * v13 + -0.308979745609 * v15 + 0.227585374812 * v16 + 0.170676947194 * v17 + 0.132797926316 * v18 + -0.136511535049 * v20 + 0.216950368573 * v21 + 0.153620464719 * v24 + -0.255867864096 * v27
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.141076808426 * 1 + 0.300733850488 * v3 + -0.0100934837502 * v4 + 0.110189046892 * v5 + 0.0856901124013 * v8 + 0.0881507178932 * v11 + 0.319872483582 * v13 + 0.390506043301 * v15 + 0.0422483298581 * v17 + -0.14626401402 * v18 + -0.0553232755331 * v20 + 0.220423834897 * v21 + 0.230669877846 * v25 + -0.425170733688 * v27
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.367977055343 * 1 + -0.0976250560337 * v1 + 0.0307180862975 * v2 + -0.0656877171126 * v4 + 0.0810831596451 * v7 + -0.10726390061 * v8 + 0.171979952959 * v9 + 0.514878216992 * v13 + 0.0969433525273 * v15 + -0.0782481558418 * v17 + -0.0906085479458 * v18 + 0.0576075053543 * v20 + 0.198270797603 * v23 + -0.0582739494386 * v27
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0329424471518 * 1 + -0.086372395702 * v1 + -0.124541410921 * v4 + 0.200133847339 * v5 + -0.00607388854908 * v6 + 0.633538362914 * v7 + -0.0130158224965 * v8 + 0.135957219819 * v11 + -0.144514178924 * v13 + 0.0351401272127 * v18 + 0.0575763026069 * v20 + -0.115328272683 * v21 + 0.22479006487 * v25 + 0.244392738773 * v26
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0787364212035 * 1 + -0.0384070375653 * v0 + -0.0693942333007 * v1 + -0.103172533791 * v3 + 0.0800428942072 * v8 + 0.152001378688 * v10 + 0.258619942402 * v12 + 0.41871951333 * v13 + -0.0420614824059 * v15 + 0.71035505277 * v16 + -0.269415520034 * v17 + 0.0416951299341 * v18 + -0.141069532824 * v20 + -0.0820575725717 * v22
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.131301411259 * 1 + 0.190988996586 * v0 + -0.04030578466 * v1 + 0.948059100496 * v4 + -0.139550480906 * v8 + -0.343487230084 * v9 + 0.481545959256 * v12 + 0.420668515605 * v13 + -0.0519131122168 * v15 + 0.203708213631 * v16 + -0.332857224097 * v17 + -0.282581631295 * v18 + -0.200969033056 * v21 + -0.0720545559265 * v23
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0426085084569 * 1 + -0.0449881800925 * v1 + 0.0562059780977 * v4 + -0.0121048858884 * v5 + 0.129105240148 * v6 + 0.334012049189 * v7 + 0.0951007117785 * v8 + 0.340342500762 * v15 + -0.0353757722501 * v17 + 0.00791800890225 * v18 + -0.0322161354442 * v20 + -0.0974977718033 * v21 + 0.438334933779 * v23 + -0.151219477287 * v27
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.238831238084 * 1 + -0.336456096774 * v1 + 0.169409931094 * v4 + 0.11281628457 * v5 + -0.0514911846479 * v7 + -0.239685153492 * v8 + -0.0452473380815 * v9 + 0.503174685189 * v11 + 0.346018765753 * v13 + 0.211097758997 * v17 + -0.0647169128253 * v18 + -0.118510478067 * v20 + 0.152354448065 * v21 + 0.170697381811 * v23
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.411269328874 * 1 + 0.112980450947 * v1 + 0.172083956229 * v4 + -0.208147629812 * v5 + -0.0779607936423 * v6 + -0.379010134884 * v8 + 0.243928420262 * v9 + 0.315828565594 * v12 + -0.0626215458042 * v13 + 0.141016680526 * v20 + -0.0866106816646 * v21 + 0.0490173779977 * v22 + 0.499119911411 * v26 + -0.0605884977449 * v27
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.26073504834 * 1 + 0.187254283007 * v1 + -0.10442416036 * v4 + 0.247651746738 * v5 + 0.144282957792 * v8 + 0.0686281076491 * v9 + 0.358462221886 * v11 + 0.140945422691 * v13 + 0.238591021414 * v15 + 0.0980545298076 * v17 + -0.152162094016 * v20 + -0.0296111127644 * v21 + -0.184308439415 * v22 + -0.206081576279 * v27
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0119571306583 * 1 + -0.0508461745242 * v1 + 0.0948201172181 * v2 + 0.0917580735394 * v4 + -0.105323620001 * v6 + -0.0245763220038 * v8 + 0.204512553222 * v9 + 0.344186119046 * v13 + 0.118834594608 * v15 + 0.526658657639 * v16 + -0.324983782058 * v17 + 0.222965766889 * v20 + 0.110997440342 * v26 + -0.134394840695 * v27
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0694941534299 * 1 + -0.13023997365 * v1 + -0.299679499848 * v3 + 0.0775673531098 * v4 + -0.153751619095 * v5 + -0.187461891739 * v8 + 0.357615796144 * v9 + 0.496946146345 * v12 + 0.396835198578 * v13 + 0.134738650162 * v15 + -0.117459829956 * v17 + -0.00278657562496 * v21 + 0.368122049021 * v25 + 0.265152627455 * v26
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.24298137494 * 1 + 0.253855535744 * v0 + -0.171506937341 * v1 + -0.0192136243377 * v2 + 0.239764010667 * v4 + 0.16269152778 * v5 + 0.248940583384 * v8 + 0.176903003271 * v15 + 0.325878444143 * v16 + -0.10757723102 * v17 + -0.201416587302 * v18 + -0.309516278676 * v20 + -0.00161635469644 * v21 + 0.172249488356 * v23
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0293255224628 * 1 + -0.0973776275066 * v3 + 0.144338883099 * v4 + -0.0754413302871 * v5 + 0.0261529927832 * v8 + 0.286422422649 * v11 + 0.0954148002326 * v12 + 0.40466396065 * v13 + -0.111115234589 * v15 + 0.26331130143 * v16 + 0.159516642203 * v17 + -0.175181423207 * v19 + 0.211436251353 * v22 + -0.0602793925448 * v27
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.174245199048 * 1 + -0.153086499405 * v1 + 0.0997494430151 * v4 + 0.262527880187 * v5 + 0.0164670189888 * v6 + 0.0056689238134 * v7 + -0.187274679265 * v8 + -0.0287064409499 * v10 + 0.242613063131 * v11 + 0.152002243194 * v13 + 0.337086683522 * v14 + 0.0502090973737 * v17 + -0.0199422272571 * v25 + 0.18629125634 * v26
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.104845187886 * 1 + -0.0206725263851 * v1 + 0.361795536216 * v3 + 0.178488608851 * v7 + -0.0340004804217 * v8 + 0.0250909256914 * v9 + 0.0466539870471 * v10 + 0.095263755252 * v12 + 0.0106075131488 * v15 + 0.332484771989 * v16 + 0.189130692073 * v17 + -0.194080424148 * v18 + 0.0363919952953 * v20 + 0.00266469012853 * v21
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.152627956167 * 1 + -0.112725086169 * v1 + 0.239397617535 * v4 + 0.0555702241117 * v5 + -0.212420045069 * v7 + 0.299146247952 * v8 + 0.372372321547 * v13 + -0.299369421298 * v15 + 0.150195240817 * v16 + 0.130105681338 * v17 + -0.201424227476 * v18 + 0.379882682888 * v20 + -0.0332840626511 * v21 + 0.0944437997065 * v23
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0655598590401 * 1 + -0.352856807731 * v1 + -0.00549935436352 * v4 + 0.246600397283 * v5 + -0.0490822118136 * v7 + -0.0713097511962 * v8 + 0.536092264394 * v9 + -0.00345316112427 * v13 + 0.433464288449 * v15 + 0.173152556575 * v17 + -0.0549214040342 * v18 + -0.169710416768 * v20 + 0.0057564702557 * v22 + 0.277141729642 * v25
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.173892459923 * 1 + 0.30543328605 * v0 + -0.283941648382 * v1 + 0.415890456383 * v5 + -0.0473890212578 * v6 + 0.0924717255062 * v7 + 0.390837765782 * v9 + 0.471523475806 * v13 + 0.00693101565083 * v15 + 0.0422327911389 * v17 + -0.292314753228 * v18 + 0.246200813227 * v20 + -0.208763492477 * v21 + 0.0388726106189 * v23
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.184043416755 * 1 + 0.0223635409177 * v1 + 0.252227223677 * v3 + -0.0763641217012 * v6 + -0.00925971836279 * v7 + 0.0173266427056 * v8 + 0.204800010862 * v9 + 0.479386929638 * v12 + 0.0754475858978 * v15 + 0.220581685185 * v16 + 0.0436333549168 * v17 + -0.0556794693643 * v18 + -0.216053532009 * v21 + -0.109598995996 * v23
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.000315393930088 * 1 + 0.0678370774405 * v0 + -0.0627728540305 * v1 + -0.0182814669452 * v2 + 0.0643098232677 * v3 + 0.247204918252 * v8 + -0.0891716434767 * v12 + 0.257305179398 * v13 + 0.396730737831 * v15 + -0.14994304935 * v17 + 0.00778348309289 * v18 + -0.142394218642 * v23 + 0.381011029992 * v24 + -0.00518514014857 * v27
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.366251240525 * 1 + 0.057818428012 * v1 + 0.268462361513 * v4 + 0.0271165820533 * v6 + 0.328888670887 * v7 + -0.170065756327 * v11 + 0.48649021225 * v13 + 0.267389961023 * v15 + -0.174915863535 * v17 + -0.438991970833 * v18 + 0.249490888127 * v20 + -0.157509504272 * v22 + 0.289868815778 * v23 + 0.585027824308 * v26

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
