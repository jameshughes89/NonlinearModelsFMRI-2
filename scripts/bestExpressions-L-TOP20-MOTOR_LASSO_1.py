from math import *

def func_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58362003114e-14 * 1 + 0.0 * v0 + 0.0909247678865 * v1 + 0.0 * v3 + 0.0949545484425 * v5 + 0.0394015942114 * v7 + 0.205094128094 * v11 + 0.0 * v12 + 0.0 * v13 + 0.252643036784 * v15 + 0.153130825768 * v16 + 0.0461370338933 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0172480551657 * v21 + 0.123286132266 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.04139462315e-15 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v4 + 0.323558629158 * v5 + 0.0 * v6 + 0.20285056641 * v7 + 0.0531462383414 * v10 + -0.0 * v11 + -0.0628196312435 * v14 + 0.0 * v15 + 0.0663225000961 * v16 + 0.0892104701183 * v17 + 0.0356788533509 * v20 + 0.0 * v21 + 0.195848175558 * v22 + 0.0 * v23 + -0.0 * v25 + -0.227128570463 * v26
def func_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.56095374359e-14 * 1 + 0.0 * v0 + 0.10442057018 * v1 + 0.0 * v3 + 0.0 * v4 + 0.175655204089 * v5 + 0.0 * v7 + -0.0 * v8 + 0.0 * v14 + 0.189814467428 * v15 + 0.0476978557868 * v16 + 0.118906907846 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0374089138236 * v22 + 0.0624239856558 * v24 + 0.0 * v27 + 0.230154680382 * v28
def func_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4492473622e-13 * 1 + 0.0 * v0 + 0.0414743851448 * v1 + 0.00953420809676 * v3 + 0.200220649495 * v4 + 0.0941543169385 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0935392031241 * v11 + 0.0 * v13 + 0.0138831421541 * v15 + 0.0 * v16 + 0.141381177065 * v17 + 0.188380166668 * v18 + 0.0136964932187 * v20 + 0.0465021531571 * v21 + 0.119909359863 * v23 + 0.0 * v25 + 0.0 * v27
def func_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.55441166438e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0243377560882 * v3 + 0.0 * v4 + 0.168186771842 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0586377768355 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v17 + 0.0461182869868 * v18 + 0.0 * v19 + 0.113086497096 * v20 + 0.271442831155 * v21 + 0.177006663308 * v22 + 0.0 * v24 + 0.0668821348135 * v27 + 0.0597647929696 * v28
def func_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.78848497966e-14 * 1 + 0.0 * v0 + 0.405983102031 * v1 + 0.0 * v4 + 0.185350567113 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.15824909243 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0161692590801 * v21 + 0.0987654400012 * v22 + 0.0638565267816 * v23 + 0.0 * v27 + 0.00349029786124 * v28
def func_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21417179093e-13 * 1 + 0.0 * v0 + 0.118793610405 * v1 + 0.0 * v4 + 0.260498750413 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0198058199386 * v9 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.261197356056 * v21 + 0.297011464088 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53513196147e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v11 + 0.0 * v12 + 0.0719739018777 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.388180150854 * v20 + 0.242639195341 * v21 + 0.0643030202238 * v22 + 0.102672757269 * v27 + 0.0374751441774 * v28
def func_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.92322483559e-14 * 1 + 0.0 * v1 + 0.0454984319464 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.326255079164 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v18 + 0.0 * v20 + 0.26532248737 * v21 + 0.210174557416 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.64744677981e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0109316005994 * v3 + 0.0 * v4 + 0.402433464736 * v5 + 0.0777271603137 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.054446889958 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0368295951125 * v20 + 0.239659614121 * v21 + 0.0381650002515 * v22 + 0.0 * v24 + 0.0 * v25 + 0.106593675674 * v28
def func_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28696131694e-13 * 1 + 0.0921061745119 * v1 + 0.0620447979463 * v3 + 0.0 * v4 + 0.209346697075 * v5 + 0.0 * v7 + 0.0 * v8 + 0.209178262614 * v9 + 0.0709198141883 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.115054153121 * v21 + 0.128060769947 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0706744427888 * v28
def func_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.08969928238e-13 * 1 + 0.354460137093 * v1 + 0.0 * v3 + 0.0257200677012 * v4 + 0.0778886087754 * v5 + 0.0 * v8 + 0.0738887465222 * v9 + 0.0 * v12 + 0.0500530277143 * v13 + 0.040137443147 * v15 + 0.0249464503283 * v16 + 0.0 * v17 + 0.0300626437039 * v18 + 0.0 * v19 + 0.116363134771 * v20 + 0.133010544246 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29328137385e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.126221550463 * v3 + 0.0985080605147 * v4 + 0.324534859459 * v5 + 0.232328471454 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0179703198828 * v19 + 0.0880850405753 * v20 + 0.0199188527877 * v21 + 0.0 * v27 + 0.0300310098018 * v28
def func_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69703134135e-14 * 1 + 0.0 * v1 + 0.0180688603411 * v4 + 0.441473011395 * v5 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.253275316244 * v15 + 0.0 * v16 + 9.87212165676e-05 * v17 + 0.0 * v19 + 0.105430837959 * v20 + 0.0820607384608 * v21 + 0.15025095937 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64136960017e-14 * 1 + 0.159134623479 * v1 + 0.0 * v4 + 0.150918240071 * v5 + 0.100695697097 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0611205227387 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.3455520001 * v21 + 0.0967726653378 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.19346077424e-14 * 1 + 0.0 * v1 + 0.283943905465 * v2 + 0.0 * v3 + -0.0 * v4 + 0.139870764189 * v5 + 0.0254442872572 * v7 + 0.0 * v9 + 0.0744006428727 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0354535230978 * v15 + 0.0 * v16 + 0.0 * v19 + 0.0 * v20 + 0.0 * v24 + 0.240794999512 * v25 + 0.168453696669 * v28
def func_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.14625391054e-13 * 1 + 0.0559036794181 * v0 + 0.192952659018 * v1 + 0.064006491061 * v3 + 0.0 * v4 + 0.0717938863234 * v5 + 0.0409923112671 * v7 + 0.0 * v8 + 0.144387965048 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0177035084739 * v16 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.174360946893 * v21 + 0.0564237277843 * v22 + 0.0 * v23 + 0.0 * v25 + 0.162969992645 * v28
def func_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83095936293e-13 * 1 + 0.0 * v0 + 0.208689725379 * v1 + 0.0559319184875 * v3 + 0.297705034995 * v5 + 0.0 * v6 + 0.168072474457 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v12 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.12553757722 * v21 + 0.0464323179058 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21709110678e-13 * 1 + 0.0 * v0 + 0.36932893962 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.220852485951 * v5 + 0.108852869432 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185841124003 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v27
def func_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21056670877e-14 * 1 + 0.0 * v1 + 0.00307141932151 * v3 + 0.0 * v4 + 0.251946752448 * v5 + 0.0 * v7 + 0.0 * v8 + 0.268334465856 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.163700614678 * v20 + 0.235396294685 * v21 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.4023151277e-13 * 1 + 0.0349006870532 * v1 + 0.129420289369 * v3 + 0.0 * v4 + 0.0124973342766 * v5 + 0.103251697326 * v7 + 0.0 * v8 + 0.00211758835534 * v9 + 0.161145395721 * v11 + 0.0 * v13 + 0.0395156393522 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.201936228579 * v20 + 0.0 * v21 + 0.180722910836 * v22 + 0.0 * v25 + 0.0 * v27 + 0.165926975693 * v28
def func_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.69223259668e-13 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.138115714172 * v5 + 0.0 * v8 + 0.0905067587267 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0137931484548 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.26397719352 * v21 + 0.0799629034223 * v22 + 0.0 * v24 + 0.370116779832 * v25 + 0.0441223154815 * v27
def func_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30141033703e-15 * 1 + 0.0 * v0 + 0.0263571293528 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100849383791 * v5 + 0.0 * v7 + 0.175936812224 * v9 + 0.37801635887 * v11 + 0.0 * v13 + 0.0 * v15 + 0.02168522105 * v17 + 0.0 * v18 + 0.0 * v20 + 0.204061474779 * v21 + 0.0 * v22 + 0.0691709875573 * v23 + 0.0 * v24 + 0.0 * v26 + 0.0 * v28
def func_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24976644591e-13 * 1 + 0.089609296043 * v1 + 0.0 * v3 + 0.0 * v4 + 0.214103794765 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0152957410592 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0596592945517 * v15 + 0.100580542918 * v17 + 0.0 * v18 + 0.0 * v19 + 0.00235343808041 * v20 + 0.0 * v21 + 0.202223576565 * v22 + 0.0 * v24 + 0.0 * v27 + 0.290353316593 * v28
def func_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53749954026e-13 * 1 + 0.0 * v0 + 0.140719398784 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0347682074026 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0433157373543 * v10 + 0.165244006152 * v11 + 0.0700675651294 * v15 + 0.0 * v16 + 0.218192215119 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27 + 0.219018001507 * v28
def func_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.37911220617e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.321905772852 * v5 + 0.150820722506 * v7 + 0.0 * v8 + 0.166383049004 * v9 + 0.0 * v10 + 0.0 * v13 + 0.0865558605625 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.230712259705 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.00798833436618 * v28
def func_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11994295611e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.42223021511 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0863663239344 * v9 + 0.0 * v11 + 0.0973909181164 * v12 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.3040442867 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0393425079412 * v28
def func_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.39963701086e-14 * 1 + 0.144787100205 * v1 + 0.0 * v2 + 0.0419698519076 * v3 + 0.413438901102 * v5 + 0.0396315638745 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.0 * v16 + 0.0 * v18 + 0.0 * v19 + 0.176754250862 * v20 + 0.0357455488717 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0976357541543 * v26 + 0.0 * v27
def func_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.50026440994e-14 * 1 + 0.231241448842 * v1 + 0.0 * v3 + 0.0 * v4 + 0.325878016323 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0241711736604 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.106326231603 * v21 + 0.272923573695 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24637144482e-13 * 1 + 0.0 * v0 + 0.131301337227 * v1 + 0.0 * v3 + 0.100212484646 * v4 + 0.21366601928 * v5 + 0.000474391400872 * v7 + 0.0 * v8 + 0.0429324876148 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0545286561043 * v15 + 0.0 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0136531916496 * v20 + 0.262964725983 * v21 + 0.0 * v22 + 0.0 * v27 + 0.119863427036 * v28
def func_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13945230698e-13 * 1 + 0.0 * v0 + 0.056969059025 * v1 + 0.0 * v3 + 0.0 * v4 + 0.266609393039 * v5 + 0.0748802685465 * v7 + -0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.108876713754 * v15 + 0.0 * v16 + 0.00255853233265 * v17 + 0.131264575002 * v19 + 0.240920138548 * v21 + 0.0867538142848 * v22 + 0.0 * v28
def func_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18185355986e-14 * 1 + 0.0678271496032 * v1 + 0.0 * v2 + 0.0 * v4 + 0.219304074065 * v5 + 0.00805574355723 * v7 + 0.0 * v8 + 0.0 * v9 + 0.00567770451504 * v12 + 0.0837272203139 * v13 + 0.0 * v15 + 0.0 * v18 + 0.247024574824 * v20 + 0.0785783412184 * v21 + 0.17030539503 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.093430759934 * v28
def func_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47832393273e-14 * 1 + 0.0 * v3 + 0.0 * v4 + 0.157586981366 * v5 + 0.0 * v8 + 0.310331752741 * v9 + 0.113850017424 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.234460078988 * v21 + 0.0540040751005 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0858446166942 * v28
def func_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.03570351255e-13 * 1 + 0.0 * v1 + -0.0 * v2 + 0.128159011621 * v3 + 0.0 * v4 + 0.293515237028 * v5 + -0.34508340203 * v6 + 0.0395271067671 * v7 + 0.0 * v9 + -0.202819539845 * v10 + 0.0 * v11 + 0.0 * v13 + -0.0 * v14 + 0.0 * v17 + 0.0266178340285 * v20 + 0.0548013390655 * v21 + 0.132685600136 * v22 + -0.0 * v23 + 0.0 * v25 + 0.0979744966651 * v26
def func_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05273853462e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.0381416942194 * v4 + 0.567140320076 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.246884066572 * v10 + 0.0 * v12 + 0.0 * v13 + 0.119632283055 * v14 + 0.0477461239511 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0015339387491 * v20 + 0.11037449296 * v21 + 0.0 * v24 + 0.0 * v26 + -0.0 * v27
def func_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.0469219465e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.273831318766 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0903460542582 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.552396040333 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def func_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27682309464e-14 * 1 + 0.275574888206 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.271013353726 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v10 + 0.0 * v12 + 0.0693217288913 * v13 + -0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.125798032717 * v21 + 0.0635861668329 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.139737555369 * v28
def func_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.20199089384e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.334472237089 * v5 + 0.0 * v8 + 0.123170822268 * v9 + 0.0 * v12 + 0.0261533440467 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0907099963712 * v20 + 0.0494235050214 * v21 + 0.0228062417575 * v22 + 0.0 * v23 + 0.0767176081157 * v24 + 0.0 * v25 + 0.209060091452 * v28
def func_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69414329157e-14 * 1 + 0.18432781615 * v1 + 0.0 * v4 + 0.202711943149 * v5 + 0.0 * v7 + 0.184791109191 * v9 + 0.0088437546103 * v10 + 0.0803440925446 * v11 + 0.0 * v13 + 0.0726574659645 * v15 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.104560150942 * v21 + 0.034173540467 * v22 + 0.0 * v23 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.112318455665 * v28
def func_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86040071058e-14 * 1 + 0.0 * v1 + 0.125026862426 * v3 + 0.0493816979068 * v4 + 0.104715404069 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0389004049091 * v13 + 0.0 * v14 + 0.305200635021 * v15 + 0.0842824734525 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.147092535219 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0893473031946 * v28
def func_MOTOR_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.2417616972e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.295275136834 * v3 + 0.0476445786823 * v4 + 0.00876467092521 * v7 + 0.0 * v9 + 0.104024309976 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.341815465094 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v22 + 0.0307752257589 * v23 + 0.0726398801915 * v24 + -0.168897332301 * v25 + 0.0 * v27 + 0.0 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,funcL_MOTOR_114924,]

def getFuncs(): return funcs
