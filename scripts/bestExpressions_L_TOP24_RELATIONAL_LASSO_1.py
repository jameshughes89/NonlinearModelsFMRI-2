from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59555523626e-13 * 1 + 0.0 * v0 + 0.13529657971 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.21311812264 * v8 + 0.0 * v10 + 0.0 * v12 + 0.0165720365845 * v13 + 0.198206290663 * v15 + 0.0 * v16 + 0.327543196199 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0361377830821 * v28
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24865953571e-13 * 1 + 0.0 * v0 + 0.036687377892 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.206498395165 * v13 + 0.390124533204 * v15 + -0.0 * v16 + 0.147697169805 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.179645805916 * v27 + 0.0 * v28
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.62042661906e-14 * 1 + 0.0 * v0 + 0.227132578142 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v7 + 0.138729360944 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0510850536916 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.258426864229 * v17 + 0.0763040702775 * v18 + -0.25669100337 * v19 + -0.0 * v20 + 0.100462391446 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.56208264877e-14 * 1 + 0.0490043080614 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.319256179925 * v13 + 0.0 * v14 + 0.0 * v15 + 0.194066100633 * v17 + 0.0121105360965 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0873392169117 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v26 + 0.240680015563 * v27 + 0.0 * v28
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.1372350223e-13 * 1 + -0.0 * v0 + 0.110787329303 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0582849660061 * v5 + 0.110886009509 * v6 + -0.0 * v7 + 0.365537586557 * v8 + -0.0 * v9 + 0.148381288028 * v11 + 0.171531507985 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v24 + 0.0 * v25 + 0.125347700332 * v26 + 0.0 * v27 + -0.0010449198456 * v28
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61139953529e-13 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0249242285431 * v3 + 0.112546497064 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v12 + 0.0875628584992 * v13 + 0.304317395275 * v15 + -0.0 * v16 + 0.356808634231 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.77156087233e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0246410494446 * v6 + 0.0 * v7 + 0.0558855960647 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.338418489618 * v13 + 0.281877607543 * v15 + 0.296657836808 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.93398093968e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.135193787378 * v6 + 0.0481566675056 * v7 + 0.0 * v8 + 0.0359034687149 * v10 + 0.0 * v11 + 0.0 * v12 + 0.201936291791 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.473664467498 * v17 + 0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + 0.0 * v24 + 0.0 * v27 + -0.0 * v28
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.3242181718e-14 * 1 + 0.0 * v0 + 0.0160229404895 * v1 + 0.0 * v2 + 0.0592792029024 * v4 + 0.0 * v5 + 0.190068078225 * v6 + 0.0 * v7 + 0.3194705632 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0831818059159 * v13 + -0.0709561686735 * v14 + 0.0 * v16 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.040834941755 * v26 + 0.204021547301 * v27 + 0.0 * v28
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.14739516763e-14 * 1 + 0.0 * v0 + 0.573121983047 * v1 + 0.0 * v2 + 0.0822853286876 * v4 + 0.0 * v5 + 0.10748486132 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.00280256482812 * v11 + 0.0 * v12 + 0.0453098474664 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0978701810774 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.94099983611e-14 * 1 + 0.0725478845557 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.380426145591 * v15 + 0.242334244294 * v17 + -0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.235454177569 * v26 + 0.0 * v27 + -0.0 * v28
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.02463512701e-14 * 1 + 0.0 * v0 + 0.16388070415 * v1 + 0.12483388325 * v4 + 0.0597125765641 * v6 + 0.0 * v7 + 0.275818845466 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.110945489421 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0106868146362 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0942141358538 * v26 + 0.113052222799 * v27 + 0.0 * v28
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.45654523745e-14 * 1 + 0.108475560887 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.106934717796 * v8 + 0.0 * v9 + 0.0 * v10 + 0.126176622987 * v11 + 0.0 * v12 + 0.0455203342791 * v13 + 0.0 * v14 + 0.228065786245 * v15 + 0.1786993018 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0264513284619 * v26 + 0.153604861401 * v27 + 0.0 * v28
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.74234737034e-15 * 1 + 0.0 * v0 + 0.0399796387549 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0150100552991 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.444541455655 * v15 + 0.0 * v16 + 0.0187920699955 * v17 + 0.0599975521319 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.3428827906 * v27 + 0.0 * v28
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.68470170283e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0241932267807 * v4 + 0.0 * v5 + 0.209708866081 * v8 + 0.0829134034971 * v9 + 0.0444507775588 * v10 + 0.0 * v11 + 0.0 * v12 + 0.149205657775 * v13 + 0.0381500837321 * v15 + 0.0133790886019 * v16 + 0.0 * v17 + 0.0 * v18 + 0.137921806047 * v20 + 0.0 * v21 + 0.0716316638923 * v22 + 0.0 * v23 + 0.0 * v24 + 0.165853563493 * v27 + 0.0246204958566 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.31445533397e-13 * 1 + -0.0 * v0 + 0.175929742657 * v1 + 0.0 * v2 + 0.0 * v4 + 0.091009836388 * v5 + 0.0294051434213 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + -0.0284058303056 * v14 + 0.0251816997568 * v15 + -0.0 * v16 + 0.409246026253 * v17 + -0.0 * v18 + 0.0 * v20 + 0.127459117462 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.105741531413 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.75274674912e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0824517130497 * v13 + 0.161035608257 * v15 + -0.0 * v16 + 0.413885343344 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.24322401362 * v27 + -0.0 * v28
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.51080974426e-14 * 1 + 0.0 * v0 + 0.0421450629512 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0431997592525 * v7 + 0.0 * v8 + 0.0 * v9 + 0.137199088683 * v12 + 0.0154370429632 * v13 + 0.201322906156 * v15 + 0.12463048128 * v16 + 0.339504335247 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.48811936904e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0446347200074 * v4 + 0.0 * v5 + 0.30843163174 * v6 + 0.0 * v7 + 0.237269263214 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.100601003746 * v13 + 0.073131487284 * v15 + 0.0 * v16 + 0.106845545024 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0647497139102 * v27 + 0.0 * v28
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.90000298149e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.244158393242 * v12 + 0.101551874665 * v13 + 0.183068202871 * v15 + 0.0 * v16 + 0.0796189951217 * v17 + 0.122270410087 * v18 + 0.0 * v19 + 0.141972561253 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0605635104043 * v27 + 0.0 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.07589581547e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.162632491653 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.178059336374 * v15 + 0.0 * v16 + 0.168696335911 * v17 + 0.0403669626771 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.274161643611 * v25 + 0.0566979303239 * v27 + 0.0 * v28
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06640526703e-13 * 1 + 0.00306799812609 * v0 + 0.321799330347 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.348510142796 * v15 + 0.0 * v16 + 0.0738927658679 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.171739826307 * v27 + 0.0 * v28
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.10183670602e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.00276633012053 * v6 + 0.0 * v7 + 0.335870089462 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0114771914023 * v13 + 0.119929924266 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v25 + 0.32683734758 * v26 + 0.133834139845 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906138739e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0616600107297 * v13 + 0.190515509909 * v15 + 0.0 * v16 + 0.617885267888 * v17 + 0.0 * v18 + 0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94609283972e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + 0.0 * v4 + -0.0 * v7 + 0.258766356993 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + 0.19721257856 * v13 + 0.376804507555 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v18 + -0.0 * v19 + -0.0 * v20 + -0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.8720581678e-15 * 1 + 0.0 * v0 + 0.0800068443758 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.00930810005292 * v6 + 0.0 * v7 + 0.143308686791 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0269979042885 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.463979307538 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.225094244414 * v27 + 0.0 * v28
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52045204374e-13 * 1 + 0.0 * v0 + 0.194633663798 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0630076711539 * v5 + 0.0 * v6 + 0.0381884434942 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.177624015866 * v13 + 0.0 * v15 + 0.0 * v16 + 0.145661090842 * v17 + 0.120994406749 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0494239361194 * v23 + 0.0 * v25 + 0.0711099253169 * v26 + 0.0826184028939 * v27 + 0.0 * v28
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.58976305678e-14 * 1 + 0.260828865452 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0286140904722 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v9 + 0.116555110796 * v12 + 0.327635166492 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0381174990489 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.106754218331 * v26 + 0.0619320144367 * v27 + 0.0 * v28
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58209281043e-14 * 1 + 0.317333110428 * v1 + 0.00631275006802 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.099525432456 * v9 + 0.0 * v11 + 0.0 * v12 + 0.229983286097 * v13 + -0.0 * v14 + 0.195291644225 * v15 + 0.0986725909078 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.20393761119e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.032109115206 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.555050714372 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v24 + 0.156781750004 * v26 + 0.167988597536 * v27 + 0.0 * v28
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.14269853355e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.139466689129 * v6 + 0.0 * v7 + 0.0898396793361 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + 0.380339642002 * v13 + 0.0 * v14 + 0.197100833708 * v15 + -0.0 * v16 + 0.0168738435325 * v17 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.229829351978 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.18378542488e-13 * 1 + 0.055926892723 * v0 + 0.159317424503 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0526013636538 * v5 + 0.00293054501798 * v6 + 0.0 * v7 + 0.000427279555693 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.11226613237 * v15 + 0.0638233756115 * v16 + 0.450347214661 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + -0.0 * v28
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002226139e-13 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0940826020101 * v12 + 0.0241699835466 * v13 + 0.0 * v14 + 0.343009208452 * v15 + 0.0 * v16 + 0.262860414935 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + 0.158204033114 * v27 + 0.0 * v28
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25339991606e-14 * 1 + 0.138285504942 * v1 + 0.0 * v4 + 0.0438513569417 * v5 + 0.21089453605 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.019734701787 * v13 + 0.108049243494 * v14 + 0.0 * v15 + 0.207425438723 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0377160081296 * v25 + 0.0 * v26 + 0.229582496311 * v27 + -0.0 * v28
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37660565455e-13 * 1 + -0.0 * v0 + 0.0468829519295 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.0 * v6 + 0.157689063553 * v7 + 0.112837972868 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.110289346612 * v15 + 0.0 * v16 + 0.101959457496 * v17 + 0.408768176552 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33930304227e-13 * 1 + 0.0 * v0 + 0.253236249283 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.11169081523 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + -0.0 * v12 + 0.0917329973365 * v13 + 0.0 * v14 + 0.440362138923 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.00572199592922 * v21 + 0.0 * v23 + -0.0 * v24 + 0.00326587617802 * v27
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97647417735e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.188451068647 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.222950372243 * v13 + 0.0 * v15 + 0.0 * v16 + 0.224344913764 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.22657442335 * v27 + 0.0 * v28
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53310442498e-13 * 1 + 0.0 * v0 + 0.105104521783 * v1 + -0.0 * v5 + 0.25428038182 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v11 + -0.0320007725053 * v12 + 0.203161990129 * v13 + -0.0 * v14 + 0.236926518274 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + -0.0830809577248 * v26 + 0.00405409847373 * v27 + -0.0 * v28
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.02939317173e-14 * 1 + 0.0 * v0 + 0.00513801247634 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.209592092277 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0780843390562 * v12 + 0.0 * v14 + 0.56992956573 * v15 + 0.0 * v16 + 0.00821693084876 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0726865621393 * v27 + 0.0 * v28
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.2020386472e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0122539595921 * v12 + 0.0 * v13 + 0.152730906304 * v15 + 0.0 * v16 + 0.391835032765 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.300799732199 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
