from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58447128377e-14 * 1 + 0.0 * v0 + 0.0909680248465 * v1 + 0.0949538852278 * v5 + 0.0394083035583 * v7 + 0.205106599937 * v11 + 0.252635328473 * v15 + 0.153108306383 * v16 + 0.0461236015568 * v17 + 0.0172233628287 * v21 + 0.123294117515 * v22 + 0.0 * v24
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.64248733286e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.237524209637 * v5 + 0.209732796031 * v7 + 0.171706368634 * v10 + -0.0 * v15 + 0.0113141923714 * v16 + 0.0972207948039 * v17 + 0.0 * v20 + 0.182825474113 * v22 + 0.0621279052665 * v23
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.98393552637e-14 * 1 + 0.121104159942 * v1 + 0.0270735589147 * v3 + 0.199099549406 * v5 + 0.0 * v7 + 0.153074509882 * v15 + 0.151555031154 * v17 + 0.0 * v18 + 0.0333588456233 * v19 + 0.0 * v20 + 0.0 * v27 + 0.258512360806 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23471116625e-13 * 1 + 0.0 * v0 + 0.0511938323571 * v1 + 0.0275208694692 * v3 + 0.214733923334 * v4 + 0.137758036341 * v7 + 0.0 * v8 + 0.0103014595228 * v15 + 0.128227110015 * v17 + 0.169463656061 * v18 + 0.0840579613362 * v21 + 0.108295428508 * v23
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.31185703483e-14 * 1 + 0.0 * v0 + 0.0759645308672 * v3 + 0.0416783318961 * v7 + 0.0 * v8 + 0.0 * v12 + 0.140630316518 * v18 + 0.201043522486 * v20 + 0.30201852849 * v21 + 0.187444236199 * v22 + 0.0 * v24 + 0.0027411801295 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.72643309789e-14 * 1 + 0.410099634315 * v1 + 0.0 * v4 + 0.237750790368 * v5 + 0.00574876220948 * v6 + 0.0 * v11 + 0.0 * v15 + 0.129153104122 * v17 + 0.0249523720697 * v18 + 0.0 * v20 + 0.105175216403 * v22 + 0.0 * v27
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28220983294e-13 * 1 + 0.124231442123 * v1 + 0.261488804873 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.257528907872 * v21 + 0.309999833708 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.5351554934e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0719692253955 * v13 + 0.0 * v15 + 0.0 * v17 + 0.388182493561 * v20 + 0.242639297343 * v21 + 0.0643070238499 * v22 + 0.102673772852 * v27 + 0.0374733037782 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39760845336e-14 * 1 + 0.0 * v1 + 0.0 * v5 + 0.0 * v7 + 0.0 * v9 + 0.36393085691 * v11 + 0.0 * v12 + 0.0 * v14 + 0.247847725455 * v21 + 0.226186960382 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.76603318612e-14 * 1 + 0.0946834538998 * v3 + 0.0 * v4 + 0.405798917156 * v5 + 0.0556450346822 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0580059675596 * v16 + 0.0 * v17 + 0.0 * v18 + 0.024404350115 * v20 + 0.307297571274 * v21
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36630906276e-13 * 1 + 0.121217379311 * v1 + 0.095324642135 * v3 + 9.15253951331e-05 * v4 + 0.198303223492 * v5 + 0.223176019189 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v20 + 0.106396916151 * v21 + 0.136622646658 * v22 + 0.0662387955322 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.2911695896e-14 * 1 + 0.360022343218 * v1 + 0.0508727731177 * v4 + 0.0981060344273 * v5 + 0.0 * v8 + 0.0418536432549 * v9 + 0.0 * v12 + 0.0219739996071 * v13 + 0.175265659968 * v20 + 0.165337946218 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.10730988187e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.129359137212 * v3 + 0.0939560773303 * v4 + 0.331247187972 * v5 + 0.243828190652 * v7 + 0.0 * v15 + 0.0 * v17 + 0.0926001102097 * v20 + 0.00614707765693 * v21 + 0.0389100276628 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.6970751227e-14 * 1 + 0.0 * v1 + 0.0180688863917 * v4 + 0.441473867839 * v5 + 0.253275996662 * v15 + 9.97979383639e-05 * v17 + 0.0 * v19 + 0.105429955612 * v20 + 0.0820602184347 * v21 + 0.150250312864 * v22 + 0.0 * v25 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.16717389226e-14 * 1 + 0.202905819018 * v1 + 0.175033730723 * v5 + -0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0490140744719 * v15 + 0.0 * v18 + 0.364050205179 * v21 + 0.0752682990153 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.66791048394e-14 * 1 + 0.264534228743 * v2 + 0.172670673396 * v5 + 0.0 * v9 + 0.0619879037043 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v16 + 0.0112506926991 * v19 + 0.0 * v20 + 0.270168093384 * v25 + 0.151575289211 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.80384825949e-14 * 1 + 0.0640688146136 * v3 + 0.0122269939802 * v4 + 0.121101859383 * v5 + 0.189563979323 * v7 + 0.189400442977 * v11 + 0.00637820142174 * v16 + 0.0 * v18 + 0.170924123412 * v21 + 0.0537128557817 * v22 + 0.0 * v23 + 0.155241075706 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83093262067e-13 * 1 + 0.208687376998 * v1 + 0.0559349223874 * v3 + 0.297730434697 * v5 + 0.168076697151 * v7 + 0.0 * v18 + 0.0 * v19 + 0.125529228807 * v21 + 0.0464145524311 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.217124616e-13 * 1 + 0.369341096175 * v1 + 0.220847207091 * v5 + 0.108847011634 * v7 + 0.0 * v9 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185839968202 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.23139418565e-14 * 1 + 0.0 * v1 + 0.253093287614 * v5 + 0.0 * v7 + 0.269360715746 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.164458351558 * v20 + 0.235321947466 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.73623053442e-13 * 1 + 0.0946494884675 * v1 + 0.14468812621 * v3 + 0.0 * v4 + 0.0 * v8 + 0.173322003655 * v11 + 0.0630306584379 * v16 + 0.0282568777072 * v17 + 0.195988980377 * v20 + 0.175060871969 * v22 + 0.0 * v25 + 0.136602759936 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.6959370549e-13 * 1 + 0.0 * v4 + 0.139720178284 * v5 + 0.0911334143735 * v9 + 0.0 * v13 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.269312317616 * v21 + 0.0808222412349 * v22 + 0.364977796738 * v25 + 0.0529239222642 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30151308488e-15 * 1 + 0.0263599470307 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100850568363 * v5 + 0.0 * v7 + 0.17593805529 * v9 + 0.37801447895 * v11 + 0.0216841506088 * v17 + 0.0 * v20 + 0.204060376958 * v21 + 0.0691699868043 * v23
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.09775685155e-13 * 1 + 0.0 * v4 + 0.227291830398 * v5 + 0.0127557914264 * v8 + 0.0185986842167 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0762333560634 * v15 + 0.0593914497626 * v17 + 0.0629306859476 * v20 + 0.21248971845 * v22 + 0.290211808282 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.57073633711e-13 * 1 + 0.139608809881 * v1 + 0.0 * v3 + 0.0 * v7 + 0.0404898323824 * v10 + 0.170936804937 * v11 + 0.0634668134917 * v15 + 0.238019227317 * v17 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.229820503106 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.833058822e-14 * 1 + 0.0555399223414 * v1 + 0.0 * v4 + 0.306512247102 * v5 + 0.16223236798 * v7 + 0.159080616479 * v9 + 0.0 * v13 + 0.0 * v16 + 0.0 * v17 + 0.263554471025 * v21 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.09279748421e-13 * 1 + 0.00749197035898 * v1 + 0.0 * v4 + 0.507980891891 * v5 + 0.065866057369 * v7 + 0.0 * v8 + 0.0339421832201 * v11 + 0.0 * v18 + 0.272626021798 * v21 + 0.0 * v23 + 0.000324868508891 * v25 + 0.0 * v27
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.80790331776e-14 * 1 + 0.264531944361 * v1 + 0.0 * v2 + 0.12915203452 * v3 + 0.354923299925 * v5 + 0.0703486100212 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0069566017975 * v9 + 0.0 * v18 + 0.0 * v19 + 0.0854914172875 * v25
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.50030266451e-14 * 1 + 0.231227717945 * v1 + 0.0 * v4 + 0.325879972425 * v5 + 0.0 * v8 + 0.0 * v12 + 0.024182920673 * v13 + 0.0 * v18 + 0.106330594676 * v21 + 0.272918987573 * v22 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.31960161498e-13 * 1 + 0.141196117466 * v1 + 0.1031802746 * v4 + 0.224725717615 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.0448479199905 * v15 + 0.0 * v17 + 0.0220302555644 * v20 + 0.25540142527 * v21 + 0.146458132917 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13941994535e-13 * 1 + 0.0569816426687 * v1 + 0.0 * v4 + 0.266604614874 * v5 + 0.0748804907497 * v7 + 0.0 * v9 + 0.108855460809 * v15 + 0.00255855746206 * v17 + 0.131262891669 * v19 + 0.240928114438 * v21 + 0.0867599582183 * v22 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.28051720803e-14 * 1 + 0.0 * v4 + 0.0239070225944 * v7 + 0.0 * v8 + 0.0 * v12 + 0.288908540421 * v13 + 0.0 * v18 + 0.277958105885 * v20 + 0.146850633647 * v21 + 0.125169033287 * v22 + 0.0202202780989 * v27 + 0.0303053395592 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47746142845e-14 * 1 + 0.157543445142 * v5 + 0.0 * v8 + 0.310302789244 * v9 + 0.113874212984 * v11 + 0.0 * v13 + 0.0 * v20 + 0.234484269055 * v21 + 0.0540615737777 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0858111365497 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.9633744241e-13 * 1 + 0.171342273858 * v3 + 0.212747257375 * v5 + -0.447877716495 * v6 + 0.0818307512462 * v7 + 0.0 * v9 + 0.0 * v11 + -0.0 * v14 + 0.0 * v20 + 0.124956663675 * v22 + 0.0 * v25 + 0.144062013059 * v26
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25470889876e-13 * 1 + 0.0858003460041 * v4 + 0.559134059634 * v5 + 0.0 * v8 + -0.193625031595 * v10 + 0.0 * v12 + 0.0 * v13 + 0.159085115505 * v14 + 0.0 * v16 + 0.0 * v17 + 0.0377678043547 * v20 + 0.0 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.87802453774e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.260372180532 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v15 + 0.554076517225 * v17 + 0.0 * v21 + 0.0799532383386 * v23 + 0.0 * v27
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.81610730196e-14 * 1 + 0.274514276048 * v1 + 0.0 * v4 + 0.25503865135 * v5 + 0.0 * v8 + 0.0 * v12 + 0.106476776388 * v13 + 0.0 * v20 + 0.126444369023 * v21 + 0.144061363694 * v22 + 0.0 * v23 + 0.0 * v27
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.58494832975e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.360942302866 * v5 + 0.189843143117 * v9 + 0.0 * v12 + 0.0 * v17 + 0.0770337846616 * v21 + 0.0 * v22 + 0.088473162658 * v24 + 0.20193797552 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.23352138722e-14 * 1 + 0.142381921162 * v1 + 0.239555376127 * v5 + 0.183411972081 * v9 + 0.098201723632 * v11 + 0.0 * v13 + 0.136466601492 * v15 + 0.0 * v17 + 0.0 * v20 + 0.0629542639371 * v22 + 0.0 * v27 + 0.079191164522 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.85974543838e-14 * 1 + 0.125012806598 * v3 + 0.049339761772 * v4 + 0.104712059916 * v5 + 0.0 * v9 + 0.038944086132 * v13 + 0.305217760015 * v15 + 0.0842810622179 * v17 + 0.0 * v21 + 0.147110855152 * v22 + 0.0 * v27 + 0.089330997553 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
