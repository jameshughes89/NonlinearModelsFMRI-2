from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.02701889625e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0301787970119 * v3 + 0.069744867139 * v4 + 0.0282085123772 * v9 + 0.0 * v11 + 0.0 * v12 + 0.130742164195 * v13 + 0.0 * v14 + 0.171275041323 * v15 + 0.0739972436219 * v16 + 0.357053992458 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0799679337824 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.23204389115e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.170881657931 * v5 + 0.120935642954 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.226647782418 * v17 + 0.0 * v18 + 0.0808453202635 * v20 + 0.146408527438 * v21 + 0.112578686693 * v22 + 0.0 * v23 + 0.100369805273 * v24 + 0.0317821731962 * v25 + 0.0705663196988 * v28
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17470272022e-13 * 1 + -0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.186185695782 * v5 + -0.0 * v8 + 0.0625300166373 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.152964725307 * v15 + 0.224851472022 * v16 + 0.0 * v18 + 0.222459857155 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.000214287411506 * v25 + 0.0 * v28
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43309358619e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0206761418805 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.249543440077 * v17 + 0.0934524827705 * v18 + 0.165711375457 * v20 + 0.0 * v21 + 0.363190457382 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + -0.0 * v28
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26781176513e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0523453252651 * v4 + 0.0960089650257 * v5 + 0.00889639571878 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v17 + 0.0 * v18 + 0.145060125089 * v20 + 0.118382467654 * v21 + 0.0 * v22 + 0.0 * v24 + 0.253350559697 * v25 + 0.0 * v26 + 0.239641503705 * v27 + 0.019180444841 * v28
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.00246596e-14 * 1 + 0.0 * v0 + 0.00745222689954 * v1 + 0.0 * v4 + 0.146565068704 * v5 + 0.0 * v7 + -0.0 * v8 + 0.125632048366 * v10 + 0.0 * v11 + -0.0 * v12 + 0.06581957258 * v15 + 0.0 * v16 + 0.243231600237 * v17 + 0.0305076406777 * v18 + 0.0 * v20 + 0.0 * v21 + 0.078594625488 * v22 + 0.246163299181 * v23 + 0.00777145405047 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65685621326e-13 * 1 + 0.182278189061 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0668209746496 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0586052935993 * v15 + 0.0 * v17 + 0.0 * v18 + 0.149861291449 * v20 + 0.302589496786 * v21 + 0.161635814972 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90739057607e-14 * 1 + 0.0420794484775 * v1 + 0.429347719219 * v2 + 0.0 * v3 + 0.0 * v6 + 0.0423133964166 * v7 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.0141290342019 * v17 + 0.0 * v18 + 0.0 * v19 + 0.287175097592 * v20 + 0.112490346794 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705156746e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.216457104277 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0783018312524 * v9 + 0.0859848607371 * v11 + 0.0 * v12 + 0.0 * v13 + 0.155463302089 * v15 + 0.0 * v16 + 0.0769249645467 * v17 + 0.0 * v18 + 0.0487160634616 * v20 + 0.204819970092 * v21 + 0.0762332176232 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v28
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27640228465e-13 * 1 + 0.0 * v0 + 0.00217169057557 * v1 + 0.0 * v2 + 0.0 * v3 + 0.221921881834 * v4 + 0.0 * v5 + 0.0736723580641 * v7 + 0.041389788259 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0141699150815 * v16 + 0.0 * v17 + 0.0 * v18 + 0.046880722945 * v20 + 0.325252558964 * v21 + 0.168722461913 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0402708509293 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.39600491555e-14 * 1 + 0.0282318380078 * v0 + 0.0914005501602 * v1 + 0.0527336114629 * v2 + 0.0 * v3 + 0.0 * v4 + 0.146392314914 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.069983320866 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0440351296669 * v19 + 0.0 * v20 + 0.230447335281 * v21 + 0.226321875165 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0379824993121 * v28
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21423387005e-13 * 1 + 0.12951833899 * v1 + 0.0139360964037 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0820335612234 * v7 + 0.0 * v9 + 0.0890404985856 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0232273417346 * v15 + 0.0 * v16 + 0.0386238759034 * v17 + 0.0882558248085 * v19 + 0.183480673933 * v20 + 0.137088043321 * v21 + 0.0805497140765 * v22 + 0.05497244091 * v23 + 0.0720330630464 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.53037125578e-15 * 1 + 0.0 * v2 + 0.133646849762 * v3 + 0.0 * v4 + -0.0 * v5 + -0.0 * v9 + 0.0246111276672 * v10 + -0.0 * v11 + -0.0 * v13 + -0.0 * v14 + -0.0 * v15 + -0.0 * v16 + 0.535511688185 * v17 + 0.0 * v19 + 0.207987710744 * v20 + -0.137444896708 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v28
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19767717769e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.00764389213177 * v4 + 0.332648802628 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + 0.288533562959 * v15 + 0.0 * v17 + 0.0 * v18 + 0.135841153217 * v20 + 0.0393043207162 * v21 + 0.0530095447148 * v22 + 0.0 * v24 + 0.106735933166 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14149602755e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v4 + 0.106838736198 * v5 + 0.0 * v8 + 0.22665809037 * v9 + 0.0 * v11 + 0.0 * v12 + 0.35958904168 * v15 + 0.0 * v16 + 0.0992958711136 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0514484736109 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.46844611896e-13 * 1 + 0.0990741538634 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.097414244264 * v7 + 0.0697120208888 * v9 + 0.107052169671 * v10 + 0.0391157539027 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v16 + 0.0342775882953 * v20 + 0.105887512514 * v21 + 0.16632480536 * v22 + 0.060403399552 * v23 + 0.17902688481 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0747695449032 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97317498131e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + -0.0 * v13 + 0.0932151478595 * v15 + 0.305862333562 * v16 + 0.0 * v17 + 0.0348962067602 * v19 + 0.275719308308 * v21 + 0.179508112014 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v26 + 0.123033765429 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35544391707e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0402307970392 * v5 + 0.108333008643 * v7 + 0.0 * v8 + 0.27587828648 * v9 + 0.0 * v11 + 0.0282276638034 * v12 + 0.119808964915 * v15 + 0.00629977921968 * v17 + 0.0 * v18 + 0.213412082474 * v21 + 0.0 * v22 + 0.0637028445642 * v23 + 0.0347135387097 * v24 + 0.063981002061 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75897710732e-14 * 1 + 0.0 * v0 + 0.0755395671285 * v1 + 0.0 * v4 + 0.145939441234 * v5 + 0.164242302308 * v6 + 0.0 * v7 + 0.0 * v8 + 0.183600898079 * v11 + 0.0 * v14 + 0.0 * v16 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.147877377696 * v21 + 0.0 * v22 + 0.195372264554 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.00821099833884 * v28
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33978691557e-14 * 1 + 0.0350341375302 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0751534407349 * v5 + 0.0 * v7 + 0.0 * v8 + 0.110429328098 * v9 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0794556963275 * v20 + 0.365238909644 * v21 + 0.120713663513 * v22 + 0.13179625528 * v25 + 0.0 * v27 + 0.0170566873973 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18400059143e-14 * 1 + 0.0 * v0 + 0.0663047689215 * v2 + 0.0 * v3 + 0.0 * v4 + 0.102779728936 * v5 + 0.0256696150961 * v9 + 0.0877764876082 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.169349602451 * v17 + 0.0 * v19 + 0.130185544138 * v20 + 0.0121059639927 * v21 + 0.0511645357193 * v22 + 0.0 * v23 + 0.0130297553226 * v24 + 0.0417734749845 * v25 + 0.300231222252 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49133469297e-14 * 1 + 0.122953375484 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0838423798382 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0917216107252 * v9 + 0.0 * v13 + 0.148504078333 * v15 + 0.0 * v17 + 0.0 * v18 + 0.137835578391 * v19 + 0.288345925862 * v20 + 0.0549643056839 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25862587911e-13 * 1 + 0.0590696665449 * v1 + 0.104073519146 * v4 + 0.0961276644913 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0437764871439 * v9 + 0.0 * v10 + 0.189280966423 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v18 + 0.16612596798 * v20 + 0.170029002887 * v21 + 0.150429466071 * v22 + 0.010609886323 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.2177275166e-15 * 1 + 0.0 * v0 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0632569732191 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0189702183987 * v11 + -0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.253210181271 * v17 + 0.0 * v19 + 0.022896030824 * v20 + 0.0 * v21 + 0.562939026476 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.59922172419e-14 * 1 + 0.0 * v0 + 0.219927389097 * v1 + 0.0 * v3 + 0.01894394327 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0325672283388 * v15 + 0.0 * v16 + 0.226885795505 * v17 + 0.0 * v18 + 0.0 * v19 + 0.00946900611628 * v20 + 0.01843878002 * v21 + 0.105470105972 * v22 + 0.213704797828 * v23 + 0.043529993025 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.05064777395e-13 * 1 + 0.0 * v0 + 0.0367442331887 * v1 + 0.0 * v2 + 0.0 * v4 + 0.329071028465 * v5 + 0.168709926997 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0710269280859 * v20 + 0.192148529173 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.00749991868797 * v25 + 0.0 * v27 + 0.131612524919 * v28
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49508674579e-13 * 1 + 0.0 * v0 + 0.0330142826437 * v1 + 0.0 * v3 + 0.0101490225809 * v4 + 0.0 * v5 + 0.0 * v8 + 0.253211726515 * v9 + 0.048928029198 * v11 + 0.0 * v12 + 0.0 * v13 + 0.025366037058 * v15 + 0.0384692906154 * v16 + 0.0508377482547 * v17 + 0.0 * v19 + 0.0 * v20 + 0.221299082163 * v21 + 0.0408799452058 * v22 + 0.0386394912162 * v23 + 0.0 * v25 + 0.269586602098 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85701735532e-14 * 1 + 0.0329631406661 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00197768370967 * v4 + 0.247591382127 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.130084699884 * v20 + 0.23718768062 * v21 + 0.0 * v22 + 0.0 * v24 + 0.185546389719 * v25 + 0.0 * v26 + 0.0961804093596 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.42311770691e-13 * 1 + 0.117978585832 * v1 + 0.0 * v2 + 0.0106472239553 * v3 + 0.123286125969 * v4 + 0.156320842306 * v5 + 0.0 * v7 + 0.0 * v8 + 0.125917418778 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0297337348694 * v13 + 0.00835589429886 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.262392986436 * v21 + 0.0704114638232 * v22 + 0.0 * v25 + 0.0501626230142 * v27 + 0.0 * v28
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11408754354e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0259450257778 * v9 + 0.24353354817 * v11 + 0.0 * v12 + 0.0882739441015 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0204268865818 * v19 + 0.235187677215 * v21 + 0.172828582758 * v22 + 0.0 * v23 + 0.0 * v25 + 0.141553708631 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.30628553497e-13 * 1 + 0.121592406646 * v0 + 0.0 * v1 + 0.0727918693132 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0516005524155 * v9 + 0.00219461075978 * v11 + 0.0 * v12 + 0.0415004600955 * v13 + 0.0119668687461 * v15 + 0.0524208243961 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0222468386197 * v20 + 0.415293072636 * v21 + 0.143300202858 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.39816658099e-13 * 1 + 0.0 * v1 + 0.049576963662 * v2 + 0.0 * v3 + 0.0428151865686 * v4 + 0.25690626889 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0162507830374 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.105620076735 * v20 + 0.311089304551 * v21 + 0.150393981138 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68078131908e-14 * 1 + 0.0600757024279 * v1 + 0.0194123338927 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.21408789873 * v9 + 0.0351595549345 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0263632679692 * v16 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.237130155716 * v21 + 0.226116077691 * v22 + 0.136069563561 * v25 + 0.0 * v28
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16646762925e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + -0.262903739163 * v6 + 0.0 * v7 + -0.0 * v10 + -0.0 * v13 + 0.0 * v14 + 0.0200697765995 * v15 + -0.0894968335896 * v16 + 0.0 * v17 + -0.0 * v18 + 0.247302869388 * v20 + 0.0595823839862 * v21 + 0.300935771126 * v22 + -0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.84897186765e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.240099881308 * v5 + 0.0 * v6 + 0.0980772035236 * v7 + 0.123483596043 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.159698675472 * v20 + 0.0334846944721 * v21 + 0.292482947269 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.1638558773e-13 * 1 + 0.309142890355 * v0 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.372446343117 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v14 + 0.0 * v16 + 0.137103874107 * v17 + -0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + 0.197217118268 * v22 + 0.0 * v23 + 0.0 * v24 + 0.17616633287 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.73731519567e-14 * 1 + 0.030440259474 * v0 + 0.0136408918091 * v1 + 0.0 * v2 + 0.112839450659 * v3 + 0.0489793688064 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0240521048031 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0542021223512 * v16 + 0.0 * v17 + 0.0 * v18 + 0.164091613513 * v20 + 0.377011408595 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0257201571397 * v25 + 0.170532906543 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.72186709817e-14 * 1 + 0.132092363034 * v1 + 0.0 * v3 + 0.0 * v4 + 0.299911430977 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0354114836042 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0433513426395 * v16 + 0.0 * v17 + 0.0932972962748 * v19 + 0.0 * v20 + 0.0549737233337 * v21 + 0.208815272341 * v22 + 0.0189841904524 * v25 + 0.030655107186 * v27 + 0.0505095316385 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12748381379e-13 * 1 + 0.00575011322871 * v0 + 0.129489825793 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.181731657864 * v9 + 0.00621074590425 * v11 + 0.0 * v13 + 0.246445837984 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0593708402951 * v20 + 0.219860367134 * v21 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.06680548719 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25239682465e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.234633535652 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.159352720186 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.00370432758884 * v16 + 0.0 * v17 + 0.0537130037431 * v19 + 0.0 * v20 + 0.287639286531 * v21 + 0.121321128119 * v22 + 0.0886924095515 * v26 + 0.0 * v27 + 0.0451381979715 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
