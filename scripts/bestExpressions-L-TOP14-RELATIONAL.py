from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0943479984481 * 1 + 0.186770770651 * v0 + 0.0210641061797 * v1 + 0.0753103616033 * v4 + 0.351641124357 * v7 + 0.302448703574 * v8 + -0.00502910487086 * v15 + 0.350341402404 * v16 + -0.0685614773879 * v17 + -0.0863179607724 * v18 + -0.129863510479 * v20 + -0.126074570489 * v21 + 0.108339638852 * v23
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.145445754387 * 1 + 0.104691308824 * v1 + -0.0162070504881 * v5 + 0.0810907022366 * v7 + 0.0771464652838 * v8 + 0.238699628301 * v12 + 0.602561835627 * v13 + 0.194726227135 * v15 + -0.0172934916569 * v17 + -0.290344307789 * v18 + -0.269363862605 * v20 + 0.0203008830973 * v21 + 0.289598867651 * v23
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.333377039545 * 1 + 0.258533960727 * v0 + 0.162503259797 * v1 + 0.0391620862266 * v8 + 0.17312281088 * v11 + -0.073962755731 * v13 + -0.16639178943 * v15 + 0.51980617515 * v16 + 0.243813143988 * v17 + 0.0920681490188 * v18 + 0.361729171732 * v21 + -0.0901095254129 * v24 + -0.275021174725 * v27
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.14730621946 * 1 + 0.102535661513 * v1 + -0.206555881571 * v3 + 0.00475922209456 * v4 + -0.00468680774243 * v7 + 0.464418237017 * v11 + -0.0472766835563 * v13 + 0.393708670283 * v15 + -0.301545951225 * v17 + 0.0516822435438 * v19 + 0.00700139074834 * v21 + 0.0932314983034 * v22 + 0.301917005206 * v24
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.333446260311 * 1 + 0.00232608382872 * v1 + -0.41594609512 * v2 + 0.36799043543 * v4 + 0.271687584454 * v8 + 0.419436072575 * v11 + -0.109590677538 * v12 + 0.181065487985 * v15 + 0.00859636141056 * v17 + -0.426068679642 * v18 + 0.118242476393 * v20 + 0.0568767334785 * v21 + 0.202280608778 * v25
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.135321544449 * 1 + 0.191245632932 * v3 + -0.175147741445 * v4 + 0.0252193644531 * v8 + 0.15753857968 * v9 + 0.217389479193 * v12 + 0.523537325333 * v13 + 0.506517567693 * v15 + -0.217444189959 * v17 + 0.17341167257 * v20 + -0.136677723711 * v22 + -0.00305800657758 * v23 + -0.394853663219 * v27
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00641415741792 * 1 + 0.0603239438091 * v0 + -0.130262219597 * v1 + -0.0379752676685 * v2 + 0.168076496987 * v4 + 0.0297113610862 * v8 + 0.428970844155 * v12 + 0.305214059433 * v13 + 0.394646324091 * v15 + -0.042331893168 * v17 + -0.0335671370138 * v20 + 0.0538420228262 * v21 + -0.089610718696 * v27
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.00221495420792 * 1 + 0.205695433384 * v5 + -0.317748492877 * v6 + 0.121153156906 * v8 + 0.018097287472 * v11 + 0.631809302873 * v12 + 0.100092737422 * v13 + -0.0124597920042 * v15 + 0.610639265872 * v16 + 0.235757603987 * v17 + -0.107974393166 * v18 + -0.229926429357 * v21 + -0.266612265661 * v27
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.105983563456 * 1 + 0.0896665410376 * v1 + 0.0253813924566 * v4 + 0.461366626772 * v5 + -0.200137352378 * v6 + 0.546925827151 * v7 + -0.025001822804 * v8 + 0.101420560507 * v9 + -0.208718660753 * v13 + 0.0720200865542 * v18 + -0.133757194685 * v21 + -0.0187617650203 * v23 + 0.255468605731 * v25
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.717764919503 * 1 + 0.130961836546 * v1 + 0.0553384670931 * v2 + 0.255420075342 * v4 + -0.0853974772996 * v6 + -0.516023678645 * v7 + -0.498756923989 * v8 + 0.231676123707 * v9 + 0.0654385368071 * v12 + 0.312359894983 * v14 + -0.235148880181 * v18 + 0.124113074022 * v23 + 0.459010601717 * v26
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0752644923227 * 1 + -0.00280718772756 * v1 + 0.230769438085 * v4 + -0.0355646808545 * v5 + -0.292774986158 * v7 + 0.153657223994 * v8 + 0.548904550802 * v13 + 0.233845013293 * v15 + 0.234551558564 * v17 + 0.0580517429438 * v20 + -0.192018922256 * v21 + 0.339819889399 * v22 + -0.418060185095 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.225637498083 * 1 + 0.155437894624 * v1 + 0.402660301534 * v4 + 0.0531823506677 * v8 + -0.00342552324334 * v9 + -0.102398350082 * v11 + 0.115585181356 * v12 + 0.117895662691 * v13 + -0.0425390261077 * v15 + -0.0222460223234 * v17 + -0.177589425328 * v18 + 0.0884646118762 * v20 + 0.243081422668 * v21
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.16439663677 * 1 + -0.0363594712308 * v1 + 0.127063346141 * v4 + 0.0578635010614 * v5 + -0.197758862599 * v6 + 0.0722990419827 * v7 + 0.114158677956 * v8 + 0.431513166774 * v13 + 0.195785974964 * v15 + -0.138483505264 * v17 + 0.034709782877 * v20 + 0.187330936958 * v21 + 0.133567315929 * v26
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.129598357611 * 1 + -0.00482918773138 * v1 + 0.0520703614523 * v4 + -0.0590485512746 * v6 + 0.0210152260022 * v7 + -0.141535044896 * v8 + 0.487861803263 * v11 + -0.0983035167269 * v15 + 0.148610886682 * v17 + -0.0812089611973 * v18 + 0.0276984968867 * v20 + 0.0445116136766 * v21 + 0.515076000211 * v22
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.570361662949 * 1 + -0.0518333104887 * v0 + 0.313987050961 * v5 + -0.0955744406931 * v8 + 0.294326435597 * v12 + 0.145350622607 * v13 + 0.140550104237 * v15 + 0.133384872314 * v16 + 0.0411391230324 * v20 + 0.0804234531929 * v22 + 0.357184048033 * v23 + 0.17831933716 * v24 + 0.0897115603737 * v27
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.197683171135 * 1 + -0.121801764699 * v1 + 0.225908995212 * v2 + 0.247827734884 * v4 + 0.0573796365871 * v5 + -0.0427531438391 * v8 + 0.12676311312 * v9 + 0.279491460603 * v13 + 0.243657774107 * v15 + 0.0312320356187 * v17 + 0.0993486216255 * v20 + 0.0455626505595 * v21 + -0.367816990941 * v27
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0836577178142 * 1 + -0.0455328154054 * v1 + -0.0219789518121 * v4 + 0.0871199594316 * v5 + -0.110124259245 * v8 + 0.202592537221 * v12 + 0.239490912923 * v13 + 0.450276500416 * v15 + -0.0644834828151 * v17 + -0.209556020733 * v18 + -0.00533937416157 * v20 + 0.118492204881 * v21 + 0.292984305649 * v22
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.091360913744 * 1 + -0.0702653499169 * v3 + 0.1681076005 * v5 + 0.0563319647749 * v7 + 0.286618586402 * v8 + 0.10704903561 * v12 + 0.129934902628 * v13 + 0.345364647868 * v15 + 0.150755687929 * v17 + -0.0227124172322 * v20 + -0.0406116727967 * v21 + 0.0785600810265 * v22 + -0.0981012373189 * v23
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0110111254482 * 1 + 0.0150923793913 * v1 + 0.0630854916495 * v2 + -0.0233120968187 * v4 + 0.308423834892 * v5 + 0.598286210844 * v6 + -0.420594934061 * v8 + 0.292612469784 * v12 + 0.163012926311 * v13 + 0.100335002913 * v15 + -0.218250989147 * v17 + 0.0147470307555 * v18 + 0.160850595135 * v22
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.095418512679 * 1 + 0.0568935970082 * v0 + 0.0842382694437 * v5 + 0.226404382204 * v8 + 0.29313084536 * v12 + 0.367414969466 * v13 + -0.296333335814 * v15 + 0.293383813697 * v16 + 0.131775434891 * v17 + 0.208254609492 * v18 + -0.117414205449 * v20 + 0.170721210429 * v21 + -0.222933719932 * v24
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.313107928856 * 1 + 0.00567741486801 * v4 + 0.10780246429 * v5 + 0.0796582419255 * v8 + 0.112848455642 * v11 + 0.351918324452 * v13 + 0.345034967194 * v15 + 0.0269107464024 * v17 + -0.166915984615 * v18 + -0.0550897091808 * v20 + 0.168903984918 * v21 + 0.229295762807 * v25 + -0.504776505608 * v27
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.376878074502 * 1 + 0.0161302521251 * v1 + -0.0514592175979 * v4 + 0.0524895932742 * v7 + -0.106054639125 * v8 + 0.155360755289 * v9 + 0.5040392514 * v13 + 0.0848419429879 * v15 + -0.079138415857 * v17 + -0.102663048625 * v18 + 0.019451472653 * v20 + 0.212277573234 * v23 + -0.0563663655267 * v27
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0390546725137 * 1 + -0.083748113963 * v1 + -0.125456196582 * v4 + 0.203053952351 * v5 + -0.00695195686635 * v6 + 0.631974425685 * v7 + 0.13268227797 * v8 + -0.143697350031 * v13 + 0.0256454772097 * v18 + 0.0588582132388 * v20 + -0.120033461481 * v21 + 0.230070525765 * v25 + 0.246572699593 * v26
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0988822748653 * 1 + -0.0357490092367 * v0 + -0.0608013436118 * v1 + -0.0802619904414 * v3 + 0.138429124971 * v8 + 0.26357185509 * v12 + 0.409963405162 * v13 + -0.0279013088817 * v15 + 0.719765890368 * v16 + -0.278340317929 * v17 + 0.0621498100331 * v18 + -0.136995869768 * v20 + -0.0934554848857 * v22
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.100787498771 * 1 + 0.187447650428 * v0 + -0.0801522946618 * v1 + 0.955675105557 * v4 + -0.14768496935 * v8 + -0.363849889714 * v9 + 0.490695819525 * v12 + 0.416826833765 * v13 + -0.145140093741 * v15 + 0.232632168412 * v16 + -0.373177399226 * v17 + -0.338928573863 * v18 + -0.0322497755938 * v21
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0704816791796 * 1 + -0.139190485302 * v1 + 0.0377058194201 * v4 + 0.0110096687369 * v5 + 0.0994903486803 * v6 + 0.339293657764 * v7 + 0.0276044971735 * v8 + 0.40155075225 * v15 + -0.0592625634181 * v17 + -0.029765456134 * v18 + 0.00189834188501 * v20 + -0.113173210758 * v21 + 0.411081448147 * v23
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.227972001622 * 1 + -0.355106713796 * v1 + 0.17302834408 * v4 + 0.110348268795 * v5 + -0.0568317525594 * v7 + -0.244557617849 * v8 + 0.508416647243 * v9 + 0.35743714976 * v13 + 0.205891883236 * v17 + -0.0771840369887 * v18 + -0.104077406072 * v20 + 0.130437846923 * v21 + 0.173416441634 * v23
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.459629778453 * 1 + 0.125653414192 * v1 + 0.156738228507 * v4 + -0.242109042718 * v5 + -0.0630934134174 * v6 + -0.421429057745 * v8 + 0.233102540765 * v9 + 0.335053889896 * v12 + -0.103461709284 * v13 + 0.107258474246 * v20 + 0.0526324088369 * v21 + 0.478743544074 * v26 + -0.0511391148238 * v27
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.323646714914 * 1 + 0.0768291879918 * v1 + -0.134445842718 * v4 + 0.226972941613 * v5 + 0.172057222781 * v8 + 0.0408059003307 * v9 + 0.304056706041 * v11 + 0.0903993949378 * v13 + 0.20873172082 * v15 + 0.0708444270787 * v17 + -0.0668484328157 * v20 + -0.107010781486 * v21 + -0.109972234302 * v22
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00398719729338 * 1 + 0.0254629434094 * v1 + 0.1195822371 * v2 + 0.0914295660181 * v4 + -0.0764522581361 * v6 + 0.00312242587688 * v8 + 0.243730709862 * v9 + 0.320184424146 * v13 + 0.535391490552 * v15 + -0.324651061185 * v17 + 0.200000267696 * v20 + 0.120781086924 * v26 + -0.189984223807 * v27
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0735187128895 * 1 + -0.290943765778 * v1 + 0.0364713062429 * v4 + -0.149078307721 * v5 + -0.215468121623 * v8 + 0.222006326248 * v9 + 0.475496339331 * v12 + 0.428803755578 * v13 + 0.122901448538 * v15 + -0.0889293903737 * v17 + 0.0252925655347 * v21 + 0.436126836565 * v25 + 0.242383835518 * v26
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.252810104477 * 1 + 0.368293396945 * v0 + -0.020194351536 * v1 + 0.0419959283933 * v2 + 0.240783089406 * v4 + 0.230199599132 * v8 + 0.0952018121865 * v15 + 0.279232068717 * v16 + -0.140094948059 * v17 + -0.155204193732 * v18 + -0.271686196453 * v20 + -0.0279510001151 * v21 + 0.102872566957 * v23
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00399892534236 * 1 + -0.172408751575 * v3 + 0.0865814300212 * v4 + -0.077031047529 * v5 + 0.00670017620293 * v8 + 0.30519713652 * v11 + 0.125787583867 * v12 + 0.43828226322 * v13 + -0.134575240485 * v15 + 0.25382471844 * v16 + 0.11335013929 * v17 + 0.217979897259 * v19 + -0.115734274433 * v27
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.175564286003 * 1 + -0.152947884199 * v1 + 0.100315699299 * v4 + 0.261961391 * v5 + 0.0151022482336 * v6 + -0.18536543572 * v7 + -0.0277322690315 * v10 + 0.245193908803 * v11 + 0.15154966708 * v13 + 0.337997706433 * v14 + 0.0504085687568 * v17 + -0.0207414865883 * v25 + 0.185129700816 * v26
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0926879293482 * 1 + -0.0248241415846 * v1 + 0.361799716283 * v3 + 0.182637265068 * v7 + 0.0231581878115 * v8 + 0.0423033982046 * v10 + 0.102966100382 * v12 + 0.0143791688642 * v15 + 0.327324572742 * v16 + 0.185475772885 * v17 + -0.209539359652 * v18 + 0.0483670095824 * v20 + -0.00815600286742 * v21
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.262522762907 * 1 + -0.211854911366 * v1 + 0.161952620167 * v4 + 0.0432407907606 * v5 + -0.259587555854 * v7 + 0.311738096418 * v8 + 0.362775441058 * v13 + 0.200885126192 * v15 + 0.0199086291254 * v17 + -0.244056049201 * v18 + 0.379494765609 * v20 + -0.0535561955275 * v21 + 0.0460507677433 * v23
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0542466370865 * 1 + -0.348454376107 * v1 + 0.00087982179175 * v4 + 0.264199852968 * v5 + 0.0714309114191 * v7 + -0.0723516071688 * v8 + 0.523109682429 * v9 + 0.0426681924282 * v13 + 0.394728857162 * v15 + -0.0393923127285 * v17 + -0.14216850318 * v20 + 0.00577325790099 * v22 + 0.279819505087 * v25
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.135333151871 * 1 + 0.306801183771 * v0 + -0.286252601743 * v1 + 0.417172962943 * v5 + -0.0513084066552 * v6 + 0.0931258009777 * v7 + 0.390692288878 * v9 + 0.467882921817 * v13 + 0.0023432875624 * v15 + 0.0433081235544 * v17 + -0.293235046642 * v18 + 0.247733840337 * v20 + -0.208903778429 * v21
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.175924637302 * 1 + 0.0628358521796 * v1 + 0.24940133064 * v3 + -0.0827238512904 * v6 + 0.00100514765527 * v7 + 0.0187491628784 * v8 + 0.175737605003 * v9 + 0.50383348163 * v12 + 0.0108267677786 * v15 + 0.195317490889 * v16 + 0.0269551290492 * v17 + -0.0595651854384 * v18 + -0.231885066229 * v21
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0118186113611 * 1 + -0.0443714552544 * v0 + 0.00201468977862 * v2 + 0.0622999368604 * v3 + 0.19263449677 * v8 + -0.0750293890294 * v12 + 0.283708277101 * v13 + 0.39424230791 * v15 + -0.14610176339 * v17 + 0.00534655276536 * v18 + -0.145405972208 * v23 + 0.391964126434 * v24 + 0.010318440022 * v27
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.295582402904 * 1 + 0.016840719891 * v1 + 0.187610377167 * v4 + 0.0354797683187 * v6 + 0.283936708342 * v7 + -0.211044090114 * v11 + 0.391185239209 * v13 + 0.33065736087 * v15 + -0.485734659066 * v17 + 0.260569418512 * v20 + -0.181765420567 * v22 + 0.307360761444 * v23 + 0.621822778464 * v26

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
