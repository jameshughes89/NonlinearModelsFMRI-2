from math import *

def funcL_LANGUAGE_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26159688754e-14 * 1 + 0.0 * v0 + 0.228294461872 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0177765071463 * v11 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.372459364731 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.00992069391353 * v27 + 0.232801576557 * v28
def funcL_LANGUAGE_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00472361188e-13 * 1 + 0.0 * v1 + -0.0 * v2 + -0.0 * v5 + -0.0 * v6 + 0.0200036308352 * v7 + 0.0 * v8 + 0.0 * v11 + -0.0 * v15 + 0.366555942834 * v17 + 0.315160189929 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v25 + 0.135874614125 * v27 + -0.0 * v28
def funcL_LANGUAGE_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.22996225292e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + -0.0 * v4 + -0.0 * v8 + -0.0 * v12 + -0.0 * v13 + -0.0 * v15 + -0.0 * v16 + 0.132784462052 * v17 + 0.406862781611 * v18 + 0.087188515743 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v27 + 0.281837962725 * v28
def funcL_LANGUAGE_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.19424609551e-14 * 1 + 0.345941947772 * v1 + 0.0 * v4 + 0.0 * v6 + 0.220791115017 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0629528132268 * v13 + 0.0 * v14 + 0.0 * v15 + 0.168298982452 * v17 + 0.0 * v20 + 0.017930808608 * v21 + 0.0407814029641 * v22 + 0.0 * v25 + 0.0623466538648 * v27 + 0.0 * v28
def funcL_LANGUAGE_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.74511570801e-14 * 1 + 0.14377090634 * v0 + 0.0 * v1 + -0.0 * v4 + 0.0 * v8 + 0.0185192497526 * v9 + 0.141561654701 * v11 + 0.0 * v13 + 0.100866286703 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.372385800211 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0425451210283 * v27 + 0.0 * v28
def funcL_LANGUAGE_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39989875362e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.00578958542426 * v6 + 0.273291682734 * v7 + 0.0 * v8 + -0.0 * v13 + 0.0 * v15 + 0.40401414819 * v17 + 0.0166822073522 * v18 + 0.0 * v20 + 0.0 * v22 + -0.0 * v23 + -0.0 * v26 + 0.0622053959431 * v27
def funcL_LANGUAGE_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97656843482e-13 * 1 + 0.0 * v0 + 0.115037372374 * v1 + -0.0 * v2 + -0.0 * v5 + 0.0607553426285 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.398734348634 * v17 + 0.0701708873112 * v18 + 0.0187250566447 * v20 + 0.170188911803 * v21 + -0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_LANGUAGE_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.41311631988e-14 * 1 + 0.0 * v0 + 0.152879599294 * v1 + 0.0 * v4 + 0.168091323134 * v7 + 0.10186980319 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.0 * v16 + 0.209224394583 * v17 + 0.0414428935114 * v18 + 0.0 * v20 + 0.16862066103 * v21 + 0.033366438518 * v24 + 0.0417499217291 * v27
def funcL_LANGUAGE_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.13596572724e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.123372412206 * v7 + 0.0 * v10 + 0.0 * v14 + 0.14242125174 * v16 + 0.289512026729 * v17 + 0.0448418993797 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0512737777989 * v21 + 0.0 * v22 + 0.0 * v23 + 0.226776287696 * v24
def funcL_LANGUAGE_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.45482123125e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0603203687253 * v9 + 0.0 * v11 + 0.265637473899 * v12 + 0.0 * v13 + 0.0 * v15 + 0.425093308708 * v17 + 0.029223565357 * v18 + 0.0 * v20 + 0.0907944359849 * v21 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.27851768276e-14 * 1 + -0.0 * v0 + -0.0 * v1 + -0.0 * v4 + -0.140444859251 * v5 + -0.0 * v8 + 0.322800041191 * v9 + 0.0 * v10 + -0.0671285269099 * v14 + -0.285119328663 * v15 + -0.0 * v16 + 0.511461412052 * v17 + -0.0 * v20 + -0.0 * v21 + -0.236760826599 * v22 + -0.0 * v25 + -0.0 * v26 + 0.0 * v28
def funcL_LANGUAGE_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.51177957269e-14 * 1 + 0.0 * v0 + 0.0 * v3 + -0.0 * v5 + 0.188852772629 * v7 + 0.0 * v10 + 0.0 * v11 + 0.11515170709 * v14 + 0.0489590605963 * v15 + 0.0 * v16 + 0.489716241691 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0566091865669 * v28
def funcL_LANGUAGE_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.37443063137e-14 * 1 + 0.0 * v0 + -0.0 * v1 + -0.0 * v2 + -0.00453293878154 * v5 + -0.0 * v6 + 0.164090602907 * v7 + 0.0 * v8 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.228262814275 * v18 + 0.0 * v20 + 0.0910121526805 * v21 + 0.0 * v23 + 0.220395562657 * v27 + 0.258433151097 * v28
def funcL_LANGUAGE_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.71464183049e-13 * 1 + 0.0679561990494 * v0 + 0.0 * v1 + -0.0 * v4 + 0.012088148412 * v8 + 0.0 * v9 + 0.112366314426 * v10 + 0.0520994390853 * v11 + 0.0 * v12 + 0.0 * v16 + 0.263691874176 * v17 + 0.0 * v18 + 0.0 * v20 + 0.143834172772 * v21 + 0.0 * v22 + 0.0 * v25 + 0.297176925567 * v27 + 0.026414413597 * v28
def funcL_LANGUAGE_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56133049866e-13 * 1 + 0.0950361550581 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.304096315985 * v17 + 0.0 * v18 + 0.0603545886212 * v20 + 0.229373754544 * v21 + 0.0 * v22 + 0.0 * v27 + 0.246667338385 * v28
def funcL_LANGUAGE_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.04434471185e-14 * 1 + -0.0 * v0 + 0.118285888543 * v1 + 0.0 * v6 + 0.103021629202 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v15 + 0.378292633199 * v17 + 0.166750296224 * v18 + 0.122689636704 * v20 + 0.090707927245 * v21 + 0.0 * v23 + -0.221079034341 * v25 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02968759233e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.124609413297 * v8 + 0.0842940658342 * v10 + 0.0264189892698 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0210538278061 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.212422417609 * v21 + 0.0 * v22 + 0.279634898898 * v27
def funcL_LANGUAGE_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.67821642471e-14 * 1 + 0.0 * v0 + 0.0 * v2 + -0.0 * v4 + -0.0 * v5 + 0.102944537361 * v7 + 0.152515679714 * v8 + 0.0 * v9 + -0.0 * v12 + -0.0 * v13 + 0.226350125221 * v17 + 0.0 * v18 + 0.0 * v20 + 0.18454140449 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0320180125857 * v27 + 0.247885758524 * v28
def funcL_LANGUAGE_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.00591679814e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + 0.22630602568 * v6 + 0.0309825764716 * v7 + -0.0 * v9 + 0.0 * v10 + 0.0 * v15 + 0.456749464708 * v17 + 0.166356844263 * v18 + -0.0 * v19 + 0.0 * v20 + 0.039134332577 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.41763470979e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.493134831279 * v17 + 0.0 * v18 + 0.0 * v20 + 0.243070604365 * v21 + 0.0 * v24 + 0.118782620881 * v27 + 0.0250502137262 * v28
def funcL_LANGUAGE_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26221950116e-13 * 1 + 0.00897407958731 * v0 + 0.0517323803681 * v1 + -0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.483401134848 * v7 + 0.0 * v9 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0246621510433 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0671319689019 * v21 + 0.0 * v23 + 0.255262968392 * v27 + 0.128032714355 * v28
def funcL_LANGUAGE_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.72347082763e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0670183385611 * v7 + 0.0 * v8 + 0.0529936362376 * v9 + 0.0 * v11 + 0.183797564541 * v15 + 0.0 * v16 + 0.174141174573 * v17 + 0.199587266865 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v23 + 0.201846112787 * v27 + 0.0 * v28
def funcL_LANGUAGE_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.49899805095e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v16 + 0.755963759234 * v17 + 0.00790129290164 * v18 + 0.0437743503489 * v19 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.37998311178e-14 * 1 + 0.0 * v0 + 0.162246260286 * v1 + -0.0 * v2 + 0.0 * v3 + 0.446282739331 * v8 + 0.0315502324969 * v11 + 0.0 * v12 + 0.0 * v16 + 0.164543630437 * v17 + 0.0717077051933 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0268669152447 * v27 + 0.0 * v28
def funcL_LANGUAGE_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.46236682355e-13 * 1 + 0.0 * v0 + 0.176207444902 * v1 + 0.0 * v3 + 0.0 * v4 + 0.149162857621 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0840485590916 * v17 + 0.0 * v18 + 0.0 * v19 + 0.117483182085 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0260730955318 * v27 + 0.347281336002 * v28
def funcL_LANGUAGE_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.49075404285e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0606730839865 * v7 + 0.32613405789 * v8 + -0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.368225371609 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0681775860059 * v23 + 0.0 * v27 + 0.0607408733221 * v28
def funcL_LANGUAGE_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11366175237e-13 * 1 + 0.0 * v0 + 0.0500702437207 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0897926292094 * v11 + 0.0 * v12 + 0.0 * v15 + 0.0531785572521 * v17 + 0.200786563968 * v18 + 0.288163197505 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.253206712033 * v27 + 0.0 * v28
def funcL_LANGUAGE_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12957039195e-14 * 1 + 0.146403457913 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.00323809023627 * v7 + 0.127923110278 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v15 + 0.221236006738 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0343416254621 * v21 + 0.0 * v26 + 0.26114090438 * v27 + 0.116042842142 * v28
def funcL_LANGUAGE_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.02604081385e-13 * 1 + 0.0 * v0 + 0.0316687954288 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0971112498139 * v8 + 0.0 * v9 + 0.0 * v13 + -0.0 * v15 + 0.0 * v16 + 0.210570524179 * v17 + 0.286655068383 * v20 + 0.00844080937311 * v21 + 0.0281419379384 * v22 + -0.0 * v26 + 0.06847019193 * v27 + 0.1675383925 * v28
def funcL_LANGUAGE_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76545911376e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v5 + -0.0 * v6 + 0.363724699662 * v7 + 0.0 * v8 + 0.0 * v15 + 0.315126702869 * v17 + 0.185391300097 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.42200436299e-14 * 1 + 0.0 * v0 + 0.0571527968468 * v1 + 0.0 * v4 + -0.0 * v5 + 0.0152435362859 * v8 + -0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v15 + -0.0 * v16 + 0.235285625495 * v17 + 0.0778249346263 * v18 + 0.318144122583 * v20 + 0.0789401676215 * v21 + 0.0 * v22 + 0.0 * v23 + 0.00619518732563 * v28
def funcL_LANGUAGE_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.68361941609e-15 * 1 + 0.114762174152 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.381571495538 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0648275801342 * v15 + 0.316235046869 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161196139033 * v21 + 0.0 * v22 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.64967173501e-13 * 1 + 0.123838519943 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0446104151055 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0115665804757 * v13 + 0.0 * v15 + 0.465641742069 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0204324832785 * v21 + 0.0450997505866 * v23 + 0.0506907876702 * v27 + 0.139550179477 * v28
def funcL_LANGUAGE_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.70923302617e-14 * 1 + 0.0839116398249 * v1 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.056159810263 * v7 + 0.0 * v10 + 0.0 * v11 + -0.137447914837 * v14 + 0.0 * v15 + 0.0951099456825 * v16 + 0.218699332496 * v17 + 0.317684862397 * v20 + 0.11396888217 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.00370422511624 * v27
def funcL_LANGUAGE_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.88775069915e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + 0.264848806608 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v15 + 0.0 * v16 + 0.589956397621 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.3644555513e-13 * 1 + 0.134729844472 * v1 + -0.0 * v4 + -0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v15 + 0.268073974873 * v17 + 0.308068673004 * v18 + 0.0880877175922 * v20 + 0.0771234457784 * v21 + 0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_LANGUAGE_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.72529742346e-13 * 1 + 0.0 * v0 + 0.110590646625 * v1 + -0.0 * v2 + -0.0 * v4 + 0.379321606587 * v8 + 0.0 * v9 + 0.0 * v10 + 0.102764125913 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v15 + 0.263148298927 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.40347748792e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.185594737091 * v7 + 0.138541687797 * v8 + 0.0528351934381 * v9 + 0.109763566638 * v11 + -0.0 * v12 + 0.189081995916 * v16 + 0.0 * v17 + 0.0838326634052 * v18 + 0.0 * v20 + 0.062165602069 * v21 + -0.0 * v22 + -0.0 * v23 + -0.329416231478 * v26 + 0.0504218703776 * v27
def funcL_LANGUAGE_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.72519745834e-14 * 1 + 0.0193210407153 * v0 + 0.00900579774875 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0992981336067 * v10 + 0.0775022349331 * v11 + 0.0689186196036 * v12 + 0.0 * v15 + 0.0 * v16 + 0.175253019992 * v17 + 0.281417034727 * v20 + 0.0 * v21 + 0.0 * v22 + 0.101208283483 * v27 + 0.125032253583 * v28
def funcL_LANGUAGE_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.90785835621e-14 * 1 + -0.0 * v0 + 0.160655910519 * v1 + -0.0942980363186 * v3 + -0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + -0.0 * v10 + 0.143700410334 * v11 + -0.0 * v13 + 0.0 * v15 + -0.0 * v16 + 0.167006901685 * v17 + 0.42364795273 * v18 + -0.0 * v24 + -0.235129079262 * v25 + 0.0 * v27

funcs = [funcL_LANGUAGE_100307,funcL_LANGUAGE_100408,funcL_LANGUAGE_101006,funcL_LANGUAGE_101107,funcL_LANGUAGE_101309,funcL_LANGUAGE_101410,funcL_LANGUAGE_101915,funcL_LANGUAGE_102008,funcL_LANGUAGE_102311,funcL_LANGUAGE_102816,funcL_LANGUAGE_103111,funcL_LANGUAGE_103414,funcL_LANGUAGE_103515,funcL_LANGUAGE_103818,funcL_LANGUAGE_104012,funcL_LANGUAGE_104820,funcL_LANGUAGE_105014,funcL_LANGUAGE_105115,funcL_LANGUAGE_105216,funcL_LANGUAGE_105923,funcL_LANGUAGE_106016,funcL_LANGUAGE_106319,funcL_LANGUAGE_106521,funcL_LANGUAGE_107321,funcL_LANGUAGE_107422,funcL_LANGUAGE_108121,funcL_LANGUAGE_108323,funcL_LANGUAGE_108525,funcL_LANGUAGE_108828,funcL_LANGUAGE_109123,funcL_LANGUAGE_109325,funcL_LANGUAGE_110411,funcL_LANGUAGE_111312,funcL_LANGUAGE_111413,funcL_LANGUAGE_111514,funcL_LANGUAGE_111716,funcL_LANGUAGE_113215,funcL_LANGUAGE_113619,funcL_LANGUAGE_113922,funcL_LANGUAGE_114419,]

def getFuncs(): return funcs
