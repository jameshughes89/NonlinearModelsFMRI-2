from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.160255654604 * 1 + 0.0630053434588 * v0 + 0.0913780267703 * v2 + 0.126324235739 * v3 + 0.188010301076 * v4 + 0.126237861457 * v15 + 0.383869575562 * v16 + 0.0494411007361 * v17 + 0.102817692997 * v20 + 0.0256659334789 * v24 + 0.0532821839412 * v27
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.000602382592499 * 1 + 0.261850097113 * v4 + 0.144268099112 * v5 + -0.293529355684 * v7 + 0.0599413736017 * v8 + 0.110619582645 * v9 + 0.134331248688 * v12 + 0.273764741043 * v15 + 0.102616276972 * v17 + 0.18762807944 * v20 + 0.167726222525 * v21
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.22580642614 * 1 + 0.182039298127 * v3 + 0.194556261954 * v5 + 0.145591687797 * v9 + -0.120683563442 * v12 + 0.261079829648 * v13 + 0.311837898545 * v15 + 0.292731152532 * v16 + 0.00950885451808 * v19 + 0.0398203552904 * v21 + -0.0212482376034 * v25
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0528081812007 * 1 + 0.0106447340361 * v1 + -0.0980354911359 * v4 + 0.000648006241932 * v10 + 0.3823442323 * v16 + 0.145204258024 * v17 + 0.260312398255 * v18 + -0.00665550567443 * v20 + 0.435636685228 * v21 + 0.0391647128978 * v22 + -0.229378421041 * v23
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0636120842056 * 1 + -0.0216404728917 * v1 + 0.112318851817 * v4 + 0.0645619436792 * v5 + 0.0496108592761 * v6 + -0.0476483723778 * v8 + 0.131309258918 * v14 + 0.283273840531 * v20 + 0.0773251504296 * v25 + 0.316334338879 * v26 + 0.139412967529 * v27
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.160882939121 * 1 + 0.104356091164 * v5 + 0.0364620841641 * v10 + 0.204252143366 * v11 + -0.0958987461114 * v15 + 0.336317299409 * v16 + 0.0651781225426 * v17 + 0.20150941086 * v18 + 0.244933656644 * v22 + -0.188634520124 * v23 + 0.0160730294609 * v27
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.263771947078 * 1 + 0.0798083450676 * v1 + 0.277181150946 * v4 + -0.156915193924 * v5 + -0.158197419185 * v6 + 0.291219563916 * v8 + -0.0936797715974 * v15 + 0.0320975217472 * v17 + 0.254890353892 * v18 + 0.423289503227 * v20 + -0.177825724251 * v21
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0387621459228 * 1 + 0.441260098299 * v1 + 0.0602245922371 * v2 + 0.051247930022 * v6 + 0.00172667031719 * v7 + 0.0443221448767 * v15 + 0.343550889096 * v17 + 0.217585445081 * v20 + 0.00772724438996 * v21 + -0.141792466103 * v23 + 0.0330585877303 * v27
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0627934223742 * 1 + 0.324847293914 * v4 + -0.0379800626288 * v5 + -0.0684969711738 * v7 + 0.0743267235033 * v8 + 0.153060642277 * v9 + 0.227825546608 * v11 + 0.0803034272462 * v15 + 0.114680143414 * v17 + 0.212664965573 * v20 + 0.0483801017964 * v21
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.316349867707 * 1 + 0.111155541635 * v4 + 0.0914977661395 * v7 + -0.156453455672 * v8 + -0.0378997480218 * v12 + 0.0747708183906 * v15 + 0.0185414065962 * v16 + 0.00836378044932 * v17 + 0.313265349115 * v20 + 0.25124451165 * v21 + 0.0701499832912 * v22
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0103969120993 * 1 + 0.143480676889 * v0 + -0.0800192837533 * v5 + 0.0886923061054 * v7 + 0.0862316634749 * v8 + -0.0577427190218 * v16 + -0.0310489989697 * v17 + 0.376499886942 * v20 + 0.317278226738 * v21 + 0.0249637049783 * v22 + 0.130762464523 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.139551994346 * 1 + 0.174648951041 * v1 + -0.00678104091506 * v7 + 0.154968424811 * v9 + 0.116923152069 * v11 + 0.0873729972493 * v15 + 0.106064262797 * v17 + 0.238637455203 * v19 + 0.175717862699 * v20 + -0.0559942938915 * v22 + -0.0312427726955 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.302105514963 * 1 + 0.257927558875 * v2 + -0.211046722862 * v3 + -0.466837280084 * v4 + 0.111001048064 * v5 + -0.23691878426 * v10 + 0.722090898306 * v11 + 0.492053333476 * v17 + -0.219984224066 * v20 + -0.0428229543008 * v22 + 0.179556604695 * v24
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0104490785953 * 1 + 0.0204355844892 * v1 + 0.390047085245 * v4 + -0.172019221824 * v5 + 0.0300146285103 * v8 + 0.404801641117 * v9 + 0.168263340602 * v15 + 0.10428729875 * v20 + 0.0529902957993 * v21 + 0.17105421546 * v22 + -0.0519894134849 * v25
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.226887592144 * 1 + 0.0636825358149 * v5 + 0.387414060478 * v8 + 0.590141326208 * v9 + 0.245746167607 * v15 + -0.129733424934 * v17 + -0.0154631835247 * v18 + 0.0274588315421 * v20 + -0.152035507665 * v21 + -0.278249865433 * v22 + -0.0122941697498 * v27
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.151249737563 * 1 + 0.0502321104887 * v1 + 0.0113272621511 * v5 + 0.161596312968 * v9 + 0.017886091011 * v10 + -0.218593499284 * v11 + -0.00513415629866 * v16 + 0.29949936801 * v20 + 0.187655106552 * v22 + 0.28064172008 * v23 + 0.195682811682 * v25
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0747765535514 * 1 + -0.0237208958758 * v0 + 0.0521360089463 * v6 + 0.16547402585 * v11 + 0.386108035722 * v15 + -0.0430496356079 * v16 + 0.123235357176 * v17 + 0.3406986958 * v19 + 0.0819005430569 * v21 + 0.033083016251 * v22 + 0.131693505099 * v24
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0278822916505 * 1 + 0.109197238872 * v1 + 0.170497952935 * v5 + 0.0063714388514 * v7 + 0.321736147798 * v8 + 0.274833550788 * v9 + -0.0802945832178 * v15 + 0.179674211944 * v18 + 0.158429967846 * v21 + 0.106800190043 * v23 + -0.124791225726 * v25
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.106738588544 * 1 + 0.436795133116 * v1 + 0.19208809591 * v5 + 0.0357060435986 * v6 + 0.147652183017 * v7 + 0.134009438303 * v11 + 0.216644835206 * v20 + 0.274531654022 * v21 + -0.366932836622 * v23 + -0.139851083449 * v25 + 0.0118305118739 * v27
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0561772079631 * 1 + -0.0554344327625 * v1 + 0.123819567628 * v4 + -0.125131192134 * v5 + 0.109677412139 * v8 + 0.0483979524711 * v9 + 0.106070655745 * v17 + 0.386970751703 * v20 + 0.155911835255 * v21 + 0.170726141746 * v22 + 0.0739214291026 * v25
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.205320872861 * 1 + -0.164530738927 * v2 + 0.0787786980862 * v3 + 0.124228858468 * v5 + -0.0563357677669 * v11 + 0.187096540384 * v12 + 0.300958795678 * v13 + -0.017064593904 * v17 + 0.167236490628 * v19 + 0.0721762089599 * v22 + 0.254470628188 * v25
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.206088468155 * 1 + 0.183084810401 * v1 + -0.0661836624512 * v5 + 0.181986057466 * v7 + 0.232197516076 * v9 + 0.121508426912 * v15 + 0.367268406141 * v19 + 0.0794578529631 * v20 + -0.0242180968844 * v21 + -0.0372272885109 * v22 + -0.195563285053 * v26
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.242067589668 * 1 + 0.183236146468 * v1 + 0.447939974642 * v4 + -0.193707653964 * v5 + -0.208351928835 * v7 + 0.0218735256825 * v8 + 0.276071724379 * v13 + 0.31464132001 * v20 + 0.0290684027152 * v21 + -0.128206417097 * v23 + 0.0282865293889 * v26
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0737319268778 * 1 + 0.0939537657167 * v0 + 0.0549132130677 * v4 + 0.0217868197208 * v5 + 0.111223100338 * v8 + 0.0827354685447 * v11 + -0.177462617415 * v15 + 0.222165025689 * v16 + 0.00486269442346 * v17 + 0.647706076387 * v21 + -0.0930184907063 * v22
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.224232158861 * 1 + -0.054788189227 * v1 + -0.0871630890634 * v3 + 0.0857375710196 * v8 + 0.0777864985391 * v15 + 0.260355972955 * v16 + -0.0186974524628 * v17 + 0.0512000224516 * v19 + 0.164959994191 * v21 + 0.226615889384 * v22 + 0.0839753774083 * v23
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.214964090286 * 1 + -0.147452796794 * v1 + 0.248845639656 * v4 + 0.128988296612 * v5 + -0.0546634142686 * v6 + 0.0255468377077 * v7 + 0.0479522092637 * v8 + 0.471686212543 * v12 + 0.572400665277 * v17 + 0.388547434257 * v20 + -0.812348308203 * v21
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0730129102008 * 1 + -0.0133491859162 * v1 + 0.196875450923 * v3 + 0.32707427213 * v4 + -0.312289204994 * v9 + 0.162731661555 * v13 + 0.099201957478 * v15 + 0.0832420637859 * v16 + 0.0995600225427 * v17 + 0.0558395179094 * v22 + 0.360728796089 * v23
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0964852921359 * 1 + -0.0637952872532 * v2 + 0.369280126156 * v3 + -0.100123221866 * v5 + -0.0283175413782 * v7 + 0.0755222537616 * v8 + -0.0957527015304 * v9 + 0.240156516047 * v18 + 0.448661279366 * v20 + 0.224222491859 * v21 + 0.0622718066322 * v25
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.149309425141 * 1 + 0.127976490154 * v1 + 0.223355981279 * v4 + -0.130646532958 * v5 + 0.159767841078 * v8 + 0.0733695029078 * v9 + 0.118740919674 * v13 + -0.00300067365462 * v15 + 0.29342804206 * v17 + 0.0946888700924 * v21 + 0.000382555739847 * v22
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.00211853523349 * 1 + -0.0293869321382 * v2 + 0.0504975799555 * v3 + 0.306948982151 * v9 + -0.216943482622 * v11 + 0.150724155054 * v12 + 0.0166961283584 * v15 + 0.222546461049 * v19 + 0.206325455575 * v21 + 0.0961018457073 * v22 + 0.264000374561 * v23
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.275266024161 * 1 + 0.093053257042 * v0 + 0.0238481471589 * v4 + -0.264679679867 * v5 + 0.20665625887 * v8 + 0.0859189832348 * v13 + 0.0865352224176 * v15 + -0.0251053607399 * v17 + 0.42351072596 * v20 + 0.215815203417 * v21 + -0.0410293366059 * v22
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.106445938739 * 1 + 0.238854554832 * v4 + -0.145794028563 * v7 + -0.0358877128228 * v8 + 0.116564471649 * v12 + 0.111818193984 * v13 + 0.138724509221 * v18 + 0.367163727357 * v20 + 0.217853102863 * v21 + -0.0258273395568 * v22 + -0.0522989960698 * v27
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0486705268726 * 1 + -0.106174698808 * v2 + 0.233319931478 * v5 + 0.066574483524 * v9 + -0.018235862597 * v11 + 0.0550388903482 * v16 + -0.0202648038713 * v17 + 0.304468990047 * v20 + 0.277065548325 * v21 + 0.202580962233 * v22 + 0.044277622662 * v25
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0565906238017 * 1 + -0.093107549167 * v0 + -0.0330125916019 * v1 + -0.286940768562 * v4 + 0.0564675616464 * v6 + -0.123955332476 * v15 + -0.0752945790298 * v16 + 0.345002896093 * v17 + 0.215988831784 * v20 + 0.294428849443 * v21 + -0.0457308299132 * v22
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0399111693736 * 1 + -0.0839183188215 * v1 + 0.313692672537 * v4 + 0.0907289772496 * v5 + 0.155872443259 * v7 + 0.247647680108 * v9 + 0.143967224771 * v20 + 0.360340392663 * v21 + -0.147925393562 * v22 + 0.0182607407324 * v23 + -0.0530346658773 * v25
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.47516999012 * 1 + -0.0603666408367 * v0 + 0.00708980328642 * v2 + 0.633083834402 * v4 + -0.345286129079 * v6 + -0.00384230224157 * v8 + -0.190418263011 * v9 + 0.339584980773 * v16 + 0.217409102858 * v17 + 0.275218200745 * v22 + 0.26713669048 * v23
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0179783969101 * 1 + 0.0248033534259 * v0 + 0.145983773231 * v1 + 0.0960741991796 * v3 + -0.10281318775 * v4 + 0.0448070538023 * v12 + 0.102835335049 * v15 + 0.208283485885 * v16 + 0.369058978297 * v20 + 0.0382200396473 * v21 + 0.237574882089 * v23
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.171096973935 * 1 + -0.0311969183705 * v1 + 0.336969347542 * v3 + -0.0534309410059 * v5 + 0.0613004720051 * v7 + -0.00504936834146 * v9 + 0.135815889832 * v17 + 0.111427438624 * v19 + 0.171933639858 * v21 + 0.0727954737297 * v22 + 0.112844065078 * v25
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.133136957102 * 1 + 0.0254357361802 * v1 + -0.15554818038 * v4 + 0.197309063372 * v8 + 0.0550059736574 * v9 + 0.33422019962 * v11 + 0.0246755308598 * v15 + 0.119055366064 * v17 + 0.294579354478 * v20 + -0.0576141369778 * v21 + 0.110437995168 * v27
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0204816047475 * 1 + 0.100212596015 * v1 + 0.177865347045 * v3 + 0.0234083708342 * v4 + 0.409962500541 * v5 + 0.252173371975 * v9 + 0.0238736978406 * v17 + -0.271085742425 * v19 + 0.215832662362 * v20 + 0.0292570017869 * v22 + 0.0177463823013 * v27
def func_WM_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.114874944064 * 1 + 0.286999282007 * v1 + 0.219377413919 * v3 + 0.13702358159 * v4 + -0.102300205788 * v11 + 0.0927106202384 * v13 + 0.34961508324 * v14 + 0.223529975058 * v17 + 0.171740284954 * v20 + -0.0926102909901 * v23 + -0.140425176067 * v26

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,funcL_WM_114924,]

def getFuncs(): return funcs
