from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.00271549865e-13 * 1 + 0.0 * v0 + 0.11539674174 * v3 + 0.146400200126 * v4 + 0.160435961994 * v15 + 0.0827577698211 * v16 + 0.363594724108 * v17 + 0.00417424991742 * v20 + 0.0 * v27 + 0.00613752593049 * v28
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.5567303684e-14 * 1 + 0.0 * v4 + 0.23451428837 * v5 + 0.0496965073394 * v7 + 0.0 * v8 + 0.0 * v15 + 0.262051372257 * v17 + 0.0601190810524 * v20 + 0.222752026254 * v21 + 0.0959175613314 * v25
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.20238862658e-13 * 1 + 0.0 * v3 + 0.209759475124 * v5 + 0.0742277063492 * v9 + 0.0190872137876 * v12 + 0.0 * v13 + 0.23813572006 * v16 + 0.186043127351 * v19 + 0.0 * v25 + 0.0439757609727 * v28
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43458295074e-14 * 1 + 0.0 * v1 + 0.0206350687794 * v4 + 0.0 * v16 + 0.249610962955 * v17 + 0.0934539776494 * v18 + 0.165689666886 * v20 + 0.363185409161 * v22 + 0.0 * v23 + 0.0 * v27
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20412925825e-13 * 1 + 0.0473897500768 * v4 + 0.134410308026 * v5 + 0.0 * v6 + 0.0183952667944 * v8 + 0.0 * v14 + 0.191289926741 * v20 + 0.227333734886 * v25 + 0.0 * v26 + 0.289326434169 * v27
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.77908187281e-14 * 1 + 0.149263324049 * v5 + 0.126214404173 * v10 + 0.0 * v11 + 0.0700147283363 * v15 + 0.242594267747 * v17 + 0.033488104065 * v18 + 0.0791778535778 * v22 + 0.247804618924 * v23 + 0.0 * v27
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.4375371641e-13 * 1 + 0.178468794932 * v1 + 0.0892046326614 * v4 + 0.0 * v8 + 0.0 * v15 + 0.0 * v17 + 0.0272164123656 * v18 + 0.178023984287 * v20 + 0.36194627231 * v21 + 0.0 * v27
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.76773690421e-14 * 1 + 0.041045701144 * v1 + 0.421159543824 * v2 + 0.0 * v6 + 0.078524611558 * v7 + 0.04248593761 * v15 + 0.0736657386521 * v17 + 0.253446777818 * v20 + 0.0 * v23 + 0.0 * v27
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705462096e-13 * 1 + 0.0 * v4 + 0.216467484239 * v5 + 0.0783053106427 * v9 + 0.0859893020782 * v11 + 0.155477611012 * v15 + 0.0769176692418 * v17 + 0.0487113288933 * v20 + 0.204805833901 * v21 + 0.0762290733181 * v22
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.06202324639e-13 * 1 + 0.297636179161 * v4 + 0.152101934589 * v7 + 0.0103510791664 * v8 + 0.0283124374377 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0319534506742 * v20 + 0.396001546446 * v21 + 0.0 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.21834639272e-14 * 1 + 0.0 * v0 + 0.137787302678 * v5 + 0.0625996620987 * v8 + 0.0814087337341 * v16 + 0.0 * v17 + 0.0 * v20 + 0.28328641969 * v21 + 0.32653273232 * v22 + 0.00023009695974 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.5554243156e-13 * 1 + 0.153301093907 * v1 + 0.168448940947 * v7 + 0.0 * v9 + 0.138606715056 * v11 + 0.111130507193 * v15 + 0.0756794942847 * v17 + 0.143500008561 * v19 + 0.145903935061 * v20 + 0.0 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.14037159111e-15 * 1 + 0.0 * v2 + 0.154803176337 * v3 + 0.0 * v4 + 0.0390149647216 * v10 + -0.0 * v11 + 0.480622319993 * v17 + 0.118543209603 * v20 + 0.0 * v24 + 0.0 * v25
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.18914056643e-15 * 1 + 0.00492561196802 * v1 + 0.0278442524523 * v4 + 0.329482483651 * v5 + 0.0 * v8 + 0.0353879591583 * v9 + 0.31722554856 * v15 + 0.134804510389 * v20 + 0.101589273524 * v25 + 0.0 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14132786932e-14 * 1 + 0.106837960396 * v5 + 0.0 * v8 + 0.226662655533 * v9 + 0.359593622438 * v15 + 0.0992895860925 * v17 + 0.0 * v20 + 0.0514470995919 * v21 + 0.0 * v27 + 0.0 * v28
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.17225952964e-13 * 1 + 0.177355323539 * v1 + 0.0811832649786 * v5 + 0.00522349405394 * v9 + 0.0933072851455 * v10 + 0.0 * v16 + 0.0787451008538 * v20 + 0.249520366448 * v22 + 0.161636456554 * v25 + 0.100665545632 * v28
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97293291521e-14 * 1 + 0.0 * v0 + 0.093224052859 * v15 + 0.305856005777 * v16 + 0.0 * v17 + 0.0348619921135 * v19 + 0.275696683271 * v21 + 0.179537443727 * v22 + 0.0 * v24 + 0.123041277137 * v28
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35431689211e-13 * 1 + 0.0 * v1 + 0.0778012610744 * v5 + 0.0743437323483 * v7 + 0.0191347327601 * v8 + 0.30297546307 * v9 + 0.174286879127 * v15 + 0.0 * v18 + 0.211055458145 * v21 + 0.0640593425423 * v25
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.87947814646e-14 * 1 + 0.0779256244991 * v1 + 0.146216413063 * v5 + 0.164028455792 * v6 + 0.0 * v7 + 0.185351589913 * v11 + 0.148615020257 * v21 + 0.197617243391 * v23 + 0.0 * v25 + 0.0 * v27
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.13093980978e-14 * 1 + 0.0 * v4 + 0.120894336882 * v5 + 0.0 * v8 + 0.16482861192 * v9 + 0.0 * v17 + 0.136957709614 * v20 + 0.34297820541 * v21 + 0.122920653473 * v22 + 0.0401449811337 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13773174516e-14 * 1 + 0.104469171248 * v2 + 0.0 * v3 + 0.110589080993 * v5 + 0.097852343231 * v11 + 0.0 * v12 + 0.0738256474831 * v13 + 0.189900388245 * v17 + 0.065845130059 * v25 + 0.312747694689 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49164892836e-14 * 1 + 0.122922554849 * v1 + 0.0838212640637 * v5 + 0.0 * v7 + 0.0916718149034 * v9 + 0.148519799935 * v15 + 0.137869477203 * v19 + 0.28839843235 * v20 + 0.0549626839906 * v21 + 0.0 * v27
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4863065688e-13 * 1 + 0.0951964949276 * v1 + 0.172942737564 * v4 + 0.242933926035 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.186125196527 * v20 + 0.208749511221 * v21 + 0.0 * v27
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52925950113e-15 * 1 + 0.0126570888802 * v4 + 0.0 * v5 + 0.0671378355436 * v8 + 0.0177875642439 * v11 + 0.0 * v15 + 0.260471883732 * v17 + 0.0 * v21 + 0.555474207851 * v22 + 0.0 * v28
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.98084704645e-14 * 1 + 0.227610440032 * v1 + 0.0 * v3 + 0.026388486385 * v15 + 0.00451741292665 * v16 + 0.240966881712 * v17 + 0.0 * v19 + 0.109329632394 * v22 + 0.218099025216 * v23 + 0.0554179482667 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03355644168e-13 * 1 + 0.152324909893 * v1 + 0.112337735864 * v4 + 0.380694324592 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v17 + 0.0426871419271 * v20 + 0.184350522873 * v21
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.29791258896e-13 * 1 + 0.238012714272 * v1 + 0.0 * v3 + 0.0834933164272 * v4 + 0.145932945284 * v9 + 0.0 * v13 + 0.115425652671 * v16 + 0.0404172376019 * v22 + 0.0684610111206 * v23 + 0.278718391339 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.76633818465e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.240209469647 * v5 + 0.0 * v7 + 0.0 * v8 + 0.153673018568 * v20 + 0.248801057 * v21 + 0.192502368199 * v25 + 0.0928764635247 * v28
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9205754921e-13 * 1 + 0.169238844787 * v1 + 0.117879282023 * v4 + 0.17757376793 * v5 + 0.0 * v8 + 0.0998491263786 * v13 + 0.0 * v17 + 0.242385057321 * v21 + 0.0872172310195 * v22 + 0.0443239722054 * v27
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.62669646489e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0187916725021 * v9 + 0.219032928426 * v11 + 0.0285309625117 * v19 + 0.295318009423 * v21 + 0.163894418925 * v22 + 0.0 * v23 + 0.174829235544 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39629416836e-13 * 1 + 0.154610102488 * v0 + 0.109818371707 * v4 + 0.0 * v5 + 0.0762429539393 * v13 + 0.0 * v17 + 0.0 * v20 + 0.428658590079 * v21 + 0.142549801986 * v22 + 0.0 * v28
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47606547404e-13 * 1 + 0.0391077611255 * v4 + 0.227874997416 * v7 + 0.0 * v13 + 0.0 * v18 + 0.159994864734 * v20 + 0.330919132188 * v21 + 0.159426230029 * v22 + 0.0 * v27 + 0.0 * v28
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.51525237333e-14 * 1 + 0.0415761071918 * v2 + 0.0 * v5 + 0.247847486709 * v9 + 0.0 * v16 + 0.0 * v20 + 0.287377272457 * v21 + 0.20372590842 * v22 + 0.155990761714 * v25 + 0.0 * v28
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16660699924e-14 * 1 + 0.0 * v1 + -0.262919283269 * v6 + 0.0200250165237 * v15 + -0.089504863612 * v16 + 0.0 * v17 + 0.247300153414 * v20 + 0.0595933570448 * v21 + 0.300948027948 * v22 + 0.0 * v27
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.18603389901e-13 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v7 + 0.222532902791 * v9 + 0.192699023069 * v20 + 0.157510159639 * v21 + 0.288569612608 * v22 + 0.0 * v23 + 0.0 * v28
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.16384025606e-13 * 1 + 0.309140588693 * v0 + 0.0 * v4 + 0.372450795562 * v6 + 0.0 * v9 + 0.0 * v16 + 0.137103331465 * v17 + 0.197213480076 * v22 + 0.0 * v23 + 0.176170289889 * v28
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.62833074022e-14 * 1 + 0.0 * v0 + 0.075230391103 * v1 + 0.129606153051 * v3 + 0.141717937682 * v4 + 0.0264361305876 * v15 + 0.0659511954409 * v16 + 0.376262412426 * v21 + 0.0154949715796 * v23 + 0.143978531009 * v28
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.60895439301e-14 * 1 + 0.141533786559 * v1 + 0.319679201221 * v5 + 0.05110445521 * v9 + 0.0 * v17 + 0.0938322566583 * v19 + 0.068399011489 * v21 + 0.183136092698 * v22 + 0.0262133402907 * v25 + 0.061781145614 * v28
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12366572724e-13 * 1 + 0.129383518991 * v1 + 0.0 * v8 + 0.181335280991 * v9 + 0.00699377850996 * v11 + 0.248699262594 * v15 + 0.0584779128174 * v20 + 0.222153159006 * v21 + 0.0 * v27 + 0.0654717550432 * v28
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.08908395903e-13 * 1 + 0.0 * v1 + 0.0385125124726 * v3 + 0.121301935234 * v4 + 0.0862404738529 * v5 + 0.385057847082 * v9 + 0.168809922694 * v17 + 0.0380234678729 * v22 + 0.0 * v27 + 0.0456084134058 * v28
def func_WM_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.52402324284e-14 * 1 + 0.0 * v1 + 0.326324572567 * v3 + 0.108645044792 * v4 + 0.0619734780065 * v11 + 0.0 * v13 + 0.171852702108 * v17 + 0.16231593757 * v20 + 0.0499994488642 * v23 + 0.0 * v27

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,funcL_WM_114924,]

def getFuncs(): return funcs
