from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.192718874e-14 * 1 + 0.116172884009 * v1 + 0.210957099775 * v7 + 0.262651748661 * v11 + 0.268947771093 * v15 + 0.242044093972 * v16
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.22955532784e-14 * 1 + 0.0255089657975 * v3 + 0.23003844028 * v5 + 0.230064504585 * v7 + 0.184129230095 * v17 + 0.285864403928 * v22
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.83941301146e-14 * 1 + 0.285451925347 * v1 + 0.323764674371 * v5 + 0.114412191319 * v15 + -0.0456208414664 * v20 + 0.347813357851 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.94172229049e-14 * 1 + 0.0902657872367 * v1 + 0.193336985052 * v7 + 0.331651369345 * v17 + 0.221106226205 * v18 + 0.170711183804 * v23
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.65668479033e-14 * 1 + 0.234133636367 * v3 + 0.116710470683 * v8 + 0.318207371976 * v21 + 0.259538300082 * v22 + 0.0869903454235 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.83319870248e-14 * 1 + 0.537759548209 * v1 + 0.302566170794 * v5 + 0.234430760348 * v17 + -0.00277876495773 * v20 + -0.0631852304653 * v27
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.10243078148e-13 * 1 + 0.341314472589 * v5 + -0.10366894672 * v11 + 0.393780097363 * v21 + 0.352902237309 * v22 + 0.0722794570471 * v23
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.90446861557e-14 * 1 + 0.0218462393658 * v4 + 0.18463127044 * v13 + 0.2051914012 * v17 + 0.334020504571 * v20 + 0.198113353179 * v27
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.41609167117e-14 * 1 + 0.0766466286859 * v7 + 0.521672416976 * v11 + 0.406610816343 * v21 + 0.39506611642 * v22 + -0.447195716952 * v23
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.41296677941e-14 * 1 + 0.126637926091 * v4 + 0.56388778957 * v5 + 0.320596195212 * v7 + -0.300291984476 * v8 + 0.338644664499 * v21
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.50803305731e-14 * 1 + 0.211524018476 * v1 + -0.0224230982098 * v4 + 0.314969406375 * v5 + 0.300128216888 * v9 + 0.237032371958 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.17696189911e-14 * 1 + 0.482978840897 * v1 + 0.306516055836 * v5 + 0.291083026865 * v20 + -0.0584179239514 * v25 + -0.0435551216986 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.35686612926e-14 * 1 + 0.187971639657 * v4 + 0.391271637617 * v5 + 0.240665929034 * v7 + 0.160668726008 * v20 + 0.0650037071117 * v21
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.80591919367e-15 * 1 + 0.259610088473 * v4 + 0.392989279173 * v5 + 0.283160710012 * v21 + 0.175624871658 * v22 + -0.00260546068407 * v25
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.74429304573e-14 * 1 + 0.244645719196 * v1 + 0.198338135209 * v5 + 0.0455212066288 * v15 + 0.394857492206 * v21 + 0.110065283786 * v22
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.13574768563e-13 * 1 + 0.31631282101 * v2 + 0.344424057475 * v5 + 0.126961368018 * v10 + 0.000585452229785 * v16 + 0.209170084809 * v25
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.09414607902e-14 * 1 + 0.19503942798 * v4 + 0.274169238493 * v7 + 0.0985435292167 * v16 + 0.230479505551 * v21 + 0.240179594289 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86886687418e-13 * 1 + 0.260719810723 * v1 + 0.322852907711 * v5 + 0.166676207991 * v7 + 0.14924921949 * v21 + 0.11421915364 * v22
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2498786681e-13 * 1 + 0.384729670435 * v1 + 0.264144124381 * v5 + 0.117512585608 * v7 + 0.019567456682 * v9 + 0.226985537387 * v21
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.73759283934e-14 * 1 + 0.00179848000532 * v1 + 0.278593421704 * v5 + 0.299616512879 * v9 + 0.193764579839 * v20 + 0.266365551197 * v21
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.79587086195e-13 * 1 + 0.279465843836 * v3 + 0.23455022684 * v11 + 0.342214392387 * v20 + 0.164609231095 * v22 + 0.128606570674 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.40294624725e-13 * 1 + -0.0158721033574 * v4 + 0.410603869331 * v21 + 0.165880330576 * v22 + 0.482484346352 * v25 + 0.0790746710741 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.17459595188e-14 * 1 + 0.12672833739 * v1 + 0.183478101226 * v5 + 0.21648001669 * v9 + 0.371481457611 * v11 + 0.145728255667 * v17
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.02816742409e-13 * 1 + 0.267152302905 * v5 + 0.0811122740952 * v8 + 0.164598977363 * v17 + 0.199717845501 * v22 + 0.376159929793 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.57219726661e-13 * 1 + 0.176783679638 * v1 + 0.228538325108 * v11 + 0.0903361155745 * v15 + 0.239215464635 * v17 + 0.266211758599 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.01383635115e-14 * 1 + 0.0590128491787 * v1 + 0.281481470953 * v5 + 0.187251116714 * v7 + 0.234756583821 * v9 + 0.319864497768 * v21
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.14040495568e-13 * 1 + 0.0367338874048 * v1 + 0.543546077303 * v5 + 0.0865563786229 * v7 + 0.285643943942 * v21 + 0.0428735555383 * v25
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.15928145961e-14 * 1 + -0.0648543282519 * v2 + 0.210381838747 * v3 + 0.396056048055 * v5 + 0.0936168056179 * v18 + 0.342633320233 * v25
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.81922194334e-14 * 1 + 0.357038747825 * v1 + 0.382380358921 * v5 + -0.0916726011559 * v8 + 0.0390538707471 * v13 + 0.380523659488 * v22
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.05624657243e-13 * 1 + 0.319120665889 * v4 + 0.234579720242 * v5 + 0.253637999596 * v7 + -0.107825470991 * v17 + 0.31170013598 * v21
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.46677360477e-13 * 1 + 0.293571302177 * v5 + 0.0965253589966 * v7 + 0.18232713424 * v15 + 0.225868052373 * v19 + 0.290258346188 * v21
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.82529659462e-14 * 1 + 0.14427771287 * v7 + 0.375638966768 * v13 + 0.33986692721 * v20 + -0.00516671082779 * v27 + 0.132061121535 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.38573562477e-14 * 1 + 0.189538920896 * v5 + 0.349723936642 * v9 + 0.140868938587 * v11 + 0.283989939302 * v21 + 0.115403440383 * v22
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.48913928229e-13 * 1 + 0.292881928155 * v3 + 0.330591098972 * v5 + -0.574714606992 * v6 + 0.00998299444647 * v9 + 0.125447825178 * v22
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.61172549951e-13 * 1 + 0.287460425241 * v4 + 0.699022604588 * v5 + -0.0844986558672 * v17 + 0.130499124953 * v20 + -0.0544731071084 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.91320274868e-14 * 1 + 0.0568210782721 * v1 + 0.460013438715 * v5 + 0.0750733316621 * v15 + 0.595993455252 * v17 + -0.155882841753 * v21
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.31795193026e-14 * 1 + 0.319283876077 * v1 + 0.212358537096 * v5 + 0.125769253703 * v12 + 0.107235887118 * v20 + 0.238650967678 * v21
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.45987150718e-14 * 1 + 0.0852827056623 * v0 + 0.413016754073 * v5 + 0.226359360722 * v9 + 0.04510709476 * v22 + 0.254479806683 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.32832512947e-14 * 1 + 0.208315383734 * v1 + 0.318910313131 * v5 + 0.222490488429 * v11 + 0.114142183961 * v15 + 0.153204966493 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.03308553036e-14 * 1 + 0.0477799529618 * v4 + 0.134302454544 * v13 + 0.264167112402 * v15 + 0.277594621914 * v17 + 0.296115858606 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
