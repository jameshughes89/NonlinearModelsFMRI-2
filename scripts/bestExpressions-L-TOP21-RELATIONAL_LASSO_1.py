from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59555524662e-13 * 1 + 0.0 * v0 + 0.135296580164 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.213118121475 * v8 + 0.0165720350115 * v13 + 0.198206288262 * v15 + 0.0 * v16 + 0.32754319659 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0361377862178 * v28
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24866100551e-13 * 1 + 0.0 * v0 + 0.03668239589 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.206492494494 * v13 + 0.390136560147 * v15 + -0.0 * v16 + 0.147682142989 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.179659505474 * v27 + 0.0 * v28
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.62042446341e-14 * 1 + 0.0 * v0 + 0.227133517176 * v1 + 0.0 * v4 + 0.0 * v7 + 0.13872853377 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0510851562816 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.258423894567 * v17 + 0.0763054982372 * v18 + -0.256691230195 * v19 + 0.100463509535 * v21 + -0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.61050117827e-14 * 1 + 0.0470101554014 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.32169649217 * v13 + 0.0 * v14 + 0.0 * v15 + 0.203230388343 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0992045630406 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v26 + 0.22975843361 * v27 + 0.0 * v28
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.13489930952e-13 * 1 + 0.110509788327 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.058954444127 * v5 + 0.111255815647 * v6 + -0.0 * v7 + 0.365349315471 * v8 + -0.0 * v9 + 0.148581320338 * v11 + 0.171484742336 * v12 + -0.0 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v25 + 0.125255742342 * v26 + 0.0 * v27
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.6113968237e-13 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0249241887031 * v3 + 0.112546412589 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v12 + 0.0875627822161 * v13 + 0.304316761347 * v15 + -0.0 * v16 + 0.356809238328 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81851650371e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0479171753972 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.358069034977 * v13 + 0.283353282393 * v15 + 0.296996087175 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.12404151637e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.134002213903 * v6 + 0.0350501190124 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.210611921085 * v13 + 0.0 * v15 + 0.0 * v16 + 0.486637276048 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v21 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.32421835348e-14 * 1 + 0.0 * v0 + 0.0160231417706 * v1 + 0.0 * v2 + 0.0592792118356 * v4 + 0.0 * v5 + 0.190067886251 * v6 + 0.0 * v7 + 0.319470549196 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0831817943305 * v13 + -0.0709561956494 * v14 + 0.0 * v16 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.040834917552 * v26 + 0.204021548103 * v27
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.00938255377e-14 * 1 + 0.634038143101 * v1 + 0.0 * v2 + 0.0467561130527 * v4 + 0.0 * v5 + 0.0448094628104 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0179717455849 * v11 + 0.0 * v12 + 0.0 * v14 + 0.0 * v15 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.138578473761 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.94095826858e-14 * 1 + 0.0725473065029 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.380432190381 * v15 + 0.242327630124 * v17 + -0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.23545703334 * v26 + 0.0 * v27 + -0.0 * v28
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.02461541596e-14 * 1 + 0.0 * v0 + 0.163883510653 * v1 + 0.12483470791 * v4 + 0.0597114003508 * v6 + 0.0 * v7 + 0.275816841592 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.110943215773 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0106871286186 * v21 + 0.0 * v22 + 0.0 * v23 + 0.094212791174 * v26 + 0.11305397257 * v27
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.45670116613e-14 * 1 + 0.108477777312 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.106936088602 * v8 + 0.0 * v9 + 0.12617723628 * v11 + 0.0 * v12 + 0.0455174501666 * v13 + 0.228063656792 * v15 + 0.178697592482 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0264499441941 * v26 + 0.153607509512 * v27 + 0.0 * v28
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.74448070225e-15 * 1 + 0.0 * v0 + 0.0400071146005 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0150184413952 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0 * v11 + 0.444542548441 * v15 + 0.0 * v16 + 0.0187421437585 * v17 + 0.0600018318858 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.342895081702 * v27 + 0.0 * v28
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.69953997037e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0335952392596 * v4 + 0.0 * v5 + 0.212111102941 * v8 + 0.0901119387288 * v9 + 0.0 * v11 + 0.0 * v12 + 0.143588348459 * v13 + 0.0389009158531 * v15 + 0.0426194441431 * v16 + 0.0 * v17 + 0.0 * v18 + 0.136469473263 * v20 + 0.0 * v21 + 0.0696515422205 * v22 + 0.0 * v23 + 0.0 * v24 + 0.165256176872 * v27 + 0.0232542279647 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.33449957564e-13 * 1 + -0.0 * v0 + 0.170715276691 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0838974688905 * v5 + 0.0180944496943 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.035959670749 * v15 + 0.42271736245 * v17 + 0.0 * v20 + 0.136166383555 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.100531649915 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.75297727199e-14 * 1 + 0.0 * v1 + -0.0 * v2 + 0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0 * v8 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0824536525579 * v13 + 0.161030514693 * v15 + -0.0 * v16 + 0.413889317085 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.243222884193 * v27 + -0.0 * v28
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.51080974426e-14 * 1 + 0.0 * v0 + 0.0421450629512 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0431997592525 * v7 + 0.0 * v8 + 0.137199088683 * v12 + 0.0154370429632 * v13 + 0.201322906156 * v15 + 0.12463048128 * v16 + 0.339504335247 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v28
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.48762768006e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0448747949812 * v4 + 0.0 * v5 + 0.308538219621 * v6 + 0.237163417485 * v8 + 0.0 * v9 + 0.0 * v12 + 0.100394683384 * v13 + 0.073173264442 * v15 + 0.0 * v16 + 0.106913142826 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0646142220731 * v27 + 0.0 * v28
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.90000298149e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.244158393242 * v12 + 0.101551874665 * v13 + 0.183068202871 * v15 + 0.0 * v16 + 0.0796189951217 * v17 + 0.122270410087 * v18 + 0.141972561253 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0605635104043 * v27 + 0.0 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.07562176906e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.162639039017 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.178072212671 * v15 + 0.0 * v16 + 0.168689151383 * v17 + 0.0403607920614 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.27416353838 * v25 + 0.056690093944 * v27 + 0.0 * v28
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06640979786e-13 * 1 + 0.00306795003398 * v0 + 0.321801816148 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v13 + 0.348511691829 * v15 + 0.0 * v16 + 0.073891203898 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.171737639273 * v27 + 0.0 * v28
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.10183670602e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.00276633012053 * v6 + 0.0 * v7 + 0.335870089462 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0114771914023 * v13 + 0.119929924266 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.32683734758 * v26 + 0.133834139845 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906148908e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v8 + 0.0 * v10 + 0.0 * v12 + 0.0616600021863 * v13 + 0.190515450071 * v15 + 0.0 * v16 + 0.617885320295 * v17 + 0.0 * v18 + 0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94614503547e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + 0.0 * v4 + -0.0 * v7 + 0.258759346478 * v8 + 0.0 * v9 + -0.0 * v11 + 0.0 * v12 + 0.197208682775 * v13 + 0.376813029233 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v28
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.87137034248e-15 * 1 + 0.0 * v0 + 0.0800070120342 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0093095457049 * v6 + 0.0 * v7 + 0.143313554508 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0269982185226 * v13 + 0.0 * v15 + 0.0 * v16 + 0.46397464401 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.225093115859 * v27 + 0.0 * v28
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.51951385139e-13 * 1 + 0.194461962528 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0629497598943 * v5 + 0.0 * v6 + 0.0381377140698 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.177450468709 * v13 + 0.0 * v15 + 0.14566869841 * v17 + 0.121074644405 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0495105373516 * v23 + 0.0 * v25 + 0.071165364556 * v26 + 0.0828498474912 * v27
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.58955211116e-14 * 1 + 0.260816362004 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0285998887767 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v9 + 0.116566838575 * v12 + 0.327608308422 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0381247024001 * v21 + 0.0 * v22 + 0.0 * v23 + 0.106769453049 * v26 + 0.0619513197044 * v27 + 0.0 * v28
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58208885531e-14 * 1 + 0.31733443169 * v1 + 0.00631304818432 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.099524748048 * v9 + 0.0 * v11 + 0.0 * v12 + 0.229983869378 * v13 + -0.0 * v14 + 0.195290775864 * v15 + 0.0986720331975 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.20405286404e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0321123635654 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.555045660988 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v24 + 0.156776092654 * v26 + 0.167995049451 * v27 + 0.0 * v28
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.14270091578e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.139466656325 * v6 + 0.0 * v7 + 0.0898394340122 * v8 + 0.0 * v9 + 0.0 * v12 + 0.380339869151 * v13 + 0.197100897731 * v15 + 0.0168739209927 * v17 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.229829231885 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.1837853238e-13 * 1 + 0.0559270440262 * v0 + 0.159317549094 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0526013349178 * v5 + 0.00293055054279 * v6 + 0.000427410686812 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.112266096647 * v15 + 0.0638231235565 * v16 + 0.450347126833 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002307131e-13 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0940815103494 * v12 + 0.0241706421537 * v13 + 0.0 * v14 + 0.343009754152 * v15 + 0.0 * v16 + 0.26286068814 * v17 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.158203532889 * v27 + 0.0 * v28
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25345454122e-14 * 1 + 0.138286428161 * v1 + 0.0 * v4 + 0.0438523307705 * v5 + 0.210894388835 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0197332443668 * v13 + 0.10804848146 * v14 + 0.0 * v15 + 0.207422628024 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v21 + 0.0377154268504 * v25 + 0.0 * v26 + 0.229585006597 * v27
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37660565455e-13 * 1 + -0.0 * v0 + 0.0468829519295 * v1 + 0.0 * v3 + 0.0 * v5 + 0.0 * v6 + 0.157689063553 * v7 + 0.112837972868 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + -0.0 * v14 + 0.110289346612 * v15 + 0.0 * v16 + 0.101959457496 * v17 + 0.408768176552 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33921035709e-13 * 1 + 0.0 * v0 + 0.25320621321 * v1 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.111688707274 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v12 + 0.0917494587524 * v13 + 0.440385007511 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.00572738297748 * v21 + 0.0 * v23 + -0.0 * v24 + 0.00325846210259 * v27
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97645556094e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v4 + 0.0 * v5 + 0.188451338022 * v7 + 0.0 * v8 + 0.0 * v9 + 0.222950669328 * v13 + 0.0 * v15 + 0.224344365131 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.226574506065 * v27 + 0.0 * v28
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53928837031e-13 * 1 + 0.0 * v0 + 0.103255850882 * v1 + -0.0 * v5 + 0.254801296176 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v11 + 0.18268515641 * v13 + 0.218387612467 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0995123470439 * v26 + 0.0162779266881 * v27 + -0.0 * v28
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.0293967436e-14 * 1 + 0.0 * v0 + 0.00513814008959 * v1 + 0.0 * v2 + 0.0 * v3 + 0.209591818399 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0780840945141 * v12 + 0.569929879945 * v15 + 0.0 * v16 + 0.00821691771072 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0726865932969 * v27
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20207070142e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0122749098667 * v12 + 0.0 * v13 + 0.152708672337 * v15 + 0.0 * v16 + 0.391813207814 * v17 + 0.0 * v18 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.3008183596 * v27 + 0.0 * v28
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.22962658376e-15 * 1 + 0.0950647609746 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + 0.0303008085802 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0943328734733 * v15 + 0.483049920005 * v17 + 0.0 * v18 + 0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0992366535836 * v26 + 0.119088807873 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
