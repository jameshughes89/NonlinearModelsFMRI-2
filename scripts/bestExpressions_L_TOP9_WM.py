from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.17847950729e-13 * 1 + -0.0782508014687 * v0 + 0.161561903747 * v3 + 0.126036120129 * v4 + 0.229450390978 * v15 + 0.155592341041 * v16 + 0.357443778828 * v17 + 0.0569577405181 * v20 + 0.0223392102288 * v27
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.57256770832e-14 * 1 + 0.0376272653714 * v4 + 0.286949324569 * v5 + -0.232498391072 * v8 + 0.213711131072 * v15 + 0.186592079708 * v17 + 0.125439820574 * v20 + 0.255000850606 * v21 + 0.233439606512 * v25
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.89113108817e-13 * 1 + -0.193688474503 * v3 + 0.209304499825 * v5 + 0.176906222001 * v9 + 0.239642189548 * v12 + -0.0978501824548 * v13 + 0.304472255888 * v16 + 0.239584133506 * v19 + 0.0360431654712 * v25
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.13947929634e-13 * 1 + -0.0509044642645 * v1 + 0.00777701211972 * v4 + 0.0288923690509 * v16 + 0.230076499339 * v17 + 0.12772487672 * v18 + 0.244781322703 * v20 + 0.419054392851 * v22 + 0.00147359673672 * v23
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.27410489648e-13 * 1 + 0.070937869838 * v4 + 0.163698506363 * v5 + -0.0158710053315 * v6 + -0.0268850979145 * v14 + 0.1627715503 * v20 + 0.285796216326 * v25 + 0.0215367774124 * v26 + 0.361650167788 * v27
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.58699509484e-14 * 1 + 0.204173542901 * v5 + 0.160384237983 * v10 + 0.0306509319955 * v11 + 0.130077182324 * v15 + 0.34089252257 * v17 + 0.0314566791482 * v18 + 0.30624790854 * v23 + -0.154809966675 * v27
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.9007528256e-13 * 1 + 0.252323275971 * v1 + 0.0802571556205 * v8 + 0.119041853859 * v15 + -0.00617923480823 * v17 + 3.91179725081e-05 * v18 + 0.443147914617 * v20 + 0.451246981751 * v21 + -0.380594264466 * v27
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.39258905524e-14 * 1 + 0.0632387170648 * v1 + 0.426861906973 * v2 + -0.0093526892782 * v6 + 0.159899378559 * v7 + 0.11951929162 * v17 + 0.306635879469 * v20 + 0.0739523901309 * v23 + -0.083713138096 * v27
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.39053560805e-13 * 1 + -0.0629558088505 * v4 + 0.296477345273 * v5 + 0.13264707873 * v9 + 0.193674303412 * v15 + 0.0843672817271 * v17 + 0.103009838207 * v20 + 0.228059253576 * v21 + 0.0828765007168 * v22
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.03871069996e-13 * 1 + 0.351766527438 * v4 + 0.184415057113 * v7 + -0.0255336850416 * v8 + 0.0762905026598 * v12 + -0.0842285072522 * v17 + 0.0379418035014 * v20 + 0.444413832787 * v21 + 0.0494722022716 * v27
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.23066983404e-14 * 1 + -0.0419116465411 * v0 + 0.094555233144 * v5 + 0.108932835245 * v8 + 0.117943336868 * v16 + -0.0373176695916 * v17 + 0.336812024648 * v21 + 0.412870927805 * v22 + 0.0111015989088 * v23
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68314933117e-13 * 1 + 0.156139257388 * v1 + 0.193261160219 * v7 + 0.167307847851 * v11 + 0.129378083264 * v15 + 0.111427370885 * v17 + 0.177698286257 * v19 + 0.182103471465 * v20 + -0.0347008686236 * v27
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.35746683509e-14 * 1 + 0.210342501141 * v2 + 0.211152057808 * v3 + -0.395695933766 * v4 + 0.130300965178 * v10 + -0.537080440067 * v11 + 0.647513492077 * v17 + 0.615974349939 * v20 + 0.0781200436536 * v25
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.61972876662e-14 * 1 + 0.0663727657183 * v1 + 0.0840295443409 * v4 + 0.410118516888 * v5 + -0.155146027085 * v8 + 0.474121434892 * v15 + 0.206657393609 * v20 + 0.158629588334 * v25 + -0.167668441932 * v27
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.42621183093e-14 * 1 + 0.15904564707 * v5 + -0.00592233816955 * v8 + 0.333614145621 * v9 + 0.422861038158 * v15 + 0.198364792318 * v17 + -0.0877650039399 * v20 + 0.0780515066509 * v21 + -0.128329431185 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.16016132979e-13 * 1 + 0.215187537773 * v1 + 0.142603939453 * v5 + 0.113019136133 * v9 + 0.235028997349 * v10 + -0.113714603916 * v16 + 0.08772259653 * v20 + 0.2566864097 * v22 + 0.109871048966 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.86549830467e-14 * 1 + -0.0898915952179 * v0 + 0.135800375839 * v15 + 0.452631553332 * v16 + -0.000178037452935 * v17 + 0.328403149408 * v21 + 0.163752134378 * v22 + -0.00465224454389 * v24 + 0.175526918088 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25872091111e-13 * 1 + 0.118277864152 * v5 + 0.0899674522605 * v7 + 0.00935450730681 * v8 + 0.320151224302 * v9 + 0.231655154736 * v15 + 0.0219675419557 * v18 + 0.177477619875 * v21 + 0.113818361357 * v25
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.79452133094e-14 * 1 + 0.101868236346 * v1 + 0.410264510737 * v5 + 0.218332466458 * v6 + 0.0417489361468 * v7 + 0.160945320833 * v11 + 0.196243524613 * v21 + 0.278768178933 * v23 + -0.366449684741 * v25
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.29746622951e-14 * 1 + -0.111768072534 * v4 + 0.196311151675 * v5 + 0.171080082552 * v9 + -0.0204341485759 * v17 + 0.20871414619 * v20 + 0.349938040322 * v21 + 0.178152613694 * v22 + 0.0728476732177 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.07183498473e-14 * 1 + -0.160334278414 * v3 + 0.202026743034 * v5 + 0.148589618779 * v11 + 0.00226651691682 * v12 + 0.114821840276 * v13 + 0.217558985533 * v17 + 0.158912824204 * v25 + 0.40640811424 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.5857804711e-14 * 1 + 0.15858598083 * v1 + 0.119748693681 * v5 + -0.0840579217224 * v7 + 0.116785684932 * v9 + 0.19077075845 * v15 + 0.193692123846 * v19 + 0.286136495163 * v20 + 0.0768074597277 * v21
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64397109142e-13 * 1 + 0.185474752789 * v1 + 0.139094385083 * v4 + 0.425027850485 * v5 + -0.21489355332 * v7 + -0.18088983191 * v8 + 0.0177153348141 * v13 + 0.288510671941 * v20 + 0.357843969761 * v21
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.34865694082e-15 * 1 + 0.055823940158 * v5 + 0.101163703669 * v8 + 0.0841371272545 * v11 + 0.0590310099623 * v15 + 0.277093760316 * v17 + -0.0644278151031 * v21 + 0.559503742043 * v22 + -0.0357612172517 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.11723644303e-14 * 1 + 0.24091251447 * v1 + -0.0723878768335 * v3 + 0.0731501833263 * v15 + 0.0599430839589 * v16 + 0.244028217406 * v17 + 0.178261443115 * v22 + 0.215184569168 * v23 + 0.0765989184424 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.23137758715e-14 * 1 + 0.191860219495 * v1 + -0.00279403979726 * v4 + 0.343868754315 * v5 + -0.203399048737 * v8 + 0.139261546273 * v12 + 0.0731676853995 * v17 + 0.191504683132 * v20 + 0.289780262737 * v21
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.41791159802e-13 * 1 + 0.276125327562 * v1 + -0.0187458899406 * v3 + 0.103873104728 * v4 + 0.154608601061 * v9 + 0.149140708309 * v16 + 0.0656756312647 * v22 + 0.0749500328164 * v23 + 0.311018672399 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.74206246081e-14 * 1 + -0.0987383374017 * v2 + -0.083703021398 * v3 + 0.335594393073 * v5 + -0.0892347948334 * v7 + 0.238337484546 * v20 + 0.39576777223 * v21 + 0.228885511202 * v25 + 0.112926543308 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59832213255e-13 * 1 + 0.206603452817 * v1 + 0.122872848271 * v4 + 0.28424360428 * v5 + -0.0489997072413 * v8 + 0.155791068843 * v13 + 0.0265798727326 * v17 + 0.288212696818 * v21 + 0.0284463526308 * v27
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.04084012058e-13 * 1 + -0.0378731168625 * v2 + -0.092998523935 * v3 + 0.0466886440568 * v9 + 0.281520482421 * v11 + 0.0711078249771 * v19 + 0.357797992181 * v21 + 0.18024691455 * v22 + 0.220569099521 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.21828669539e-13 * 1 + 0.206214641389 * v0 + 0.00130815999956 * v4 + 0.104601419126 * v5 + 0.15691199702 * v13 + 0.0460374808228 * v17 + 0.0198643637 * v20 + 0.458331307847 * v21 + 0.0355509788231 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.94730850686e-13 * 1 + 0.114905198053 * v4 + 0.268068881707 * v7 + 0.0788938014504 * v13 + 0.161346499695 * v20 + 0.407867078805 * v21 + 0.212195099079 * v22 + -0.0963975765449 * v27 + -0.113763413363 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02291286318e-15 * 1 + 0.0546002637512 * v2 + -0.116985597628 * v5 + 0.262252974249 * v9 + 0.0155869573028 * v16 + 0.0251611479878 * v20 + 0.346158868193 * v21 + 0.258162153297 * v22 + 0.226911800779 * v25
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.7460179883e-14 * 1 + -0.052194843467 * v1 + -0.269279333887 * v6 + 0.0389868540566 * v15 + -0.188362972078 * v16 + 0.309786885644 * v20 + 0.15529396213 * v21 + 0.300817536395 * v22 + -0.0666173704721 * v27
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.15472022598e-13 * 1 + 0.0143197351057 * v1 + -0.109032330034 * v4 + -0.00889419611621 * v7 + 0.271598262134 * v9 + 0.25603261849 * v20 + 0.234331180003 * v21 + 0.296033198913 * v22 + 0.0350165598003 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.40633847657e-13 * 1 + 0.530178663654 * v0 + -0.0202529260006 * v4 + 0.0962249177043 * v9 + -0.356949719343 * v16 + 0.125796738712 * v17 + 0.434185944408 * v22 + 0.374530417662 * v23 + 0.10131340871 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.30739946318e-15 * 1 + -0.0389818388211 * v0 + 0.111685464229 * v1 + 0.128530142698 * v3 + 0.1809767127 * v4 + 0.0467782917425 * v15 + 0.131843332192 * v16 + 0.381843035762 * v21 + 0.202479613904 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.17713493363e-14 * 1 + 0.154912457362 * v1 + 0.342648686004 * v5 + 0.0650564605 * v9 + 0.115926935664 * v19 + 0.0880645489401 * v21 + 0.187047985738 * v22 + 0.0499443796665 * v25 + 0.0909262240608 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.39906814418e-13 * 1 + 0.131777772232 * v1 + -0.135629565129 * v8 + 0.216361271962 * v9 + 0.352078313235 * v15 + 0.139519952424 * v20 + 0.3068632137 * v21 + -0.0473840007255 * v27 + 0.0999980118505 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.13808226593e-13 * 1 + 0.0649314637428 * v3 + 0.118360302311 * v4 + 0.101150776715 * v5 + 0.432658454401 * v9 + 0.20650845091 * v17 + 0.0651148428723 * v22 + -0.0291829816312 * v27 + 0.0418798621498 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
