from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.00267367526e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.115402009841 * v3 + 0.146408263596 * v4 + 0.160445741007 * v15 + 0.0827646182719 * v16 + 0.363581531819 * v17 + 0.00417578407273 * v20 + 0.0 * v27 + 0.00612080870318 * v28
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.55704841802e-14 * 1 + 0.0 * v4 + 0.234492871384 * v5 + 0.049677692272 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.262050994064 * v17 + 0.0601134817394 * v20 + 0.222768789357 * v21 + 0.0959323465692 * v25
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17467541733e-13 * 1 + 0.0 * v3 + 0.186191245617 * v5 + 0.0625367916414 * v9 + 0.0 * v12 + 0.0 * v13 + 0.152964645151 * v15 + 0.224852510143 * v16 + 0.22245571305 * v19 + 0.000210180149359 * v25 + 0.0 * v28
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.43458295074e-14 * 1 + 0.0 * v1 + 0.0206350687794 * v4 + 0.0 * v16 + 0.249610962955 * v17 + 0.0934539776494 * v18 + 0.165689666886 * v20 + 0.0 * v21 + 0.363185409161 * v22 + 0.0 * v23 + 0.0 * v27
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.22850638104e-13 * 1 + 0.0309497566793 * v4 + 0.121131737437 * v5 + 0.0 * v6 + 0.00189592782115 * v8 + 0.0 * v14 + 0.180595775784 * v20 + 0.228724886832 * v25 + 0.0 * v26 + 0.300996567543 * v27 + 0.0475156988549 * v28
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.77908187281e-14 * 1 + 0.149263324049 * v5 + 0.126214404173 * v10 + 0.0 * v11 + 0.0700147283363 * v15 + 0.242594267747 * v17 + 0.033488104065 * v18 + 0.0791778535778 * v22 + 0.247804618924 * v23 + 0.0 * v27 + 0.0 * v28
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.41251981671e-13 * 1 + 0.194318087833 * v1 + 0.0215535353492 * v4 + 0.17296075531 * v5 + 0.0 * v8 + 0.050009891207 * v15 + 0.0 * v17 + 0.0 * v18 + 0.142021508785 * v20 + 0.304365420681 * v21 + 0.0 * v27
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90737481592e-14 * 1 + 0.0420795526305 * v1 + 0.429348410988 * v2 + 0.0 * v6 + 0.0423146389066 * v7 + 0.0 * v15 + 0.0141295770927 * v17 + 0.287173771009 * v20 + 0.112489339529 * v21 + 0.0 * v23 + 0.0 * v27
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705462096e-13 * 1 + 0.0 * v4 + 0.216467484239 * v5 + 0.0 * v8 + 0.0783053106427 * v9 + 0.0859893020782 * v11 + 0.155477611012 * v15 + 0.0769176692418 * v17 + 0.0487113288933 * v20 + 0.204805833901 * v21 + 0.0762290733181 * v22
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27329630522e-13 * 1 + 0.220438564502 * v4 + 0.0730511342426 * v7 + 0.053731477373 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v17 + 0.0481754912868 * v20 + 0.327896916606 * v21 + 0.169027432231 * v22 + 0.0407145037416 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.21600764173e-14 * 1 + 0.0 * v0 + 0.137630046992 * v5 + 0.0 * v7 + 0.0625190467011 * v8 + 0.0815936898337 * v16 + 0.0 * v17 + 0.0 * v20 + 0.28344743591 * v21 + 0.326594135575 * v22 + 7.37499227828e-05 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.17694992141e-13 * 1 + 0.132495893121 * v1 + 0.153542359469 * v7 + 0.0 * v9 + 0.126480822709 * v11 + 0.0948684538715 * v15 + 0.0503328664809 * v17 + 0.0726633471269 * v19 + 0.176012109785 * v20 + 0.145541182632 * v22 + 0.0 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.14064874288e-15 * 1 + 0.0 * v2 + 0.154806529566 * v3 + 0.0 * v4 + 0.0390141033909 * v10 + -0.0 * v11 + 0.480620846467 * v17 + 0.118542451083 * v20 + -0.0 * v22 + 0.0 * v24 + 0.0 * v25
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.94658983763e-14 * 1 + 0.00686322034354 * v1 + 0.0155740304066 * v4 + 0.316723467324 * v5 + 0.0 * v8 + 0.0 * v9 + 0.310526389924 * v15 + 0.136058333998 * v20 + 0.0647140711657 * v22 + 0.108509142786 * v25 + 0.0 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.14132786932e-14 * 1 + 0.106837960396 * v5 + 0.0 * v8 + 0.226662655533 * v9 + 0.359593622438 * v15 + 0.0992895860925 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0514470995919 * v21 + 0.0 * v27 + 0.0 * v28
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.17226340934e-13 * 1 + 0.177371807232 * v1 + 0.0811877874965 * v5 + 0.00521256180647 * v9 + 0.0932911825606 * v10 + 0.0 * v11 + 0.0 * v16 + 0.0787135442677 * v20 + 0.249524578804 * v22 + 0.161648853416 * v25 + 0.100688415209 * v28
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97301860824e-14 * 1 + 0.0 * v0 + 0.0 * v11 + 0.0932221887336 * v15 + 0.305870625845 * v16 + 0.0 * v17 + 0.0348922409034 * v19 + 0.27571304226 * v21 + 0.179499945468 * v22 + 0.0 * v24 + 0.12303712689 * v28
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.32026639868e-13 * 1 + 0.0 * v1 + 0.071539865245 * v5 + 0.0897878323872 * v7 + 0.0 * v8 + 0.287672742117 * v9 + 0.133938064507 * v15 + 0.0 * v18 + 0.201179030562 * v21 + 0.0918123640417 * v23 + 0.0669376383277 * v25
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75895666931e-14 * 1 + 0.0755397630752 * v1 + 0.145942948012 * v5 + 0.164242573099 * v6 + 0.0 * v7 + 0.18359939939 * v11 + 0.147876113025 * v21 + 0.195371302918 * v23 + 0.0 * v25 + 0.0 * v27 + 0.00821073140288 * v28
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.84210529587e-14 * 1 + 0.0 * v4 + 0.0691109678594 * v5 + 0.0 * v8 + 0.12350602517 * v9 + 0.0 * v17 + 0.0949598554169 * v20 + 0.379943254587 * v21 + 0.115323778375 * v22 + 0.140556890777 * v25 + 0.0100821562495 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13788157612e-14 * 1 + 0.104452990743 * v2 + 0.0 * v3 + 0.110593132857 * v5 + 0.0978524086522 * v11 + 0.0 * v12 + 0.0737787514932 * v13 + 0.18984288786 * v17 + 0.0 * v22 + 0.0658602631878 * v25 + 0.312821365281 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49164892836e-14 * 1 + 0.122922554849 * v1 + 0.0838212640637 * v5 + 0.0 * v7 + 0.0916718149034 * v9 + 0.148519799935 * v15 + 0.137869477203 * v19 + 0.28839843235 * v20 + 0.0549626839906 * v21 + 0.0 * v22 + 0.0 * v27
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4863065688e-13 * 1 + 0.0951964949276 * v1 + 0.172942737564 * v4 + 0.242933926035 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v13 + 0.186125196527 * v20 + 0.208749511221 * v21 + 0.0 * v26 + 0.0 * v27
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52921438978e-15 * 1 + 0.0126551516825 * v4 + 0.0 * v5 + 0.0671375047891 * v8 + 0.0177897119217 * v11 + 0.0 * v15 + 0.0 * v16 + 0.260475485828 * v17 + 0.0 * v21 + 0.555471349895 * v22 + 0.0 * v28
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.98115311466e-14 * 1 + 0.22761377572 * v1 + 0.0 * v3 + 0.0 * v8 + 0.0263967146995 * v15 + 0.00452845289711 * v16 + 0.240965160878 * v17 + 0.0 * v19 + 0.109329874442 * v22 + 0.21808541415 * v23 + 0.0554123178618 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03355644168e-13 * 1 + 0.152324909893 * v1 + 0.112337735864 * v4 + 0.380694324592 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0 * v17 + 0.0426871419271 * v20 + 0.184350522873 * v21 + 0.0 * v27
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.70901990187e-13 * 1 + 0.122074013327 * v1 + 0.00687936579666 * v3 + 0.0679243279035 * v4 + 0.228004542392 * v9 + 0.0 * v13 + 0.168932222591 * v15 + 0.0777305976619 * v16 + 0.0898472131625 * v22 + 0.0580128136554 * v23 + 0.172129619533 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.76643564086e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.240202993778 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.153679513608 * v20 + 0.248810873684 * v21 + 0.192500146968 * v25 + 0.0928702262314 * v28
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.85590739055e-13 * 1 + 0.163459754694 * v1 + 0.112051808353 * v4 + 0.187619878446 * v5 + 0.0 * v8 + 0.115597933389 * v13 + 0.0464022798922 * v15 + 0.0 * v17 + 0.222321624365 * v21 + 0.0815082318683 * v22 + 0.0160558706654 * v27
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.11369414806e-14 * 1 + 0.0 * v2 + 0.0 * v3 + 0.0259525693882 * v9 + 0.24352938358 * v11 + 0.0882762866786 * v15 + 0.0204090709123 * v19 + 0.235176464613 * v21 + 0.172832914596 * v22 + 0.0 * v23 + 0.141568555385 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39629826553e-13 * 1 + 0.154607341319 * v0 + 0.109826341076 * v4 + 0.0 * v5 + 0.0762397578645 * v13 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.428656310336 * v21 + 0.142549668741 * v22 + 0.0 * v28
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47606092941e-13 * 1 + 0.0391095515032 * v4 + 0.227878709042 * v7 + 0.0 * v8 + 0.0 * v13 + 0.0 * v18 + 0.159993746171 * v20 + 0.330917405791 * v21 + 0.159423913435 * v22 + 0.0 * v27 + 0.0 * v28
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.13347929942e-14 * 1 + 0.0375178782009 * v2 + 0.0 * v5 + 0.229949811917 * v9 + 0.0438737255498 * v11 + 0.0 * v16 + 0.0 * v20 + 0.273946848075 * v21 + 0.214689468446 * v22 + 0.142120760236 * v25 + 0.0 * v28
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16648952446e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.262931406776 * v6 + 0.0200309775529 * v15 + -0.0894953453871 * v16 + 0.0 * v17 + 0.247301324081 * v20 + 0.0595895545224 * v21 + 0.300941328739 * v22 + 0.0 * v27
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.8488301062e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.240100874445 * v5 + 0.0980756767755 * v7 + 0.123482973773 * v9 + 0.159693275668 * v20 + 0.0334785663467 * v21 + 0.292493359509 * v22 + 0.0 * v23 + 0.0 * v28
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.16383850975e-13 * 1 + 0.309148580988 * v0 + -0.0 * v2 + 0.0 * v4 + 0.372453765559 * v6 + 0.0 * v9 + 0.0 * v16 + 0.137098990709 * v17 + 0.197211911777 * v22 + 0.0 * v23 + 0.176168519102 * v28
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.48674652592e-14 * 1 + 0.00959406936673 * v0 + 0.0139939881341 * v1 + 0.117879078369 * v3 + 0.0554441213537 * v4 + 0.0 * v15 + 0.0718349492604 * v16 + 0.173043796023 * v20 + 0.383184099735 * v21 + 0.0 * v23 + 0.181497836856 * v28
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.60895439301e-14 * 1 + 0.141533786559 * v1 + 0.319679201221 * v5 + 0.0 * v7 + 0.05110445521 * v9 + 0.0 * v17 + 0.0938322566583 * v19 + 0.068399011489 * v21 + 0.183136092698 * v22 + 0.0262133402907 * v25 + 0.061781145614 * v28
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12366572724e-13 * 1 + 0.129383518991 * v1 + 0.0 * v8 + 0.181335280991 * v9 + 0.00699377850996 * v11 + 0.248699262594 * v15 + 0.0 * v17 + 0.0584779128174 * v20 + 0.222153159006 * v21 + 0.0 * v27 + 0.0654717550432 * v28
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.08908395903e-13 * 1 + 0.0 * v1 + 0.0385125124726 * v3 + 0.121301935234 * v4 + 0.0862404738529 * v5 + 0.385057847082 * v9 + 0.168809922694 * v17 + 0.0 * v20 + 0.0380234678729 * v22 + 0.0 * v27 + 0.0456084134058 * v28
def func_WM_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.52402324284e-14 * 1 + 0.0 * v1 + 0.326324572567 * v3 + 0.108645044792 * v4 + 0.0619734780065 * v11 + 0.0 * v13 + 0.171852702108 * v17 + 0.16231593757 * v20 + 0.0499994488642 * v23 + 0.0 * v26 + 0.0 * v27

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,funcL_WM_114924,]

def getFuncs(): return funcs
