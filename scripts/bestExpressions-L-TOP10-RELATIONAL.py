from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.216494950051 * 1 + 0.168477011593 * v0 + -0.0226605891243 * v1 + 0.351686242601 * v4 + 0.395070595974 * v8 + -0.111624472319 * v17 + 0.0157344149158 * v18 + -0.155954500288 * v20 + 0.159166656375 * v23
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.102903315027 * 1 + 0.0525483846855 * v1 + 0.0226820939829 * v5 + 0.321469245727 * v8 + 0.563020220656 * v13 + 0.212414457221 * v15 + -0.0165323678657 * v17 + -0.357002237298 * v18 + 0.255207337976 * v20
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.450012884648 * 1 + 0.204246070149 * v0 + 0.0763879212508 * v1 + 0.0147750333227 * v8 + -0.0709299352896 * v13 + 0.438340493087 * v15 + 0.357790735184 * v17 + 0.0759618061641 * v18 + 0.295280868015 * v21
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.148626195102 * 1 + -0.233416186579 * v3 + 0.436264004508 * v4 + 0.0403566706127 * v13 + 0.397387984895 * v15 + -0.290083463274 * v17 + 0.112226986081 * v19 + 0.0640074350249 * v21 + 0.325064253377 * v22
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.393200584839 * 1 + 0.385105084735 * v1 + 0.251313256541 * v8 + 0.251544384776 * v11 + -0.219950251654 * v12 + 0.0936508014037 * v15 + -0.115716417353 * v17 + 0.0570742353605 * v18 + -0.0931992476157 * v25
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0860050373211 * 1 + 0.396921633359 * v3 + -0.284739253802 * v4 + 0.216317172292 * v8 + 0.137660726062 * v12 + 0.521861791314 * v13 + 0.398528973107 * v15 + -0.106326969182 * v17 + -0.346365484992 * v27
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0668883775857 * 1 + 0.0333690116573 * v0 + 0.174480833448 * v1 + -0.0675186322832 * v8 + 0.420995421931 * v12 + 0.369453715248 * v13 + 0.363562550052 * v15 + -0.0305605280697 * v17 + -0.0866992065469 * v20
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.241888550669 * 1 + 0.0835594655987 * v6 + -0.166493730863 * v11 + 0.528166501427 * v12 + 0.0211409986639 * v13 + 0.680301649197 * v15 + 0.0758024090122 * v17 + -0.153163311603 * v18 + -0.31918855787 * v21
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.128487449723 * 1 + 0.369679680388 * v1 + -0.161014375457 * v6 + 0.61310047071 * v7 + -0.0161458847198 * v8 + 0.157762422637 * v9 + -0.194446364277 * v13 + -0.13730809948 * v18 + 0.288495292636 * v23
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.738317746892 * 1 + 0.27570971576 * v1 + -0.00134828850252 * v2 + 0.223968249842 * v4 + -0.0389256164349 * v6 + -0.251887586501 * v7 + -0.398301320327 * v8 + 0.0508833245409 * v9 + 0.387364653723 * v14
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0742761363538 * 1 + -0.192297222708 * v1 + 0.137536235191 * v4 + -0.431662010512 * v5 + 0.533445609089 * v8 + 0.222131579981 * v15 + 0.0368364715445 * v17 + 0.184454286415 * v20 + 0.377289707254 * v21
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.237532407282 * 1 + 0.248906664121 * v1 + 0.410820255688 * v4 + 0.0129035827073 * v8 + -0.14913577162 * v11 + 0.0738023514501 * v12 + -0.0435627721643 * v15 + 0.0650552050054 * v18 + 0.188196094137 * v21
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.173654822764 * 1 + 0.0691659147261 * v1 + 0.0503790781167 * v4 + 0.141610490911 * v6 + 0.249625661335 * v8 + 0.268329336064 * v15 + 0.068657007722 * v17 + -0.101356036821 * v20 + 0.122295809088 * v21
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0867794172191 * 1 + -0.0112100003453 * v1 + 0.527434017134 * v8 + -0.0696100338624 * v15 + 0.170755687425 * v17 + -0.129132643991 * v18 + -0.0394419108629 * v20 + 0.0191647021998 * v21 + 0.494204323353 * v22
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.180820810783 * 1 + 0.0465732878461 * v8 + 0.198010830391 * v12 + 0.19666160001 * v13 + 0.104254327036 * v20 + -0.0330840957349 * v22 + 0.0585068808574 * v23 + 0.265342338086 * v24 + 0.0522978264777 * v27
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.229273282594 * 1 + 0.0439151633229 * v1 + 0.220591971909 * v4 + -0.0751960935644 * v5 + 0.167209086314 * v8 + 0.371090754479 * v15 + -0.12401416941 * v17 + 0.175176185862 * v20 + 0.0729651884339 * v21
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0841870799408 * 1 + -0.0717414843448 * v1 + -0.0571028140294 * v4 + 0.181112266466 * v8 + 0.25928335862 * v13 + 0.473573110027 * v15 + -0.228230595125 * v17 + 0.0981238158381 * v20 + 0.304766387977 * v22
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0639346144639 * 1 + 0.128993579915 * v5 + 0.0081999798238 * v7 + 0.323972556015 * v8 + 0.169207221535 * v12 + 0.358130193072 * v15 + 0.145661337824 * v17 + -0.00975622957832 * v20 + -0.0665783269309 * v21
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.11400337042 * 1 + 0.101896904827 * v2 + 0.275390756882 * v4 + 0.586834494512 * v6 + -0.400339095777 * v8 + 0.299842197922 * v12 + 0.0787967619254 * v13 + 0.0915211708777 * v15 + 0.124711839853 * v17
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0592602739874 * 1 + 0.475337221722 * v5 + 0.16571678626 * v12 + -0.29798156018 * v15 + 0.220639222033 * v16 + 0.208105326448 * v17 + 0.250457395802 * v18 + -0.0271527515262 * v20 + -0.0170837417026 * v21
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.504295064873 * 1 + 0.153135423756 * v4 + 0.0766586578864 * v8 + 0.0733073411968 * v11 + 0.421684509882 * v13 + 0.212653128251 * v15 + -0.122963404436 * v17 + 0.245382166628 * v21 + -0.569707916278 * v25
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.385373636985 * 1 + 0.0422571290384 * v1 + -0.0906704758087 * v4 + -0.000839108638503 * v7 + -0.115965560691 * v8 + 0.423290532522 * v9 + 0.136309434587 * v15 + 0.000197551220863 * v17 + 0.239507917232 * v18
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0463491842718 * 1 + 0.0424753191304 * v1 + -0.0780014491179 * v4 + 0.0925935376922 * v5 + 0.57553993708 * v6 + -0.0858089932473 * v8 + -0.0311229972278 * v20 + 0.294908722445 * v21 + 0.252519581801 * v26
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0821276393372 * 1 + 0.17763403166 * v8 + 0.20824689767 * v12 + 0.414490943636 * v13 + 0.708542032658 * v15 + -0.250541181027 * v17 + 0.0735231488946 * v18 + -0.17274114054 * v20 + -0.0980864279802 * v22
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.106697305712 * 1 + 0.0334664251022 * v0 + -0.0935683654599 * v1 + 0.876178460841 * v4 + -0.531488445144 * v8 + 0.530348863007 * v12 + 0.414441392074 * v13 + -0.0730171211034 * v15 + -0.110637780104 * v17
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.106818431136 * 1 + -0.162569900682 * v1 + -0.00678878583521 * v4 + 0.295101635785 * v5 + 0.41404928474 * v8 + -0.0747012037361 * v17 + 0.00103295542701 * v18 + 0.0305184613913 * v20 + 0.445340206496 * v21
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.362219932991 * 1 + 0.223330265293 * v1 + 0.188923665621 * v5 + -0.274306145288 * v7 + 0.38687651527 * v9 + 0.46390135955 * v13 + -0.250301051226 * v17 + -0.0116376787652 * v20 + -0.0548418275814 * v21
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.351987456425 * 1 + 0.0629853426933 * v1 + -0.0479154295406 * v4 + -0.532007153968 * v8 + 0.325658581945 * v9 + 0.314439644136 * v12 + 0.16033462162 * v13 + 0.397139507403 * v26 + 0.0440043876352 * v27
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.405241861095 * 1 + -0.0110804974779 * v1 + 0.128199242223 * v4 + 0.27486250567 * v9 + 0.247932187834 * v13 + 0.167375488708 * v15 + 0.019675296335 * v17 + -0.10287279024 * v20 + -0.0644765469169 * v21
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.140323158845 * 1 + 0.190419429883 * v1 + 0.0457825893328 * v4 + 0.178382125358 * v9 + 0.138437855846 * v13 + 0.508358654147 * v15 + -0.31267464948 * v17 + 0.299018524812 * v20 + -0.222440690537 * v27
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0731689155495 * 1 + -0.110952312043 * v1 + -0.0918292817059 * v4 + 0.325665939449 * v5 + -0.0631345789239 * v8 + 0.354179545724 * v12 + 0.326565981962 * v13 + -0.0514666447493 * v17 + 0.32801879648 * v21
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.124908137301 * 1 + 0.302920052545 * v0 + 0.149184008305 * v1 + 0.113664223349 * v8 + 0.0996910860418 * v15 + 0.399171258523 * v16 + -0.142912520129 * v17 + -0.109525766154 * v18 + 0.0702502138591 * v23
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.03839151512 * 1 + -0.157317337921 * v3 + 0.0825325900359 * v4 + -0.100761852991 * v5 + 0.255433208199 * v8 + 0.0508517187964 * v12 + 0.392663573258 * v13 + 0.279778718177 * v15 + 0.277019240391 * v17
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.183621414878 * 1 + 0.0642071330128 * v1 + 0.251611747977 * v5 + -0.0162369003179 * v6 + 0.07303675008 * v7 + 0.126378087127 * v13 + 0.256684157339 * v14 + 0.0643105385839 * v17 + 0.194131751683 * v25
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.039416772907 * 1 + 0.327810578399 * v1 + 0.200972998923 * v7 + 0.149051612832 * v8 + -0.00368593068174 * v15 + 0.220160068927 * v16 + 0.285171437643 * v17 + -0.0359874879776 * v18 + -0.0461041772499 * v21
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.222979363675 * 1 + 0.025299676293 * v1 + 0.184136211535 * v5 + 0.169944303142 * v7 + 0.64613343103 * v13 + -0.235287437421 * v15 + -0.214417002884 * v17 + 0.244973068942 * v18 + 0.0151573697512 * v21
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.0348520407914 * 1 + -0.406036715979 * v1 + 0.210143476626 * v4 + -0.0902198272382 * v7 + 0.586958074514 * v9 + 0.407737814731 * v13 + 0.00460633307605 * v17 + 0.0182757223836 * v20 + 0.243471003058 * v25
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.0316659658458 * 1 + 0.257238924008 * v0 + 0.282081275962 * v1 + -0.159466594417 * v6 + 0.172100012328 * v7 + 0.409346011159 * v9 + 0.0787178919577 * v15 + -0.0433375340091 * v18 + -0.244675875479 * v21
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 0.171389191288 * 1 + 0.251513603268 * v1 + -0.0105011184726 * v6 + 0.215961041142 * v7 + 0.503778783634 * v12 + 0.195438688893 * v15 + -0.0202504441626 * v17 + -0.0532939954404 * v18 + -0.215798801485 * v21
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.102986689152 * 1 + 0.0111824265542 * v0 + 0.201454322752 * v8 + -0.0452043124557 * v12 + 0.267213528631 * v13 + 0.421188817459 * v15 + -0.148807762237 * v17 + 0.372497218611 * v18 + -0.0231407888951 * v27
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -0.116019298225 * 1 + 0.292654197095 * v1 + 0.146055134168 * v4 + 0.0996986803469 * v6 + -0.0679467675646 * v7 + 0.159879776554 * v13 + 0.702980443482 * v15 + -0.423820645951 * v17 + 0.185582366777 * v20

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
