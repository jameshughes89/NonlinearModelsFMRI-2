from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59555523626e-13 * 1 + 0.0 * v0 + 0.13529657971 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.21311812264 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0165720365845 * v13 + 0.0 * v14 + 0.198206290663 * v15 + 0.0 * v16 + 0.327543196199 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0361377830821 * v28
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24866450204e-13 * 1 + 0.0 * v0 + 0.0366847679436 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.206496836133 * v13 + 0.390131610531 * v15 + -0.0 * v16 + 0.147688911919 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.179652005606 * v27 + 0.0 * v28
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.62042661906e-14 * 1 + 0.0 * v0 + 0.227132578142 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.138729360944 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0510850536916 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.258426864229 * v17 + 0.0763040702775 * v18 + -0.25669100337 * v19 + -0.0 * v20 + 0.100462391446 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.56208264877e-14 * 1 + 0.0490043080614 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.319256179925 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.194066100633 * v17 + 0.0121105360965 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0873392169117 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.240680015563 * v27 + 0.0 * v28
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27356247303e-13 * 1 + -0.0 * v0 + 0.116725134132 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0288444987352 * v5 + 0.102164747626 * v6 + -0.0 * v7 + 0.378096362555 * v8 + -0.0 * v9 + 0.144735814773 * v11 + 0.15969845452 * v12 + -0.0 * v13 + -0.0281763118999 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0178584200372 * v23 + -0.0 * v24 + 0.0 * v25 + 0.133887391782 * v26 + 0.0 * v27 + -0.0 * v28
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61140127089e-13 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0249241532923 * v3 + 0.112546588951 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v12 + 0.0875629566902 * v13 + 0.0 * v14 + 0.304317804244 * v15 + -0.0 * v16 + 0.356808240994 * v17 + -0.0 * v18 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + -0.0 * v23 + -0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.77156304234e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0246362024214 * v6 + 0.0 * v7 + 0.0558641567379 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.338424433522 * v13 + 0.281895402268 * v15 + -0.0 * v16 + 0.296658475142 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.93443747467e-14 * 1 + 0.0 * v0 + -0.0 * v1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.13522708668 * v6 + 0.0481533531507 * v7 + 0.0 * v8 + 0.0359189693127 * v10 + 0.0 * v11 + 0.0 * v12 + 0.20192159192 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.473651977806 * v17 + 0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v24 + 0.0 * v27 + -0.0 * v28
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.3242181718e-14 * 1 + 0.0 * v0 + 0.0160229404895 * v1 + 0.0 * v2 + 0.0592792029024 * v4 + 0.0 * v5 + 0.190068078225 * v6 + 0.0 * v7 + 0.3194705632 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0831818059159 * v13 + -0.0709561686735 * v14 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.040834941755 * v26 + 0.204021547301 * v27 + 0.0 * v28
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.14866170465e-14 * 1 + 0.0 * v0 + 0.572768169684 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0823740313847 * v4 + 0.0 * v5 + 0.107781623821 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.00284861977307 * v11 + 0.0 * v12 + 0.0453528173456 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v26 + 0.0977968315457 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.94105057909e-14 * 1 + 0.0725485901816 * v1 + -0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.380418766467 * v15 + -0.0 * v16 + 0.242342318492 * v17 + -0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v25 + 0.235450691422 * v26 + 0.0 * v27 + -0.0 * v28
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.02468083407e-14 * 1 + 0.0 * v0 + 0.163875244552 * v1 + 0.124833118403 * v4 + 0.0 * v5 + 0.0597155319243 * v6 + 0.0 * v7 + 0.275822939884 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.110949837966 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0106859314327 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0942162962791 * v26 + 0.113048173515 * v27 + 0.0 * v28
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.45654523745e-14 * 1 + 0.108475560887 * v1 + 0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.106934717796 * v8 + 0.0 * v9 + 0.0 * v10 + 0.126176622987 * v11 + 0.0 * v12 + 0.0455203342791 * v13 + 0.0 * v14 + 0.228065786245 * v15 + 0.1786993018 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0264513284619 * v26 + 0.153604861401 * v27 + 0.0 * v28
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.74232765522e-15 * 1 + 0.0 * v0 + 0.0399796251674 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0150098422409 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.444540841214 * v15 + 0.0 * v16 + 0.0187925752319 * v17 + 0.059997922543 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.342882677837 * v27 + 0.0 * v28
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.68470170283e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0241932267807 * v4 + 0.0 * v5 + 0.0 * v7 + 0.209708866081 * v8 + 0.0829134034971 * v9 + 0.0444507775588 * v10 + 0.0 * v11 + 0.0 * v12 + 0.149205657775 * v13 + 0.0381500837321 * v15 + 0.0133790886019 * v16 + 0.0 * v17 + 0.0 * v18 + 0.137921806047 * v20 + 0.0 * v21 + 0.0716316638923 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.165853563493 * v27 + 0.0246204958566 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.42035865753e-13 * 1 + -0.0 * v0 + 0.159876706834 * v1 + 0.0 * v2 + 0.0 * v4 + 0.180204661569 * v5 + 0.057394392366 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.411678847118 * v17 + -0.0 * v18 + -0.14014951294 * v19 + 0.0 * v20 + 0.0480723416309 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0874253138287 * v26 + 0.0015981263949 * v27 + 0.0 * v28
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.75274674912e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0824517130497 * v13 + 0.0 * v14 + 0.161035608257 * v15 + -0.0 * v16 + 0.413885343344 * v17 + -0.0 * v18 + 0.0 * v19 + -0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.24322401362 * v27 + -0.0 * v28
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.93747432918e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0186256904512 * v5 + 0.0854738366715 * v6 + 0.0325155487413 * v7 + 0.0258072668242 * v8 + 0.0 * v9 + 0.125039580998 * v12 + 0.0180900674514 * v13 + 0.205462082845 * v15 + 0.0806478541364 * v16 + 0.329865642254 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.48811936904e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0446347200074 * v4 + 0.0 * v5 + 0.30843163174 * v6 + 0.0 * v7 + 0.237269263214 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.100601003746 * v13 + 0.0 * v14 + 0.073131487284 * v15 + 0.0 * v16 + 0.106845545024 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0647497139102 * v27 + 0.0 * v28
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.89998943767e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.244160311528 * v12 + 0.101550473685 * v13 + 0.0 * v14 + 0.183067374014 * v15 + 0.0 * v16 + 0.0796180564613 * v17 + 0.122270329839 * v18 + 0.0 * v19 + 0.141972286139 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v24 + 0.0 * v26 + 0.0605649685924 * v27 + 0.0 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.19303091896e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.162491266615 * v4 + 0.0 * v5 + 0.0725754894194 * v6 + 0.0 * v7 + 0.033053841374 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.14294350477 * v15 + 0.0 * v16 + 0.212441309476 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.249559815377 * v25 + 0.0220445541004 * v27 + 0.0 * v28
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06639903195e-13 * 1 + 0.00306796613921 * v0 + 0.321795989168 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + 0.348508062901 * v15 + 0.0 * v16 + 0.0738950256269 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.171742686847 * v27 + 0.0 * v28
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.10196570066e-14 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.00275256419393 * v6 + 0.0 * v7 + 0.335870706464 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0114674726974 * v13 + 0.0 * v14 + 0.119929121025 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v25 + 0.3268433156 * v26 + 0.133849577918 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906005699e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0616601410096 * v13 + 0.190516254616 * v15 + 0.0 * v16 + 0.617884597125 * v17 + 0.0 * v18 + 0.0 * v20 + -0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94609283972e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + -0.0 * v7 + 0.258766356993 * v8 + 0.0 * v9 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.19721257856 * v13 + 0.376804507555 * v15 + 0.0 * v16 + 0.0 * v17 + -0.0 * v18 + -0.0 * v19 + -0.0 * v20 + -0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.87242990256e-15 * 1 + 0.0 * v0 + 0.0800066750451 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.00930769008421 * v6 + 0.0 * v7 + 0.143306749098 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0269983147085 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.463981437834 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v26 + 0.225093998529 * v27 + 0.0 * v28
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52045204374e-13 * 1 + 0.0 * v0 + 0.194633663798 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0630076711539 * v5 + 0.0 * v6 + 0.0381884434942 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.0 * v12 + 0.177624015866 * v13 + 0.0 * v15 + 0.0 * v16 + 0.145661090842 * v17 + 0.120994406749 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0494239361194 * v23 + 0.0 * v25 + 0.0711099253169 * v26 + 0.0826184028939 * v27 + 0.0 * v28
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.58976305678e-14 * 1 + 0.260828865452 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0286140904722 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v11 + 0.116555110796 * v12 + 0.327635166492 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0381174990489 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v25 + 0.106754218331 * v26 + 0.0619320144367 * v27 + 0.0 * v28
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.58203734946e-14 * 1 + 0.0 * v0 + 0.317349481282 * v1 + 0.00629040871623 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0995268743634 * v9 + 0.0 * v11 + 0.0 * v12 + 0.229991232597 * v13 + -0.0 * v14 + 0.195269940298 * v15 + 0.0986905031517 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.20382803706e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0321060266104 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.555055518817 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v24 + 0.156787128904 * v26 + 0.167982463429 * v27 + 0.0 * v28
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.14270589846e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.139466588444 * v6 + 0.0 * v7 + 0.089838924429 * v8 + 0.0 * v9 + -0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.380340342275 * v13 + 0.0 * v14 + 0.1971010301 * v15 + -0.0 * v16 + 0.0168740821047 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v25 + 0.229828981189 * v26 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.18378542488e-13 * 1 + 0.055926892723 * v0 + 0.159317424503 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0526013636538 * v5 + 0.00293054501798 * v6 + 0.0 * v7 + 0.000427279555693 * v8 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.11226613237 * v15 + 0.0638233756115 * v16 + 0.450347214661 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v27 + -0.0 * v28
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46002297443e-13 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0940817048428 * v12 + 0.0241705200868 * v13 + 0.0 * v14 + 0.343009593739 * v15 + 0.0 * v16 + 0.262860741041 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.158203576076 * v27 + 0.0 * v28
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.25359425099e-14 * 1 + 0.138281225968 * v1 + -0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0438615681218 * v5 + 0.210902961617 * v6 + 0.0 * v7 + 0.0 * v8 + -0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0197390467471 * v13 + 0.1080488157 * v14 + 0.0 * v15 + 0.20742598295 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0377107531267 * v25 + 0.0 * v26 + 0.229574430986 * v27 + -0.0 * v28
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.37660665597e-13 * 1 + -0.0 * v0 + 0.0468832076319 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.157688791285 * v7 + 0.112838051891 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.110289458577 * v15 + 0.0 * v16 + 0.101959127137 * v17 + 0.408768245254 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v25 + 0.0 * v27 + 0.0 * v28
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33930304227e-13 * 1 + 0.0 * v0 + 0.253236249283 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.11169081523 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + -0.0 * v11 + -0.0 * v12 + 0.0917329973365 * v13 + 0.0 * v14 + 0.440362138923 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + -0.0 * v19 + 0.0 * v20 + 0.00572199592922 * v21 + 0.0 * v23 + -0.0 * v24 + 0.00326587617802 * v27 + -0.0 * v28
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.97605712216e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.188456185389 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v12 + 0.222954714278 * v13 + 0.0 * v15 + 0.0 * v16 + 0.224333459981 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + -0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.226577347198 * v27 + 0.0 * v28
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.60951814359e-13 * 1 + 0.0 * v0 + 0.115876383894 * v1 + -0.0 * v4 + -0.0 * v5 + 0.253976882445 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0287803602521 * v10 + -0.0 * v11 + -0.0181389915885 * v12 + 0.200837528929 * v13 + -0.0 * v14 + 0.235637602475 * v15 + 0.0 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + -0.0 * v25 + -0.0739446891112 * v26 + 0.00512316987941 * v27 + -0.0 * v28
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.02934819187e-14 * 1 + 0.0 * v0 + 0.00513940444524 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v5 + 0.209594561477 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0780874965701 * v12 + 0.0 * v13 + 0.0 * v14 + 0.569923853356 * v15 + 0.0 * v16 + 0.00821729388067 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v24 + 0.0726852864314 * v27 + 0.0 * v28
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.12524627983e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.023218458303 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0152214397601 * v12 + 0.0 * v13 + 0.144133581434 * v15 + 0.0 * v16 + 0.40516820132 * v17 + 0.0 * v18 + -0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.290182231357 * v27 + 0.0 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
