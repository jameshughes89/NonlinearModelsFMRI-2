from math import *

def func_LANGUAGE_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26169950639e-14 * 1 + 0.0 * v0 + 0.228287947747 * v1 + 0.0 * v8 + 0.0177687073631 * v11 + 0.0 * v16 + 0.0 * v17 + 0.372461846374 * v20 + 0.0 * v21 + 0.0 * v23 + 0.00992881441254 * v27 + 0.232803431838 * v28
def func_LANGUAGE_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00486189003e-13 * 1 + 0.0 * v1 + 0.0200420218626 * v7 + 0.0 * v8 + -0.0 * v15 + 0.366599277015 * v17 + 0.315117490633 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.135847888978 * v27 + -0.0 * v28
def func_LANGUAGE_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.22999375073e-14 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v3 + -0.0 * v8 + -0.0 * v12 + 0.132780199026 * v17 + 0.40686263307 * v18 + 0.0871891737332 * v20 + 0.0 * v21 + 0.0 * v27 + 0.281840359566 * v28
def func_LANGUAGE_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.7845051216e-14 * 1 + 0.363694785187 * v1 + 0.0 * v4 + 0.219681620285 * v7 + 0.0 * v9 + 0.0940219120512 * v13 + 0.0 * v14 + 0.0 * v15 + 0.207571134825 * v17 + 0.0252522415653 * v21 + 0.000812665350034 * v27 + 0.0 * v28
def func_LANGUAGE_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.74487088536e-14 * 1 + 0.143776214987 * v0 + 0.0 * v8 + 0.0185197752377 * v9 + 0.141552404747 * v11 + 0.0 * v13 + 0.100853791191 * v15 + 0.0 * v16 + 0.0 * v20 + 0.37239253396 * v21 + 0.0425519247852 * v27 + 0.0 * v28
def func_LANGUAGE_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39989870243e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0057908769138 * v6 + 0.273292103142 * v7 + 0.0 * v8 + 0.0 * v15 + 0.404009929886 * v17 + 0.0166814912621 * v18 + 0.0 * v20 + 0.0622085770823 * v27
def func_LANGUAGE_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97664745486e-13 * 1 + 0.115026520756 * v1 + 0.0608201212448 * v8 + 0.0 * v13 + 0.0 * v15 + 0.398725456212 * v17 + 0.0701584856097 * v18 + 0.0187380512752 * v20 + 0.170149727281 * v21 + -0.0 * v23 + -0.0 * v25 + 0.0 * v27
def func_LANGUAGE_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.10599688665e-14 * 1 + 0.151164710765 * v1 + 0.171166803604 * v7 + 0.116453295541 * v8 + 0.0 * v11 + 0.0 * v15 + 0.00916757908662 * v16 + 0.218811570418 * v17 + 0.0400577760009 * v18 + 0.0 * v20 + 0.168211548899 * v21 + 0.035802958124 * v27
def func_LANGUAGE_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.30971462269e-14 * 1 + 0.0 * v0 + 0.0 * v2 + 0.0 * v3 + 0.163866781025 * v7 + 0.127078863248 * v16 + 0.318354033131 * v17 + 0.0311789905377 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v22 + 0.230010463753 * v24
def func_LANGUAGE_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.98264145428e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0108574776674 * v8 + 0.0647072081933 * v9 + 0.25401863447 * v12 + 0.0 * v13 + 0.0 * v15 + 0.434148695832 * v17 + 0.0 * v20 + 0.0980560188821 * v21
def func_LANGUAGE_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.27864935196e-14 * 1 + -0.0 * v1 + -0.140466359377 * v5 + 0.322795057558 * v9 + -0.0671322493296 * v14 + -0.285128984059 * v15 + 0.511461644342 * v17 + -0.0 * v20 + -0.0 * v21 + -0.236728266528 * v22 + -0.0 * v25 + -0.0 * v26
def func_LANGUAGE_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.60110177632e-14 * 1 + 0.0 * v0 + -0.0 * v5 + 0.209964806866 * v7 + 0.0784665577186 * v15 + 0.0 * v16 + 0.436850538089 * v17 + 0.0494854826295 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0960444403771 * v28
def func_LANGUAGE_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.48555644266e-14 * 1 + -0.0 * v2 + 0.162950617545 * v7 + 0.0 * v8 + 0.0 * v15 + 0.0 * v17 + 0.229743386031 * v18 + 0.0 * v20 + 0.0885435306952 * v21 + 0.0 * v23 + 0.218910246973 * v27 + 0.258541670084 * v28
def func_LANGUAGE_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.56410424397e-13 * 1 + 0.0777900306527 * v0 + -0.0 * v4 + 0.0281008460566 * v8 + 0.124467270287 * v11 + 0.275170070634 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0924888028761 * v21 + 0.0 * v22 + 0.315326931695 * v27 + 0.0237377401191 * v28
def func_LANGUAGE_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56126809424e-13 * 1 + 0.0950141786966 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v15 + 0.304071078356 * v17 + 0.060394946401 * v20 + 0.229382452517 * v21 + 0.0 * v22 + 0.246662593251 * v28
def func_LANGUAGE_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.75406673818e-14 * 1 + 0.0963790317608 * v1 + 0.0 * v6 + 0.195889301931 * v7 + -0.0 * v8 + 0.0 * v10 + 0.292442864594 * v17 + 0.153327481488 * v18 + 0.129830670428 * v20 + 0.105299115814 * v21 + 0.0 * v23 + 0.0 * v27
def func_LANGUAGE_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02968363895e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v3 + 0.124608509704 * v8 + 0.0842938265738 * v10 + 0.0264192470454 * v11 + 0.0 * v12 + 0.0210528089693 * v16 + 0.0 * v17 + 0.21242333843 * v21 + 0.279635610047 * v27
def func_LANGUAGE_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.67882960599e-14 * 1 + 0.0 * v0 + 0.102948889665 * v7 + 0.152527919867 * v8 + 0.0 * v9 + 0.226357579027 * v17 + 0.0 * v18 + 0.0 * v20 + 0.184533211186 * v21 + 0.0 * v24 + 0.0320041809854 * v27 + 0.247886497805 * v28
def func_LANGUAGE_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.00598433724e-14 * 1 + 0.0 * v1 + 0.226307594458 * v6 + 0.0309876836169 * v7 + -0.0 * v9 + 0.0 * v10 + 0.0 * v15 + 0.456756107725 * v17 + 0.166351920551 * v18 + 0.0 * v20 + 0.0391282310953 * v21 + 0.0 * v28
def func_LANGUAGE_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.4176262196e-14 * 1 + 0.0 * v1 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.493108371632 * v17 + 0.0 * v18 + 0.0 * v20 + 0.243065192187 * v21 + 0.118803992493 * v27 + 0.0250602268077 * v28
def func_LANGUAGE_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26219644191e-13 * 1 + 0.00897089262284 * v0 + 0.0517395872784 * v1 + 0.0 * v6 + 0.483394735311 * v7 + 0.0 * v15 + 0.0246612394635 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0671339499932 * v21 + 0.255262888708 * v27 + 0.12803317682 * v28
def func_LANGUAGE_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.92926734229e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0883863354537 * v7 + 0.0 * v8 + 0.0 * v11 + 0.202149672318 * v15 + 0.141658511376 * v17 + 0.218851880679 * v18 + 0.0 * v20 + 0.0 * v21 + 0.221022533757 * v27
def func_LANGUAGE_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52375303768e-14 * 1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v16 + 0.757817149184 * v17 + 0.0467600433129 * v19 + 0.0 * v22 + 0.0 * v28
def func_LANGUAGE_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.04393218047e-13 * 1 + 0.164968334251 * v1 + 0.467231031186 * v8 + 0.0 * v12 + 0.0 * v16 + 0.151855612952 * v17 + 0.0859601253187 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.025688718959 * v27 + 0.0 * v28
def func_LANGUAGE_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.44771392839e-13 * 1 + 0.19027182419 * v1 + 0.0 * v3 + 0.141118952302 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0928503528277 * v17 + 0.0 * v18 + 0.0 * v19 + 0.102064582203 * v20 + 0.0 * v21 + 0.360536984769 * v28
def func_LANGUAGE_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.00570056962e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.057380866781 * v7 + 0.375876473954 * v8 + 0.359529954197 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0644514924709 * v23 + 0.0 * v27
def func_LANGUAGE_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.41416101603e-14 * 1 + 0.0543471653971 * v1 + 0.0 * v5 + 0.0 * v8 + 0.0505078976301 * v17 + 0.216898612922 * v18 + 0.317017718476 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v23 + 0.262798140461 * v27 + 0.0163581112262 * v28
def func_LANGUAGE_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12947412986e-14 * 1 + 0.146404315164 * v1 + 0.0 * v6 + 0.00324012899098 * v7 + 0.127926311735 * v8 + 0.0 * v15 + 0.221234649009 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0343368462482 * v21 + 0.26114039597 * v27 + 0.11604386578 * v28
def func_LANGUAGE_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.74010675013e-13 * 1 + 0.0764263317715 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0610432733161 * v8 + 0.0 * v9 + 0.0 * v13 + 0.269415169491 * v17 + 0.250369150074 * v20 + 0.0 * v21 + 0.150471717573 * v22 + 0.0303182881327 * v27
def func_LANGUAGE_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76545593285e-14 * 1 + 0.0 * v1 + 0.0 * v5 + 0.363725029976 * v7 + 0.0 * v8 + 0.315126521044 * v17 + 0.185391148988 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v27 + 0.0 * v28
def func_LANGUAGE_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.58365262423e-14 * 1 + 0.0 * v0 + 0.0718646460058 * v1 + 0.0 * v4 + -0.0 * v5 + 0.012849700927 * v8 + -0.0 * v15 + 0.287289196251 * v17 + 0.265879211808 * v20 + 0.112744674912 * v21 + 0.0 * v23 + 0.0 * v28
def func_LANGUAGE_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.68389299446e-15 * 1 + 0.11475846452 * v1 + 0.0 * v6 + 0.381571459283 * v7 + 0.0 * v8 + 0.0648271315983 * v15 + 0.316236657003 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161218673852 * v21 + 0.0 * v27
def func_LANGUAGE_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.76613108456e-13 * 1 + 0.135978094786 * v0 + 0.0143404616228 * v1 + 0.0612324022172 * v4 + 0.0 * v8 + 0.0 * v15 + 0.459302358805 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0469624753778 * v21 + 0.0449503667967 * v23 + 0.132079893472 * v28
def func_LANGUAGE_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.24192742389e-13 * 1 + 0.0487174035768 * v1 + 0.0 * v4 + -0.0 * v5 + 0.0 * v7 + 0.0 * v15 + 0.0846793188215 * v16 + 0.175032437571 * v17 + 0.418895887797 * v20 + 0.143060012389 * v21 + 0.0 * v22 + 0.0 * v27
def func_LANGUAGE_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.88774607821e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.264848522799 * v7 + -0.0 * v10 + 0.0 * v15 + 0.589956497789 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27
def func_LANGUAGE_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36442389746e-13 * 1 + 0.134723253622 * v1 + -0.0 * v4 + 0.0 * v8 + 0.0 * v11 + 0.0 * v15 + 0.268050537571 * v17 + 0.30806667171 * v18 + 0.0880988836423 * v20 + 0.0771405992969 * v21 + 0.0 * v23 + 0.0 * v27
def func_LANGUAGE_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.88923446269e-13 * 1 + 0.0 * v0 + 0.125398815128 * v1 + 0.393135442998 * v8 + 0.0 * v9 + 0.0 * v12 + 0.0 * v15 + 0.272927642359 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0204493047778 * v28
def func_LANGUAGE_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.93279579333e-14 * 1 + -0.0 * v0 + 0.110811761842 * v7 + 0.172050813131 * v8 + 0.0 * v9 + 0.0418015768204 * v11 + 0.169087722892 * v16 + 0.0 * v17 + 0.0714533183346 * v18 + 0.0647472642683 * v20 + 0.16703352187 * v21 + 0.0 * v27
def func_LANGUAGE_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.14176089176e-14 * 1 + 0.0414042114259 * v0 + 0.0 * v1 + 0.0 * v8 + 0.0 * v9 + 0.101655193814 * v10 + 0.0713221923825 * v11 + 0.156152755961 * v17 + 0.287005614936 * v20 + 0.0 * v21 + 0.134089238639 * v27 + 0.154415325487 * v28
def func_LANGUAGE_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.9076972556e-14 * 1 + 0.16066179924 * v1 + -0.0942899533418 * v3 + 0.0 * v6 + 0.0 * v7 + 0.0 * v9 + -0.0 * v10 + 0.14369721538 * v11 + 0.0 * v15 + 0.167009645657 * v17 + 0.423643757108 * v18 + -0.235138565098 * v25

funcs = [funcL_LANGUAGE_100307,funcL_LANGUAGE_100408,funcL_LANGUAGE_101006,funcL_LANGUAGE_101107,funcL_LANGUAGE_101309,funcL_LANGUAGE_101410,funcL_LANGUAGE_101915,funcL_LANGUAGE_102008,funcL_LANGUAGE_102311,funcL_LANGUAGE_102816,funcL_LANGUAGE_103111,funcL_LANGUAGE_103414,funcL_LANGUAGE_103515,funcL_LANGUAGE_103818,funcL_LANGUAGE_104012,funcL_LANGUAGE_104820,funcL_LANGUAGE_105014,funcL_LANGUAGE_105115,funcL_LANGUAGE_105216,funcL_LANGUAGE_105923,funcL_LANGUAGE_106016,funcL_LANGUAGE_106319,funcL_LANGUAGE_106521,funcL_LANGUAGE_107321,funcL_LANGUAGE_107422,funcL_LANGUAGE_108121,funcL_LANGUAGE_108323,funcL_LANGUAGE_108525,funcL_LANGUAGE_108828,funcL_LANGUAGE_109123,funcL_LANGUAGE_109325,funcL_LANGUAGE_110411,funcL_LANGUAGE_111312,funcL_LANGUAGE_111413,funcL_LANGUAGE_111514,funcL_LANGUAGE_111716,funcL_LANGUAGE_113215,funcL_LANGUAGE_113619,funcL_LANGUAGE_113922,funcL_LANGUAGE_114419,]

def getFuncs(): return funcs
