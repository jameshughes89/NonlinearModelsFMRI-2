from math import *

def funcL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.58362003114e-14 * 1 + 0.0 * v0 + 0.0909247678865 * v1 + 0.0 * v3 + 0.0949545484425 * v5 + 0.0394015942114 * v7 + 0.205094128094 * v11 + 0.252643036784 * v15 + 0.153130825768 * v16 + 0.0461370338933 * v17 + 0.0172480551657 * v21 + 0.123286132266 * v22 + 0.0 * v24 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.29410871227e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.250897679647 * v5 + -0.0 * v6 + 0.223780827959 * v7 + 0.161731814346 * v10 + -0.0 * v15 + 0.0203534550219 * v16 + 0.108004279692 * v17 + 0.0 * v20 + -0.0 * v21 + 0.209763531638 * v22 + 0.0495149347717 * v23 + -0.0759805444735 * v25
def funcL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94318082754e-14 * 1 + 0.113277745949 * v1 + 0.0131449473049 * v3 + 0.0 * v4 + 0.175954817484 * v5 + 0.0 * v7 + 0.173126698021 * v15 + 0.138912261697 * v17 + 0.0 * v18 + 0.0105498300799 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0748745127543 * v24 + 0.0 * v27 + 0.252158027397 * v28
def funcL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23471116625e-13 * 1 + 0.0 * v0 + 0.0511938323571 * v1 + 0.0275208694692 * v3 + 0.214733923334 * v4 + 0.137758036341 * v7 + 0.0 * v8 + 0.0 * v10 + 0.0103014595228 * v15 + 0.128227110015 * v17 + 0.169463656061 * v18 + 0.0840579613362 * v21 + 0.108295428508 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.13293907059e-14 * 1 + 0.0 * v0 + 0.00564201792889 * v3 + 0.15067168699 * v5 + 0.0 * v7 + 0.0 * v8 + 0.06372306218 * v10 + 0.0 * v12 + 0.0 * v17 + 0.0729527788949 * v18 + 0.146003245348 * v20 + 0.296582169231 * v21 + 0.180250584814 * v22 + 0.0 * v24 + 0.0622632731631 * v28
def funcL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.07009506837e-14 * 1 + 0.388252676332 * v1 + 0.0 * v4 + 0.218797328163 * v5 + 0.0211966765745 * v6 + 0.0 * v11 + 0.0 * v15 + 0.0 * v16 + 0.142159870212 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0408873361997 * v21 + 0.0948691102899 * v22 + 0.0 * v27 + 0.0176025138055 * v28
def funcL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21416226829e-13 * 1 + 0.118783897347 * v1 + 0.260496098654 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0198089759698 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0 * v20 + 0.261208139663 * v21 + 0.297008590057 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53515784373e-14 * 1 + 0.0 * v1 + 0.0 * v2 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v12 + 0.0719678465627 * v13 + 0.0 * v15 + 0.0 * v17 + 0.388182237897 * v20 + 0.242638820561 * v21 + 0.0643070514087 * v22 + 0.10267501671 * v27 + 0.037474020804 * v28
def funcL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39758238106e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.0 * v5 + 0.0 * v7 + 0.0 * v9 + 0.363927576494 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v18 + 0.247848080084 * v21 + 0.226189457985 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.18324594979e-14 * 1 + 0.0463479489882 * v3 + 0.0 * v4 + 0.404857046704 * v5 + 0.0782503707478 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0431381319251 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0370186892982 * v20 + 0.244564874664 * v21 + 0.0 * v24 + 0.0 * v25 + 0.107452564906 * v28
def funcL_MOTOR_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.28700650822e-13 * 1 + 0.0921048583507 * v1 + 0.0620515384678 * v3 + 0.0 * v4 + 0.209353603425 * v5 + 0.0 * v8 + 0.209183447742 * v9 + 0.0709230037779 * v10 + 0.0 * v12 + 0.0 * v13 + 0.0 * v19 + 0.0 * v20 + 0.115054387283 * v21 + 0.128059323057 * v22 + 0.0706599205418 * v28
def funcL_MOTOR_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02022573959e-13 * 1 + 0.358928566658 * v1 + 0.0 * v3 + 0.0385821838642 * v4 + 0.0852427744295 * v5 + 0.0 * v8 + 0.055076910445 * v9 + 0.0 * v12 + 0.0279339414464 * v13 + 0.0301327144275 * v16 + 0.0202957106112 * v17 + 0.149674975392 * v20 + 0.153519820514 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.29328137385e-15 * 1 + 0.0 * v1 + 0.0 * v2 + 0.126221550463 * v3 + 0.0985080605147 * v4 + 0.324534859459 * v5 + 0.232328471454 * v7 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0179703198828 * v19 + 0.0880850405753 * v20 + 0.0199188527877 * v21 + 0.0 * v27 + 0.0300310098018 * v28
def funcL_MOTOR_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.69694871589e-14 * 1 + 0.0 * v1 + 0.0180653607708 * v4 + 0.441471325067 * v5 + -0.0 * v8 + 0.0 * v10 + 0.253273533512 * v15 + 9.68713029292e-05 * v17 + 0.0 * v19 + 0.105434763634 * v20 + 0.0820620592505 * v21 + 0.150253547392 * v22 + 0.0 * v23 + 0.0 * v25 + 0.0 * v28
def funcL_MOTOR_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.64136199396e-14 * 1 + 0.159134038548 * v1 + 0.150917838278 * v5 + 0.100695742675 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v11 + 0.0 * v12 + 0.0611213090825 * v15 + 0.0 * v16 + 0.0 * v18 + 0.345552256271 * v21 + 0.0967724648584 * v22 + 0.0 * v23 + 0.0 * v28
def funcL_MOTOR_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.53317214478e-14 * 1 + 0.282605158259 * v2 + 0.0 * v3 + 0.14613174522 * v5 + 0.0548681889682 * v7 + 0.0 * v9 + 0.0744341622709 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v16 + 0.0 * v19 + 0.0 * v20 + 0.234904561595 * v25 + 0.166556760774 * v28
def funcL_MOTOR_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.14607182563e-13 * 1 + 0.0558025897913 * v0 + 0.19290748153 * v1 + 0.0638972007821 * v3 + 0.0 * v4 + 0.0717910672054 * v5 + 0.040961290206 * v7 + 0.144407372294 * v11 + 0.0178593063701 * v16 + 0.0 * v18 + 0.0 * v19 + 0.174414708596 * v21 + 0.0564711736299 * v22 + 0.0 * v23 + 0.162961916284 * v28
def funcL_MOTOR_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83095884827e-13 * 1 + 0.0 * v0 + 0.20868941515 * v1 + 0.0559319575582 * v3 + 0.297705622259 * v5 + 0.168072883871 * v7 + 0.0 * v10 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.125537359435 * v21 + 0.0464318906867 * v22 + 0.0 * v23 + 0.0 * v27 + 0.0 * v28
def funcL_MOTOR_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.21713487799e-13 * 1 + 0.369343448683 * v1 + 0.0 * v2 + 0.0 * v4 + 0.220850439719 * v5 + 0.108843432915 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.185838964947 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.21042905581e-14 * 1 + 0.0 * v1 + 0.00307023997912 * v3 + 0.251965759477 * v5 + 0.0 * v7 + 0.0 * v8 + 0.268344826342 * v9 + 0.0 * v11 + 0.0 * v15 + 0.0 * v17 + 0.0 * v18 + 0.16368644389 * v20 + 0.235384273728 * v21 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.40060170328e-13 * 1 + 0.0373658236016 * v1 + 0.128413838024 * v3 + 0.0 * v4 + 0.104108775769 * v7 + 0.0 * v8 + 0.167678376616 * v11 + 0.0342747686242 * v16 + 0.0 * v17 + 0.201096157188 * v20 + 0.0 * v21 + 0.189846096341 * v22 + 0.0 * v25 + 0.0 * v27 + 0.163897243491 * v28
def funcL_MOTOR_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.6922147818e-13 * 1 + 0.0 * v3 + 0.0 * v4 + 0.138116034397 * v5 + 0.0905156655553 * v9 + 0.0 * v13 + 0.0137971520915 * v15 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.263970880945 * v21 + 0.0799657718008 * v22 + 0.370106795456 * v25 + 0.0441241807694 * v27
def funcL_MOTOR_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.30138445695e-15 * 1 + 0.0 * v0 + 0.0263567882365 * v1 + 0.0 * v3 + 0.0 * v4 + 0.100849141605 * v5 + 0.0 * v7 + 0.175936534328 * v9 + 0.378016667427 * v11 + 0.0216853727504 * v17 + 0.0 * v20 + 0.204061612931 * v21 + 0.0691711939583 * v23 + 0.0 * v26 + 0.0 * v28
def funcL_MOTOR_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.24975891032e-13 * 1 + 0.0896135879731 * v1 + 0.0 * v4 + 0.214104493732 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0152941627303 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0596575360515 * v15 + 0.100591664504 * v17 + 0.00235177694695 * v20 + 0.202220106855 * v22 + 0.0 * v27 + 0.290349877236 * v28
def funcL_MOTOR_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.53757507651e-13 * 1 + 0.140721483301 * v1 + 0.0 * v3 + 0.0 * v4 + 0.0347616966553 * v5 + 0.0 * v7 + 0.0433135770312 * v10 + 0.165229447271 * v11 + 0.0700427665194 * v15 + 0.0 * v16 + 0.218215675697 * v17 + 0.0 * v19 + 0.0 * v21 + 0.0 * v23 + 0.219033185242 * v28
def funcL_MOTOR_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.37930174709e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.321916313151 * v5 + 0.150820996201 * v7 + 0.166375563267 * v9 + 0.0 * v13 + 0.0865565963235 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v19 + 0.230706728049 * v21 + 0.0 * v23 + 0.0 * v27 + 0.00798968774349 * v28
def funcL_MOTOR_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.0501070954e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.458583256427 * v5 + 0.0621141948616 * v7 + 0.0 * v8 + 0.0848562024574 * v9 + 0.0 * v11 + 0.0 * v17 + 0.0 * v18 + 0.300131102855 * v21 + 0.0 * v23 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.68620211103e-15 * 1 + 0.163887609339 * v1 + 0.0 * v2 + 0.0760193720852 * v3 + 0.40307982646 * v5 + 0.041822078295 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v14 + 0.0 * v18 + 0.0 * v19 + 0.17640484305 * v20 + 0.0 * v25 + 0.080691528378 * v26
def funcL_MOTOR_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.5000984987e-14 * 1 + 0.231243013944 * v1 + 0.0 * v4 + 0.325862305031 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v12 + 0.0241727774998 * v13 + 0.0 * v15 + 0.0 * v18 + 0.0 * v19 + 0.106325797136 * v21 + 0.272935917065 * v22 + 0.0 * v25 + 0.0 * v27
def funcL_MOTOR_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.2464555086e-13 * 1 + 0.131317445678 * v1 + 0.0 * v3 + 0.100181546261 * v4 + 0.213660453235 * v5 + 0.000443291305799 * v7 + 0.0 * v8 + 0.0429129711831 * v9 + 0.0 * v13 + 0.0545051871743 * v15 + 0.0 * v17 + 0.0136844109965 * v20 + 0.262993044776 * v21 + 0.0 * v22 + 0.119896316423 * v28
def funcL_MOTOR_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13940555594e-13 * 1 + 0.0569847630937 * v1 + 0.0 * v3 + 0.0 * v4 + 0.266608271216 * v5 + 0.0748782307411 * v7 + 0.0 * v9 + 0.0 * v11 + 0.108855092747 * v15 + 0.0 * v16 + 0.00255670808832 * v17 + 0.131259054487 * v19 + 0.240926249753 * v21 + 0.0867635062342 * v22 + 0.0 * v28
def funcL_MOTOR_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18185698869e-14 * 1 + 0.067826042925 * v1 + 0.0 * v4 + 0.219302595935 * v5 + 0.00805678536502 * v7 + 0.0 * v8 + 0.00567939542983 * v12 + 0.083729825876 * v13 + 0.0 * v18 + 0.247025239113 * v20 + 0.0785778421535 * v21 + 0.170305310555 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0934275953157 * v28
def funcL_MOTOR_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.47728997948e-14 * 1 + 0.0 * v4 + 0.157539714873 * v5 + 0.0 * v8 + 0.310301125508 * v9 + 0.11388320429 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v17 + 0.0 * v20 + 0.234488157387 * v21 + 0.0540631894684 * v22 + 0.0 * v25 + 0.0 * v27 + 0.085803536661 * v28
def funcL_MOTOR_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.03563047181e-13 * 1 + 0.128150211177 * v3 + 0.293505348981 * v5 + -0.345102895567 * v6 + 0.0395464215491 * v7 + 0.0 * v9 + -0.202808654519 * v10 + 0.0 * v11 + 0.0 * v13 + -0.0 * v14 + 0.0266336577596 * v20 + 0.0547886036905 * v21 + 0.132682973022 * v22 + 0.0 * v25 + 0.0979658796198 * v26
def funcL_MOTOR_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.28815231584e-13 * 1 + 0.0 * v3 + 0.0316963183875 * v4 + 0.597334532924 * v5 + 0.0132458370271 * v7 + 0.0 * v8 + -0.199192937444 * v10 + 0.0 * v12 + 0.0 * v13 + 0.125504934345 * v14 + 0.106559802878 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v20 + 0.0 * v26
def funcL_MOTOR_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.04700022725e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.273828701431 * v5 + 0.0 * v8 + 0.0 * v9 + 0.0903546107324 * v10 + 0.0 * v11 + 0.0 * v13 + 0.0 * v15 + 0.552394316862 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v23 + 0.0 * v27
def funcL_MOTOR_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.4799047458e-14 * 1 + 0.271248012246 * v1 + 0.0 * v4 + 0.242063282821 * v5 + 0.0 * v8 + 0.0 * v12 + 0.0888436759298 * v13 + -0.0 * v17 + 0.0 * v18 + 0.0 * v20 + 0.133615047344 * v21 + 0.141549775455 * v22 + 0.0 * v23 + 0.0351313218724 * v25 + 0.0 * v27
def funcL_MOTOR_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.37747425813e-14 * 1 + 0.0 * v0 + 0.0 * v3 + 0.0 * v4 + 0.359034900215 * v5 + 0.0 * v8 + 0.181351744987 * v9 + 0.0 * v12 + 0.0 * v17 + 0.071479025707 * v21 + 0.0 * v22 + 0.0262287498703 * v23 + 0.0774097493698 * v24 + 0.0 * v25 + 0.204418560105 * v28
def funcL_MOTOR_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.23893395154e-14 * 1 + 0.140941770585 * v1 + -0.0 * v4 + 0.238276758962 * v5 + 0.183028931089 * v9 + 0.00539504850338 * v10 + 0.0962150341604 * v11 + 0.0 * v13 + 0.137578644371 * v15 + 0.0 * v17 + 0.0 * v20 + 0.062306239352 * v22 + 0.0 * v25 + 0.0 * v27 + 0.0797945499633 * v28
def funcL_MOTOR_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.86060872651e-14 * 1 + 0.0 * v1 + 0.125030863139 * v3 + 0.049390554705 * v4 + 0.104712357314 * v5 + 0.0 * v8 + 0.0 * v9 + 0.038888875923 * v13 + 0.305193356405 * v15 + 0.0842875793971 * v17 + 0.0 * v20 + 0.0 * v21 + 0.147088966507 * v22 + 0.0 * v27 + 0.089353547124 * v28

funcs = [funcL_MOTOR_100307,funcL_MOTOR_100408,funcL_MOTOR_101006,funcL_MOTOR_101107,funcL_MOTOR_101309,funcL_MOTOR_101410,funcL_MOTOR_101915,funcL_MOTOR_102008,funcL_MOTOR_102311,funcL_MOTOR_102816,funcL_MOTOR_103111,funcL_MOTOR_103414,funcL_MOTOR_103515,funcL_MOTOR_103818,funcL_MOTOR_104012,funcL_MOTOR_104820,funcL_MOTOR_105014,funcL_MOTOR_105115,funcL_MOTOR_105216,funcL_MOTOR_105923,funcL_MOTOR_106016,funcL_MOTOR_106319,funcL_MOTOR_106521,funcL_MOTOR_107321,funcL_MOTOR_107422,funcL_MOTOR_108121,funcL_MOTOR_108323,funcL_MOTOR_108525,funcL_MOTOR_108828,funcL_MOTOR_109123,funcL_MOTOR_109325,funcL_MOTOR_110411,funcL_MOTOR_111312,funcL_MOTOR_111413,funcL_MOTOR_111514,funcL_MOTOR_111716,funcL_MOTOR_113215,funcL_MOTOR_113619,funcL_MOTOR_113922,funcL_MOTOR_114419,]

def getFuncs(): return funcs
