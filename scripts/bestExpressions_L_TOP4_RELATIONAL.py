from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.09742477779e-13 * 1 + 0.3636087019 * v8 + 0.371191307718 * v17 + 0.226009790996 * v20
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33021761678e-14 * 1 + 0.189677701811 * v8 + 0.282117657046 * v15 + 0.429684875568 * v17
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.83430481785e-14 * 1 + 0.136072120637 * v15 + 0.442661885528 * v17 + 0.333417227879 * v21
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.16544206337e-14 * 1 + 0.368183663416 * v13 + 0.394834486278 * v17 + 0.234197405607 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.71543861665e-13 * 1 + 0.468411383226 * v1 + 0.174730371702 * v8 + 0.30256447263 * v12
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.18210231583e-13 * 1 + 0.0202326277144 * v8 + 0.289980283788 * v15 + 0.576879823411 * v17
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60622755746e-13 * 1 + 0.24538055422 * v8 + 0.214131832592 * v15 + 0.508273622593 * v17
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.06452250202e-14 * 1 + 0.834768317393 * v17 + -0.0815820853176 * v18 + 0.0514039049489 * v21
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.599563409e-14 * 1 + 0.522177004439 * v1 + 0.536694123068 * v8 + -0.0602894355923 * v23
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.90422605454e-14 * 1 + 0.808863300073 * v1 + 0.0856128351244 * v6 + 0.071944376576 * v8
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.61599658937e-14 * 1 + 0.320658109644 * v15 + 0.344909078044 * v17 + 0.281217375223 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.58542150525e-14 * 1 + 0.401941960572 * v1 + 0.348265315644 * v4 + 0.275186647279 * v8
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.4046526292e-14 * 1 + 0.269974661766 * v1 + 0.537983842918 * v17 + 0.118201597108 * v20
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.56191656185e-14 * 1 + 0.2184875745 * v1 + 0.416014703336 * v15 + 0.33724253836 * v17
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.51115082128e-13 * 1 + 0.342109035067 * v8 + 0.32698884307 * v22 + 0.244708638834 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.70219450082e-14 * 1 + 0.380517505591 * v1 + 0.124719071097 * v8 + 0.46760107788 * v17
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.88847674958e-14 * 1 + 0.230321051519 * v15 + 0.446915066123 * v17 + 0.330545336438 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.05877215117e-13 * 1 + 0.284117292637 * v8 + 0.252650101186 * v15 + 0.433679229435 * v17
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18013532194e-14 * 1 + 0.217423600949 * v4 + 0.376543567272 * v6 + 0.438371695576 * v8
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.72580262824e-14 * 1 + 0.400038391171 * v12 + 0.227179394105 * v15 + 0.355175522424 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33800301869e-14 * 1 + 0.193176871515 * v4 + 0.386684374396 * v17 + 0.393847022159 * v25
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23751043892e-13 * 1 + 0.365004251527 * v1 + 0.429033270802 * v15 + 0.2315216617 * v27
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.9319482384e-14 * 1 + 0.429322468753 * v8 + 0.133585671248 * v20 + 0.424801978667 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.14579978588e-13 * 1 + -0.0780246701627 * v8 + 0.281596700726 * v15 + 0.760700918599 * v17
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.24671722105e-14 * 1 + 0.328096841384 * v8 + 0.420767548912 * v15 + 0.150960008795 * v17
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.60060073513e-14 * 1 + 0.163578515478 * v8 + 0.634037317048 * v17 + 0.180631621309 * v20
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36677323989e-13 * 1 + 0.310561438501 * v1 + 0.423283567438 * v17 + 0.238227582348 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.56149758978e-14 * 1 + 0.576929210336 * v1 + -0.146245492769 * v9 + 0.597428984001 * v13
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.71266370393e-14 * 1 + 0.419729694396 * v1 + 0.225660862215 * v4 + 0.350589216366 * v17
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.08578498096e-13 * 1 + 0.0142229870422 * v4 + 0.551547921702 * v17 + 0.391765594977 * v27
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.7799527317e-14 * 1 + 0.118901309472 * v12 + 0.591222466223 * v13 + 0.235886601229 * v21
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.51124454609e-13 * 1 + 0.184169337607 * v8 + 0.129975474976 * v15 + 0.638528363769 * v17
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.56490807645e-13 * 1 + 0.143162363935 * v12 + 0.366783958285 * v15 + 0.454992290762 * v17
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.99319465407e-14 * 1 + 0.368660833848 * v6 + 0.301311097539 * v17 + 0.366492667628 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.42459121649e-13 * 1 + 0.165140368853 * v8 + 0.160530716865 * v15 + 0.63695077351 * v18
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.75419643832e-13 * 1 + 0.439456675051 * v1 + 0.628297644335 * v15 + -0.0982331717964 * v17
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.32290382922e-13 * 1 + 0.268898149339 * v13 + 0.324820658557 * v17 + 0.296413599358 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.04044637195e-13 * 1 + 0.356391919838 * v1 + 0.332243192757 * v15 + -0.0521622802443 * v18
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.89327414626e-14 * 1 + 0.134962014249 * v1 + 0.206111286174 * v6 + 0.645214114467 * v15
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.33821453484e-15 * 1 + 0.190875104368 * v15 + 0.432204953835 * v17 + 0.347759734603 * v27

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
