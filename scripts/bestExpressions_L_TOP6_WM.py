from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.25051863938e-13 * 1 + 0.244895358092 * v4 + 0.139327430512 * v15 + 0.188115260991 * v16 + 0.357350592378 * v17 + 0.0563844859247 * v27
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.30617791976e-14 * 1 + -0.00329633071881 * v4 + 0.342616597482 * v5 + 0.266960058524 * v17 + 0.158976235651 * v20 + 0.273848046015 * v21
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20332315971e-13 * 1 + -0.133529146818 * v3 + 0.223433705414 * v5 + 0.201613475529 * v12 + 0.300045861267 * v16 + 0.289398412431 * v19
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.81955050864e-14 * 1 + 0.0194279142344 * v4 + 0.226658770035 * v17 + 0.138713571096 * v18 + 0.22018510952 * v20 + 0.40453028287 * v22
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.19099779915e-13 * 1 + 0.220016530519 * v4 + 0.250013228944 * v5 + 0.0367719113887 * v6 + 0.249904484822 * v20 + 0.219938277388 * v27
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.19140652073e-14 * 1 + 0.196296662628 * v5 + 0.193465473953 * v10 + 0.309739666777 * v17 + 0.0683407892059 * v18 + 0.278874065821 * v23
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.03522942133e-13 * 1 + 0.264659493236 * v1 + 0.11070636445 * v17 + 0.376456745099 * v20 + 0.498117235668 * v21 + -0.320947891457 * v27
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.92796106748e-14 * 1 + 0.129127958871 * v1 + 0.455682522261 * v2 + -0.0209304640033 * v6 + 0.141400166488 * v17 + 0.307280736195 * v20
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.13343958261e-13 * 1 + 0.311707263477 * v5 + 0.243570395217 * v15 + 0.098221747602 * v17 + 0.240989546445 * v21 + 0.145797335449 * v22
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.57349715253e-13 * 1 + 0.0469174549518 * v7 + 0.239658018579 * v8 + 0.302282930035 * v20 + 0.460465981822 * v21 + -0.0450020184274 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.32201659157e-14 * 1 + 0.117918798733 * v5 + 0.137507176773 * v16 + 0.374454046027 * v21 + 0.36827628626 * v22 + 0.00465610389506 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.24245272704e-13 * 1 + 0.22808650813 * v1 + 0.27646636306 * v11 + 0.25222278286 * v15 + 0.229743268717 * v20 + 0.00882219010523 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.16572401758e-14 * 1 + 0.286439841306 * v3 + -0.510585285462 * v4 + 0.114945979499 * v10 + 0.606948297557 * v17 + 0.45879017023 * v20
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83233108669e-14 * 1 + 0.109938149788 * v1 + 0.344903358118 * v5 + 0.357213804844 * v15 + 0.19769565797 * v25 + 0.0360271691704 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.28366073932e-14 * 1 + 0.283648434565 * v5 + -0.0161608501226 * v8 + 0.462345918492 * v15 + 0.103531428262 * v17 + 0.0901511715818 * v21
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.18445336972e-13 * 1 + 0.266064234106 * v1 + 0.133604411268 * v9 + 0.206589973069 * v10 + 0.141740131439 * v20 + 0.274052939383 * v22
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.31973747331e-15 * 1 + 0.119528149291 * v15 + 0.363348102985 * v16 + 0.31902232372 * v21 + 0.197186228636 * v22 + 0.168820663253 * v28
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.42211427476e-13 * 1 + 0.140610928488 * v5 + 0.114479233134 * v7 + 0.363015885343 * v9 + 0.224297333278 * v15 + 0.216307880173 * v21
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.15374068998e-14 * 1 + 0.115772668529 * v5 + 0.239218727398 * v6 + 0.231787482906 * v11 + 0.218481383601 * v21 + 0.233286321113 * v23
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.41048478113e-14 * 1 + 0.149797879476 * v5 + 0.0703904285211 * v17 + 0.405237139198 * v21 + 0.109832179279 * v22 + 0.286267470571 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.67576222784e-14 * 1 + 0.15282563645 * v5 + 0.171475970408 * v11 + 0.163061785609 * v17 + 0.175143066543 * v25 + 0.406396765216 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.59019489575e-14 * 1 + 0.158744180405 * v1 + 0.188141020799 * v5 + 0.156143729915 * v9 + 0.21147182957 * v15 + 0.321447031991 * v20
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.43425132358e-13 * 1 + 0.116643964308 * v1 + 0.149747524453 * v4 + 0.311716933785 * v5 + 0.0559609377698 * v13 + 0.352268347495 * v20
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.443631267e-15 * 1 + 0.01679588775 * v5 + 0.103848591358 * v8 + 0.0582361972473 * v11 + 0.299894729782 * v17 + 0.560533966288 * v22
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.53492231988e-14 * 1 + 0.300560930156 * v1 + 0.0213607452546 * v3 + 0.292240403955 * v17 + 0.250514599542 * v23 + 0.118071597751 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.23418650148e-14 * 1 + 0.264988799993 * v1 + 0.196667467779 * v4 + 0.390048114326 * v5 + -0.106521276012 * v8 + 0.245230428591 * v21
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33197811388e-13 * 1 + 0.15278754784 * v3 + 0.19161845429 * v4 + 0.292924580949 * v9 + 0.277292276708 * v23 + 0.137877873179 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.81006908434e-14 * 1 + -0.081541831336 * v2 + 0.0823752225188 * v3 + 0.248543730762 * v5 + 0.351295351293 * v21 + 0.406168367172 * v25
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.92626370715e-13 * 1 + 0.26386973328 * v4 + 0.265994020099 * v5 + -0.00695800271284 * v17 + 0.295736837959 * v21 + 0.211761690276 * v27
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.15912431194e-14 * 1 + 0.279759598947 * v11 + 0.0692939918281 * v19 + 0.337446909216 * v21 + 0.159564169279 * v22 + 0.189249874449 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.41768317137e-13 * 1 + 0.0977184498641 * v4 + 0.0676931637231 * v5 + 0.201053829037 * v13 + 0.0830566030374 * v17 + 0.518444512492 * v21
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.60593295716e-13 * 1 + 0.233090996233 * v7 + 0.196466816529 * v20 + 0.39643287766 * v21 + 0.205450554846 * v22 + -0.00430957710469 * v28
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.61474519938e-14 * 1 + 0.00751544347867 * v5 + 0.319999940198 * v9 + 0.0238638477327 * v16 + 0.34095018173 * v21 + 0.339445638946 * v22
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.53081108524e-14 * 1 + -0.0959350387671 * v1 + -0.365110483325 * v6 + 0.142078594401 * v15 + 0.316387586558 * v20 + 0.345213390112 * v22
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.15261219883e-13 * 1 + 0.0124203860612 * v7 + 0.274955533535 * v9 + 0.214620551901 * v20 + 0.20254883073 * v21 + 0.290923038741 * v22
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.28095385343e-13 * 1 + 0.586866719721 * v0 + -0.377620154263 * v16 + 0.170884960903 * v17 + 0.491009939807 * v22 + 0.353630478771 * v23
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.44430074482e-13 * 1 + 0.173014747071 * v0 + 0.131796855906 * v1 + 0.2878290905 * v3 + -0.000911658580928 * v16 + 0.448805611116 * v21
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.58720702177e-14 * 1 + 0.226105855386 * v1 + 0.351021100068 * v5 + 0.143070449384 * v19 + 0.093930191355 * v21 + 0.260211690381 * v22
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.84179369807e-13 * 1 + 0.229811297557 * v1 + 0.365935751663 * v15 + 0.246462576069 * v20 + 0.285548446967 * v21 + -0.164284431212 * v27
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.08398855897e-13 * 1 + 0.127241190676 * v4 + 0.440936814664 * v9 + 0.297068716298 * v17 + -0.0103863854752 * v27 + 0.135664549205 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
