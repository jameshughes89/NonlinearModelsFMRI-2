from math import *

def funcL_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.07130120516e-13 * 1 + 0.0597542908705 * v0 + 0.213970992566 * v1 + 0.0234265681092 * v4 + 0.334464407661 * v8 + 0.31170871538 * v15 + 0.389656190202 * v17 + -0.0724202486554 * v18 + -0.0721283505969 * v20 + -0.107272532165 * v21 + -0.121981057478 * v23 + 0.103203420693 * v28
def funcL_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.4351050078e-13 * 1 + 0.141647889396 * v1 + 0.101571124425 * v5 + 0.0920670130332 * v8 + 0.0887969868685 * v12 + 0.239205259909 * v13 + 0.59540692988 * v15 + 0.193062864015 * v17 + -0.01962458245 * v18 + -0.28242913102 * v20 + -0.274424394921 * v21 + 0.283805782991 * v27
def funcL_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.30619415116e-14 * 1 + -0.383766890247 * v0 + 0.239064343339 * v1 + 0.135488524115 * v8 + 0.135455015833 * v13 + -0.079779381852 * v15 + -0.162669534695 * v16 + 0.50574081333 * v17 + 0.264949884808 * v18 + 0.117260851465 * v21 + 0.415466547537 * v24 + -0.27456965653 * v28
def funcL_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.45730321631e-14 * 1 + 0.127537544944 * v1 + 0.141746775164 * v3 + -0.209706457079 * v4 + -0.0118777936057 * v7 + 0.466609668814 * v13 + -0.0268381560633 * v15 + 0.404033379536 * v17 + -0.305972505878 * v19 + 0.0985393747141 * v21 + 0.0388993037026 * v22 + 0.279998542859 * v27
def funcL_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.3478148905e-13 * 1 + 0.361135254204 * v1 + -0.09285182793 * v2 + -0.550231221232 * v4 + 0.39389441116 * v8 + 0.238932498851 * v11 + 0.459185216413 * v12 + -0.24231184172 * v15 + 0.270086903085 * v17 + -0.109649712354 * v18 + 0.0557224196557 * v25 + 0.204416251302 * v27
def funcL_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.78029620316e-13 * 1 + 0.122289014825 * v3 + 0.315912356671 * v4 + -0.167652998541 * v8 + 0.0286107511153 * v9 + 0.172112136634 * v12 + 0.147333574709 * v13 + 0.491443777125 * v15 + 0.449531343929 * v17 + -0.182278020639 * v23 + -0.0940777050203 * v27 + -0.286464814671 * v28
def funcL_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12556270572e-13 * 1 + -0.0692151818847 * v0 + 0.0465491163875 * v1 + -0.00568308015916 * v4 + 0.140813510601 * v8 + 0.0086527876677 * v12 + 0.429486912852 * v13 + 0.367305244984 * v15 + 0.377987520039 * v17 + -0.0282389472493 * v20 + -0.0609895708073 * v21 + -0.104829608299 * v28
def funcL_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.75260333254e-13 * 1 + 0.23402821086 * v6 + 0.122058314241 * v11 + -0.137429768515 * v12 + 0.607827143146 * v13 + 0.0412739033175 * v15 + 0.0857220446968 * v16 + 0.650389345142 * v17 + 0.123219548796 * v18 + -0.211227686531 * v21 + -0.238443358083 * v27 + -0.25769603096 * v28
def funcL_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.11410344e-14 * 1 + 0.0985702354409 * v1 + 0.0916474208447 * v4 + 0.0346784100222 * v5 + 0.426934780445 * v6 + -0.158911620464 * v7 + 0.55064799886 * v8 + -0.0233814042317 * v9 + 0.11010331109 * v13 + -0.203647650819 * v18 + -0.111175584805 * v23 + 0.252311050887 * v27
def funcL_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.48843961574e-14 * 1 + 0.773864379271 * v1 + 0.184639744674 * v2 + -0.0392389977725 * v4 + 0.2422196499 * v6 + -0.0315389332699 * v7 + -0.368208120165 * v8 + -0.517740826323 * v9 + 0.209618414533 * v12 + -0.0111831124767 * v14 + 0.190991946844 * v26 + 0.371620060744 * v27
def funcL_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35701264477e-14 * 1 + 0.0783175288229 * v1 + -0.216570995605 * v4 + 0.139122742152 * v5 + -0.0350041386464 * v7 + -0.445394220954 * v8 + 0.0249524125616 * v13 + 0.524893550981 * v15 + 0.229492831261 * v17 + 0.0353319045473 * v20 + 0.212149100671 * v21 + 0.387672184315 * v27
def funcL_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.45682904331e-14 * 1 + 0.203948002862 * v1 + 0.229885773877 * v4 + 0.373621895521 * v8 + 0.0681064889293 * v9 + 0.00956899005484 * v11 + -0.0861545961962 * v12 + 0.090002071892 * v15 + -0.0256218623322 * v18 + -0.184099061638 * v20 + 0.114118802427 * v21 + 0.258266058477 * v27
def funcL_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.9523009217e-14 * 1 + 0.199915716711 * v1 + 0.0356487314497 * v4 + 0.127706661748 * v5 + 0.105887625501 * v6 + -0.217076066306 * v7 + 0.136636210895 * v8 + 0.310199685746 * v15 + 0.193032394342 * v17 + -0.0293430414866 * v20 + 0.013680128618 * v21 + 0.192868196662 * v27
def funcL_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.41666417563e-15 * 1 + 0.0625102027911 * v1 + -0.00578467617748 * v4 + 0.0289853400806 * v6 + -0.00869472447836 * v8 + 0.52928528606 * v15 + -0.0797369606289 * v17 + 0.162785548244 * v18 + -0.123094348588 * v20 + -0.0332786600867 * v21 + 0.0209377673552 * v22 + 0.500700552631 * v27
def funcL_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46737170997e-13 * 1 + 0.183146037167 * v8 + 0.0609791280691 * v12 + 0.189722585304 * v13 + 0.0601367792161 * v15 + 0.0905225350121 * v16 + 0.174706101939 * v20 + 0.0408457749657 * v22 + -0.0693144664305 * v23 + 0.00286796526581 * v24 + 0.270017831765 * v27 + 0.0770096635937 * v28
def funcL_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.83538686612e-13 * 1 + 0.234038893774 * v1 + -0.169189989039 * v2 + 0.144306817167 * v4 + 0.266418084305 * v5 + 0.0320814237676 * v8 + -0.0671944357223 * v13 + 0.158485078695 * v15 + 0.294267951304 * v17 + -0.13076335251 * v20 + 0.194728150676 * v21 + 0.106935123754 * v27
def funcL_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.10503600199e-14 * 1 + 0.0800591583826 * v1 + -0.026917571527 * v4 + 0.0304612031173 * v8 + -0.114234917367 * v12 + 0.201855038715 * v13 + 0.266031748771 * v15 + 0.444909705047 * v17 + -0.225305536055 * v20 + -0.0203897887093 * v21 + 0.117485991957 * v22 + 0.276889994284 * v27
def funcL_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.07683326442e-13 * 1 + -0.0593379875726 * v5 + 0.132061124814 * v7 + -0.0341135453816 * v8 + 0.296228805536 * v12 + 0.172898504552 * v15 + 0.382670732293 * v17 + 0.124993542703 * v20 + -0.0175894152411 * v21 + -0.0188420804086 * v22 + 0.0732709899477 * v23 + -0.0538750004394 * v28
def funcL_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.58289516394e-14 * 1 + 0.0202946395718 * v2 + 0.0650238167727 * v4 + -0.0215439663247 * v5 + 0.307742698823 * v6 + 0.590471809566 * v8 + -0.420787162407 * v12 + 0.299162615972 * v13 + 0.163468161585 * v15 + 0.104416207479 * v17 + -0.215218346785 * v18 + 0.15078361394 * v27
def funcL_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.82389488416e-14 * 1 + 0.030550129567 * v0 + 0.0492635971157 * v5 + 0.295613213504 * v8 + 0.320164162253 * v12 + 0.145596296493 * v15 + -0.305648428063 * v16 + 0.27555058689 * v17 + 0.109090838648 * v18 + 0.303570798629 * v20 + -0.130136244452 * v21 + -0.0252404767645 * v28
def funcL_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.76909644329e-14 * 1 + 0.506774001271 * v4 + 0.136853450563 * v8 + 0.0843876238203 * v11 + 0.0606488218219 * v13 + 0.442595781691 * v15 + 0.220656936796 * v17 + -0.00517766799529 * v18 + -0.0676606441714 * v20 + -0.113845779597 * v21 + 0.250486999094 * v25 + -0.522416473491 * v28
def funcL_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.20531565956e-13 * 1 + 0.384813501416 * v1 + 0.0595693045866 * v4 + -0.0941431176209 * v7 + 0.00511055219355 * v8 + -0.105057206047 * v9 + 0.442299611434 * v15 + 0.109698764892 * v17 + -0.0448491977892 * v18 + 0.0724038844265 * v23 + 0.233812709609 * v27 + -0.041652019482 * v28
def funcL_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.4316428565e-14 * 1 + -0.0460712395686 * v1 + 0.0287679564931 * v4 + -0.113939487657 * v5 + 0.0863686494198 * v6 + -0.0110699052419 * v7 + 0.596318372038 * v8 + -0.00705329577132 * v20 + -0.0204332578246 * v21 + -0.113800991761 * v25 + 0.363447172298 * v26 + 0.249461875 * v27
def funcL_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.94901198704e-13 * 1 + -0.0653984377227 * v3 + -0.0913156757238 * v8 + 0.170490111987 * v12 + 0.23276714213 * v13 + 0.394701455019 * v15 + 0.0431769854158 * v16 + 0.718548593526 * v17 + -0.244853963306 * v18 + 0.0703494998776 * v20 + -0.162008371744 * v22 + -0.0855374263204 * v28
def funcL_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.30229848541e-14 * 1 + -0.0422475189844 * v0 + 0.103197442262 * v1 + -0.0985676500096 * v4 + 0.93874754142 * v8 + -0.448846124521 * v12 + 0.492244426545 * v13 + 0.373883015119 * v15 + -0.0532347270083 * v16 + 0.192732592929 * v17 + -0.435996400879 * v21 + -0.0991619793081 * v28
def funcL_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.34910387759e-15 * 1 + 0.0934775000202 * v1 + -0.156318006537 * v4 + 0.00869380462244 * v5 + 0.032668638117 * v6 + 0.286089442778 * v8 + 0.0337736096186 * v15 + 0.399036389088 * v17 + -0.087620655182 * v18 + 0.00866820976528 * v20 + 0.0214031686674 * v21 + 0.42116865703 * v27
def funcL_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.50513700349e-13 * 1 + 0.335680502772 * v1 + 0.16298946958 * v5 + 0.152599176541 * v7 + 0.0643570489056 * v8 + -0.261753978337 * v9 + 0.350698013004 * v13 + 0.433179867841 * v17 + -0.261288957472 * v20 + -0.109603106872 * v21 + 0.159111261891 * v23 + 0.0198750315874 * v27
def funcL_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.26490599578e-14 * 1 + 0.447310491499 * v1 + 0.0532044620223 * v4 + 0.309810823675 * v5 + -0.0945505439356 * v8 + -0.442542858192 * v9 + 0.196077607486 * v12 + 0.414433543981 * v13 + -0.340546454905 * v20 + -0.120226806091 * v26 + 0.58207427434 * v27 + 0.0630944063924 * v28
def funcL_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.66613911406e-14 * 1 + 0.365250968096 * v1 + 0.0957268216812 * v4 + 0.0535147376465 * v5 + 0.148534978935 * v9 + 0.300349532923 * v13 + 0.18537600508 * v15 + 0.124422767361 * v17 + 0.0835159771246 * v20 + -0.00784986280615 * v21 + -0.200561874343 * v22 + -0.0898165993049 * v27
def funcL_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.76519999002e-14 * 1 + 0.0191244608227 * v1 + 0.133555634717 * v4 + -0.0675989541861 * v8 + -0.0224125806778 * v9 + 0.227026405353 * v13 + 0.343486187408 * v15 + 0.532713539968 * v17 + -0.296264955586 * v20 + 0.270076962585 * v26 + 0.101848109011 * v27 + -0.19063576668 * v28
def funcL_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.99381689598e-14 * 1 + -0.0250494205613 * v1 + -0.364837700523 * v4 + 0.0114720679251 * v5 + 0.263468344444 * v8 + 0.157193292121 * v12 + 0.40829689594 * v13 + 0.201776841015 * v17 + -0.0174631842159 * v21 + -0.159055884164 * v25 + 0.238555853329 * v26 + 0.368115912279 * v27
def funcL_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.28734340624e-14 * 1 + 0.144191097401 * v0 + 0.386372726772 * v1 + 0.0286838477176 * v4 + 0.128008016097 * v8 + 0.150179584929 * v15 + 0.0705705306939 * v16 + 0.363570308754 * v17 + -0.111550815803 * v18 + -0.328769380905 * v20 + -0.00176224487107 * v23 + 0.173031724746 * v27
def funcL_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02128364963e-13 * 1 + 0.0492945071329 * v3 + -0.173671743775 * v4 + 0.10502889963 * v5 + -0.0958504764918 * v8 + 0.285947333007 * v12 + 0.121836785532 * v13 + 0.428946450691 * v15 + -0.153392225608 * v16 + 0.249286728191 * v17 + 0.261179626669 * v27 + -0.0433353656587 * v28
def funcL_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.18462234529e-14 * 1 + 0.151705841468 * v1 + -0.136317469857 * v4 + 0.0735980020666 * v5 + 0.248841788005 * v6 + -0.00861790411895 * v7 + -0.0353110146644 * v11 + 0.156338435956 * v13 + 0.120054956472 * v14 + 0.31833529564 * v17 + 0.0503953690798 * v25 + 0.234784267376 * v27
def funcL_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.32920216716e-13 * 1 + 0.0584396372622 * v1 + -0.0203866507294 * v3 + 0.356242729927 * v7 + 0.164399871441 * v8 + 0.0945884672951 * v12 + 0.1093833429 * v15 + -0.0300090173632 * v16 + 0.230313108613 * v17 + 0.305650246523 * v18 + -0.0504398463572 * v21 + -0.0667570125368 * v28
def funcL_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.08107725544e-14 * 1 + 0.272184012769 * v1 + 0.11944205269 * v5 + 0.0963409497011 * v7 + -0.285688410102 * v8 + 0.222003488693 * v13 + 0.452815881124 * v15 + 0.122376834379 * v17 + -0.104466771033 * v18 + -0.311869214866 * v20 + 0.424077192637 * v21 + 0.0254514865192 * v27
def funcL_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.49467930967e-13 * 1 + 0.018199339437 * v1 + -0.403673864134 * v4 + -0.0204888014795 * v5 + 0.224857026772 * v7 + -0.0982943032341 * v9 + 0.573800815686 * v13 + 0.0732247315896 * v15 + 0.371933393521 * v17 + -0.00467804327461 * v20 + 0.0278257111396 * v25 + 0.262469590997 * v27
def funcL_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.2778078922e-13 * 1 + 0.00840733192415 * v0 + 0.335445893112 * v1 + 0.229332051485 * v6 + -0.0963391360385 * v7 + 0.242193478076 * v9 + 0.442552551519 * v15 + -0.00750871641406 * v17 + 0.0290142198867 * v18 + -0.288939589964 * v20 + 0.0432785431367 * v21 + -0.238424444163 * v23
def funcL_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.57031933809e-14 * 1 + 0.196306983301 * v1 + 0.0689068058077 * v3 + 0.245452753573 * v6 + -0.0866756694492 * v7 + 0.0039475908783 * v8 + 0.183873433039 * v12 + 0.491833487892 * v15 + 0.200209855508 * v17 + 0.0203801654279 * v18 + -0.0497966969922 * v21 + -0.230998032435 * v23
def funcL_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.03107029716e-14 * 1 + 0.00207755240851 * v0 + 0.0438011886125 * v8 + 0.195579155004 * v12 + -0.0645687371618 * v13 + 0.276404794801 * v15 + 0.405206575632 * v17 + -0.149243335099 * v18 + 0.000647584483541 * v23 + -0.157210064188 * v24 + 0.386192787692 * v27 + 0.00749979288407 * v28

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,]

def getFuncs(): return funcs
