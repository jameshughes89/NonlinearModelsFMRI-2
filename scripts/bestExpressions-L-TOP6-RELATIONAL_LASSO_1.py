from math import *

def func_RELATIONAL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.50857572774e-13 * 1 + 0.111793579031 * v1 + 0.332702546738 * v8 + 0.282863989076 * v17 + 0.0 * v18 + 0.132577273275 * v20
def func_RELATIONAL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.47020814143e-13 * 1 + 0.0971192670634 * v1 + 0.0 * v8 + 0.262227164289 * v13 + 0.334452442207 * v15 + 0.222465777918 * v17
def func_RELATIONAL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.21645916083e-14 * 1 + 0.0 * v8 + 0.0361837969491 * v15 + 0.371197091311 * v17 + 0.150257214399 * v18 + 0.254473343852 * v21
def func_RELATIONAL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.13496214375e-14 * 1 + 0.0 * v4 + 0.307953887624 * v13 + 0.223502265988 * v17 + 0.122881814874 * v21 + 0.244128783605 * v27
def func_RELATIONAL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.36542220047e-13 * 1 + 0.330471300652 * v1 + 0.208730874395 * v8 + 0.160830942101 * v12 + 0.0 * v18 + 0.135021291049 * v25
def func_RELATIONAL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59664204233e-13 * 1 + 0.118462559104 * v4 + 0.0 * v8 + 0.0986525673904 * v13 + 0.303064179577 * v15 + 0.359409686904 * v17
def func_RELATIONAL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.81860523343e-13 * 1 + 0.0481097988627 * v8 + 0.0 * v12 + 0.358088094031 * v13 + 0.283231703838 * v15 + 0.296933904061 * v17
def func_RELATIONAL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.89116680257e-14 * 1 + 0.217134895286 * v13 + 0.0 * v15 + 0.576526300841 * v17 + 0.0 * v18 + 0.0 * v21
def func_RELATIONAL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.55681541754e-14 * 1 + 0.214080670396 * v1 + 0.164160011017 * v6 + 0.330568029833 * v8 + 0.197564573263 * v13 + 0.0 * v23
def func_RELATIONAL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.91724808792e-14 * 1 + 0.703942222071 * v1 + 0.012646396181 * v6 + 0.0 * v8 + 0.0 * v14 + 0.157152727866 * v27
def func_RELATIONAL_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.533417555e-14 * 1 + 0.122514037576 * v1 + 0.20114054255 * v15 + 0.356480608012 * v17 + 0.0403204531503 * v21 + 0.117207538319 * v27
def func_RELATIONAL_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.17025210455e-14 * 1 + 0.23096253482 * v1 + 0.174955160071 * v4 + 0.278612597765 * v8 + 0.0678704943955 * v15 + 0.17047251699 * v27
def func_RELATIONAL_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.24710635012e-14 * 1 + 0.191385213113 * v1 + 0.142281783381 * v8 + 0.141037079108 * v15 + 0.290926115452 * v17 + 0.106319480941 * v20
def func_RELATIONAL_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.17964876815e-15 * 1 + 0.0505572706747 * v1 + 0.441168525383 * v15 + 0.0260845053795 * v17 + 0.0611514752973 * v18 + 0.339325213859 * v27
def func_RELATIONAL_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.30525641004e-13 * 1 + 0.213817226152 * v8 + 0.261499936546 * v13 + 0.289118942863 * v20 + 0.121274906332 * v22 + 0.0 * v28
def func_RELATIONAL_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.0391741915e-13 * 1 + 0.270410839412 * v1 + 0.00584762993506 * v8 + 0.435426777586 * v17 + 0.0 * v20 + 0.160304619677 * v21
def func_RELATIONAL_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.35514736597e-14 * 1 + 0.0 * v4 + 0.17304150313 * v15 + 0.430325899579 * v17 + 0.0 * v22 + 0.270315079172 * v27
def func_RELATIONAL_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.8118306574e-14 * 1 + 0.0194956568293 * v8 + 0.223215612416 * v12 + 0.185587985124 * v15 + 0.333539530125 * v17 + 0.12008505575 * v20
def func_RELATIONAL_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.61935388236e-14 * 1 + 0.105674729564 * v4 + 0.337136266142 * v6 + 0.277002554412 * v8 + 0.130755053918 * v17 + 0.0783730496803 * v27
def func_RELATIONAL_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.80922816099e-14 * 1 + 0.258485463163 * v12 + 0.105375325495 * v15 + 0.0 * v16 + 0.188274680448 * v18 + 0.328372094193 * v28
def func_RELATIONAL_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.1899050397e-14 * 1 + 0.203530863267 * v4 + 0.0178009143831 * v8 + 0.21802994758 * v15 + 0.141308808189 * v17 + 0.29330782189 * v25
def func_RELATIONAL_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.06402071118e-13 * 1 + 0.322682816778 * v1 + 0.348893561523 * v15 + 0.0770142897813 * v17 + 0.0 * v18 + 0.169839770341 * v27
def func_RELATIONAL_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.01867680818e-14 * 1 + 0.0 * v1 + 0.0 * v4 + 0.384167117148 * v8 + 0.112354272637 * v20 + 0.384482123076 * v27
def func_RELATIONAL_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.84906484829e-13 * 1 + 0.0 * v8 + 0.0 * v12 + 0.0616589548227 * v13 + 0.190515048717 * v15 + 0.617886437621 * v17
def func_RELATIONAL_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94617350477e-14 * 1 + 0.258755358827 * v8 + 0.0 * v12 + 0.197206575223 * v13 + 0.376817804505 * v15 + 0.0 * v17
def func_RELATIONAL_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.74708966085e-15 * 1 + 0.0785770572747 * v1 + 0.15041256754 * v8 + 0.454984026823 * v17 + 0.0 * v20 + 0.256844791394 * v27
def func_RELATIONAL_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.3153730403e-13 * 1 + 0.248756663705 * v1 + 0.0 * v9 + 0.353050820996 * v17 + 0.0747490823488 * v20 + 0.193375207269 * v27
def func_RELATIONAL_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.56810949542e-14 * 1 + 0.397584215011 * v1 + 0.0 * v4 + 0.0 * v9 + 0.135276354293 * v12 + 0.388843961718 * v13
def func_RELATIONAL_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.86174078255e-14 * 1 + 0.300981410891 * v1 + 0.231948681308 * v4 + 0.223409181178 * v15 + 0.135407263855 * v17 + 0.0114637395713 * v20
def func_RELATIONAL_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.89473880218e-14 * 1 + 0.0240277560512 * v1 + 0.0 * v4 + 0.0297834087237 * v13 + 0.491413917999 * v17 + 0.308503048127 * v27
def func_RELATIONAL_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.57166784006e-14 * 1 + 0.0752512870093 * v5 + 0.188606780344 * v12 + 0.3062908296 * v13 + 0.13595414888 * v21 + 0.17460446908 * v26
def func_RELATIONAL_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.32046708763e-13 * 1 + 0.0 * v8 + 0.0888250864402 * v15 + 0.19392579219 * v16 + 0.552286682158 * v17 + 0.0290715958391 * v18
def func_RELATIONAL_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.44446224633e-13 * 1 + 0.0 * v4 + 0.115713390227 * v12 + 0.334073845838 * v15 + 0.262977089499 * v17 + 0.169535042001 * v27
def func_RELATIONAL_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.39082297796e-14 * 1 + 0.0959220483127 * v5 + 0.245307895461 * v6 + 0.118221313226 * v14 + 0.204989059508 * v17 + 0.279282033913 * v27
def func_RELATIONAL_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.68766191346e-13 * 1 + 0.116909595853 * v1 + 0.0954739046626 * v8 + 0.114640693324 * v15 + 0.513716906123 * v18 + 0.0347918539644 * v21
def func_RELATIONAL_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.48553517073e-13 * 1 + 0.28317295822 * v1 + 0.13205788176 * v7 + 0.451000649883 * v15 + 0.0 * v17 + 0.00878212675606 * v21
def func_RELATIONAL_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.23087920335e-14 * 1 + 0.0 * v1 + 0.203531928192 * v13 + 0.26000072647 * v17 + 0.0293325823226 * v20 + 0.260466333885 * v27
def func_RELATIONAL_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.20733880124e-13 * 1 + 0.17500410509 * v1 + 0.130207498562 * v6 + 0.0473844844294 * v9 + 0.218338552906 * v15 + 0.0 * v18
def func_RELATIONAL_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.66076121634e-14 * 1 + 0.102332691808 * v1 + 0.166245861624 * v6 + 0.60721380096 * v15 + 0.0 * v18 + 0.0 * v21
def func_RELATIONAL_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.20077717381e-14 * 1 + 0.0 * v8 + 0.0122103243215 * v12 + 0.152666854274 * v15 + 0.391892156514 * v17 + 0.300838728892 * v27
def func_RELATIONAL_114924(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.88655837168e-15 * 1 + 0.104026227147 * v1 + 0.061800997525 * v4 + 0.0110273165407 * v15 + 0.591741928028 * v17 + 0.0857912395486 * v27

funcs = [funcL_RELATIONAL_100307,funcL_RELATIONAL_100408,funcL_RELATIONAL_101006,funcL_RELATIONAL_101107,funcL_RELATIONAL_101309,funcL_RELATIONAL_101410,funcL_RELATIONAL_101915,funcL_RELATIONAL_102008,funcL_RELATIONAL_102311,funcL_RELATIONAL_102816,funcL_RELATIONAL_103111,funcL_RELATIONAL_103414,funcL_RELATIONAL_103515,funcL_RELATIONAL_103818,funcL_RELATIONAL_104012,funcL_RELATIONAL_104820,funcL_RELATIONAL_105014,funcL_RELATIONAL_105115,funcL_RELATIONAL_105216,funcL_RELATIONAL_105923,funcL_RELATIONAL_106016,funcL_RELATIONAL_106319,funcL_RELATIONAL_106521,funcL_RELATIONAL_107321,funcL_RELATIONAL_107422,funcL_RELATIONAL_108121,funcL_RELATIONAL_108323,funcL_RELATIONAL_108525,funcL_RELATIONAL_108828,funcL_RELATIONAL_109123,funcL_RELATIONAL_109325,funcL_RELATIONAL_110411,funcL_RELATIONAL_111312,funcL_RELATIONAL_111413,funcL_RELATIONAL_111514,funcL_RELATIONAL_111716,funcL_RELATIONAL_113215,funcL_RELATIONAL_113619,funcL_RELATIONAL_113922,funcL_RELATIONAL_114419,funcL_RELATIONAL_114924,]

def getFuncs(): return funcs
