from math import *

def funcL_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.09574729849e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0897641196145 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0961547221197 * v13 + 0.0 * v14 + 0.196939244764 * v15 + 0.0769394752556 * v16 + 0.344392610866 * v17 + 0.0 * v18 + 0.0814563743731 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0735098800637 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.27645107201e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.170425859763 * v5 + 0.0 * v6 + 0.121226644547 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.000868567070114 * v16 + 0.226201608082 * v17 + 0.0 * v18 + 0.0 * v19 + 0.081004515796 * v20 + 0.14668652609 * v21 + 0.113052958368 * v22 + 0.0 * v23 + 0.0997868922735 * v24 + 0.0316563878642 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0706521298024 * v28
def funcL_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.2281383631e-13 * 1 + -0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.191218849233 * v5 + -0.0249324081834 * v6 + -0.0 * v7 + -0.0 * v8 + 0.0546273592726 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.161802054047 * v15 + 0.213053097676 * v16 + 0.0 * v17 + 0.0 * v18 + 0.227069269842 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + -0.0 * v27 + 0.0 * v28
def funcL_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.03123207576e-13 * 1 + 0.0 * v0 + 0.0182304198915 * v1 + -0.152958876819 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0112519537879 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.00771655979318 * v16 + 0.196370818632 * v17 + 0.103435557022 * v18 + -0.0 * v19 + 0.186310230104 * v20 + 0.0 * v21 + 0.378778101303 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.26780312489e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0523220326862 * v4 + 0.0959973958531 * v5 + 0.00891387671274 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.145110306963 * v20 + 0.118393226515 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.253353717716 * v25 + 0.0 * v26 + 0.239602672467 * v27 + 0.0191757254771 * v28
def funcL_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.32876807474e-14 * 1 + 0.0 * v0 + 0.00801647842652 * v1 + -0.0 * v2 + -0.0211079884555 * v3 + 0.0 * v4 + 0.14780540161 * v5 + 0.0 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + 0.121101345304 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.0686092984874 * v15 + 0.0 * v16 + 0.236081742662 * v17 + 0.0367342424241 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0 * v21 + 0.0837067722543 * v22 + 0.233606877364 * v23 + -0.0 * v24 + 0.0157090602941 * v25 + 0.0 * v26 + 0.0 * v27 + 0.00356196942219 * v28
def funcL_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.65351077282e-13 * 1 + 0.0 * v0 + 0.181249087543 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0672326046153 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0547545740397 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.150075501371 * v20 + 0.307369182518 * v21 + 0.157690686935 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.00642293920492 * v28
def funcL_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.90777111555e-14 * 1 + 0.0 * v0 + 0.0420853106158 * v1 + 0.429353590313 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0423129799128 * v7 + -0.0 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0141169789194 * v17 + 0.0 * v18 + 0.0 * v19 + 0.287172801587 * v20 + 0.11249520239 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.23705983621e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.216490545561 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0783126310394 * v9 + 0.0 * v10 + 0.0860008226307 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.155511142777 * v15 + 0.0 * v16 + 0.0769032477154 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0487005574802 * v20 + 0.204773059185 * v21 + 0.076217455091 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.27635138474e-13 * 1 + 0.0 * v0 + 0.00217124099163 * v1 + 0.0 * v2 + 0.0 * v3 + 0.221933372726 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0736895473803 * v7 + 0.0413884025797 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0141719669544 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.046871785224 * v20 + 0.325242190452 * v21 + 0.168717252765 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0402673582265 * v27 + 0.0 * v28
def funcL_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.72983874642e-14 * 1 + 0.0297799054755 * v0 + 0.0886576260041 * v1 + 0.0517463883958 * v2 + 0.0 * v3 + 0.0 * v4 + 0.148692799036 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.008005693409 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0698027424622 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0410946263915 * v19 + 0.0 * v20 + 0.227246337798 * v21 + 0.2332228759 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0315157064882 * v28
def funcL_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.23439520081e-13 * 1 + 0.0 * v0 + 0.133385852374 * v1 + 0.0135956773599 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0179493975694 * v5 + 0.0 * v6 + 0.0803467695578 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0907526038405 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0233720972517 * v15 + 0.0 * v16 + 0.0365793905646 * v17 + 0.0 * v18 + 0.0855371602214 * v19 + 0.184266438837 * v20 + 0.132728019636 * v21 + 0.0739033624658 * v22 + 0.0581176713375 * v23 + 0.0 * v24 + 0.0651273320094 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.84564884546e-14 * 1 + -0.0 * v0 + -0.0 * v1 + 0.0 * v2 + 0.0842618935721 * v3 + 0.0 * v4 + 0.0 * v5 + -0.25227759303 * v6 + -0.0 * v7 + -0.0570518650418 * v8 + 0.0 * v9 + 0.0591595673001 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + 0.0 * v16 + 0.487454923121 * v17 + -0.0 * v18 + 0.0 * v19 + 0.356123280765 * v20 + -0.0 * v21 + 0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + -0.0 * v27 + 0.0 * v28
def funcL_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.19781579773e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + -0.0 * v3 + 0.00764766123409 * v4 + 0.332621220826 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + 0.0 * v12 + 0.0 * v13 + -0.0 * v14 + 0.288528020365 * v15 + -0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.13583435002 * v20 + 0.0393050370812 * v21 + 0.0530108571306 * v22 + 0.0 * v23 + 0.0 * v24 + 0.106767038975 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.38054581527e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0511156013529 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.165120717341 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0391868118266 * v14 + 0.453179435556 * v15 + 0.0 * v16 + 0.0653963039806 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0102724046348 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.100935138156 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.59517324472e-13 * 1 + 0.0 * v0 + 0.0974299669299 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.103756766454 * v7 + 0.0 * v8 + 0.0693846053579 * v9 + 0.0947631614064 * v10 + 0.0385429422037 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.049392281662 * v20 + 0.105538763415 * v21 + 0.16574795242 * v22 + 0.0409268671262 * v23 + 0.0454777073555 * v24 + 0.183399557616 * v25 + 0.0 * v26 + 0.0 * v27 + 0.049624455436 * v28
def funcL_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97311583374e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.093217479148 * v15 + 0.305861531076 * v16 + 0.0 * v17 + -0.0 * v18 + 0.0348891189418 * v19 + -0.0 * v20 + 0.275714342333 * v21 + 0.179513460173 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v27 + 0.123035481787 * v28
def funcL_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.35542702345e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.040222939173 * v5 + 0.0 * v6 + 0.108322891362 * v7 + 0.0 * v8 + 0.275861283425 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0282287510638 * v12 + 0.0 * v13 + 0.0 * v14 + 0.119796312357 * v15 + 0.0 * v16 + 0.00629777319749 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.213432184355 * v21 + 0.0 * v22 + 0.0637120320857 * v23 + 0.0347148374703 * v24 + 0.0639919620567 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.75897132076e-14 * 1 + 0.0 * v0 + 0.0755381308726 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.145947286297 * v5 + 0.164244474 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.183598084384 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + -0.0 * v15 + 0.0 * v16 + -0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.147875251537 * v21 + 0.0 * v22 + 0.195369360309 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + 0.0 * v27 + 0.00821035092037 * v28
def funcL_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.33594240033e-14 * 1 + 0.0 * v0 + 0.0349635748689 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0752107213097 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.110561707915 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0795108411656 * v20 + 0.365236235489 * v21 + 0.120697229277 * v22 + 0.0 * v23 + 0.0 * v24 + 0.131753802635 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0169505307816 * v28
def funcL_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.18347935274e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0663108043849 * v2 + 0.0 * v3 + 0.0 * v4 + 0.102788060584 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0256696147718 * v9 + 0.0 * v10 + 0.0877781487223 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.169352811971 * v17 + 0.0 * v18 + 0.0 * v19 + 0.13017524235 * v20 + 0.0121072338509 * v21 + 0.0511504150442 * v22 + 0.0 * v23 + 0.0130237187711 * v24 + 0.0417685715421 * v25 + 0.0 * v26 + 0.0 * v27 + 0.300240268319 * v28
def funcL_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.49133268846e-14 * 1 + -0.0 * v0 + 0.122951665642 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0838402490603 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0917166788122 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.148502601891 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.137837192489 * v19 + 0.288351341438 * v20 + 0.0549667423481 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25860343716e-13 * 1 + 0.0 * v0 + 0.0590537425043 * v1 + 0.0 * v2 + 0.0 * v3 + 0.104067823479 * v4 + 0.0961327000771 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.043777330952 * v9 + 0.0 * v10 + 0.189285560123 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.166137691112 * v20 + 0.170035026157 * v21 + 0.150424993503 * v22 + 0.0106086876132 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.21756949815e-15 * 1 + 0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + -0.0 * v7 + 0.0632584496203 * v8 + -0.0 * v9 + 0.0 * v10 + 0.0189757171539 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.253214313163 * v17 + -0.0 * v18 + 0.0 * v19 + 0.0228952765066 * v20 + 0.0 * v21 + 0.562930978622 * v22 + 0.0 * v23 + 0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.94023459932e-14 * 1 + 0.0 * v0 + 0.213869460774 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00478617668321 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0488009846719 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0253447390862 * v15 + 0.0 * v16 + 0.236787458504 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.029743051848 * v21 + 0.0982177353021 * v22 + 0.196111953404 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0470052883195 * v28
def funcL_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.23923939812e-14 * 1 + 0.0 * v0 + 0.0316091560521 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0379299395791 * v4 + 0.284128068061 * v5 + 0.199192575007 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + 0.0 * v12 + -0.0 * v13 + -0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.126017053707 * v19 + 0.0964234849031 * v20 + 0.15624966013 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0236640411651 * v25 + -0.0 * v26 + 0.0 * v27 + 0.0467761797744 * v28
def funcL_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.49512006916e-13 * 1 + 0.0 * v0 + 0.0330247944113 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0101698633351 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.25320773785 * v9 + 0.0 * v10 + 0.0489335048037 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0253766688393 * v15 + 0.0384729432613 * v16 + 0.0508169739311 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.221295658388 * v21 + 0.0408755462239 * v22 + 0.0386329700344 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.269575090635 * v28
def funcL_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.85694672766e-14 * 1 + 0.0 * v0 + 0.0329580439668 * v1 + 0.0 * v2 + 0.0 * v3 + 0.00197189521197 * v4 + 0.247592465766 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.130097853525 * v20 + 0.237190143829 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.185543311623 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0961774143057 * v28
def funcL_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.38826063046e-13 * 1 + 0.0 * v0 + 0.12251424026 * v1 + 0.0 * v2 + 0.0 * v3 + 0.122984737689 * v4 + 0.147732458619 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.113647519423 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0321448048003 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0282222449324 * v16 + 0.00578668048827 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.263110603725 * v21 + 0.0752453420684 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0524821720731 * v27 + 0.0 * v28
def funcL_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.1139654489e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0259494303829 * v9 + 0.0 * v10 + 0.243536379261 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0882812365403 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0204229565829 * v19 + 0.0 * v20 + 0.235177658928 * v21 + 0.172827217601 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v27 + 0.141555481617 * v28
def funcL_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.38244955471e-13 * 1 + 0.0342797046333 * v0 + 0.0 * v1 + -0.0 * v2 + 0.0 * v3 + 0.098292823884 * v4 + 0.0 * v5 + -0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.054108160089 * v9 + 0.0 * v10 + 0.00589851428188 * v11 + 0.0 * v12 + 0.0226662665785 * v13 + -0.0 * v14 + 0.0 * v15 + 0.00914000695198 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0360040774205 * v20 + 0.443188789963 * v21 + 0.154167586356 * v22 + -0.0 * v23 + 0.110334746467 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.39817944977e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0495756614467 * v2 + 0.0 * v3 + 0.0428076931258 * v4 + 0.0 * v5 + 0.0 * v6 + 0.256892739893 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0162472667507 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.105629391762 * v20 + 0.311095930172 * v21 + 0.150401930422 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.68004726829e-14 * 1 + 0.0 * v0 + 0.0600855810802 * v1 + 0.019406569696 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.214076319662 * v9 + 0.0 * v10 + 0.0351511744953 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0263618455361 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.237132672149 * v21 + 0.226120197931 * v22 + 0.0 * v23 + 0.0 * v24 + 0.136077822203 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.16639915862e-14 * 1 + -0.0 * v0 + 0.0 * v1 + -0.0 * v2 + -0.0 * v3 + 0.0 * v4 + 0.0 * v5 + -0.262890520034 * v6 + 0.0 * v7 + -0.0 * v8 + 0.0 * v9 + -0.0 * v10 + 0.0 * v11 + -0.0 * v12 + -0.0 * v13 + 0.0 * v14 + 0.0200647000195 * v15 + -0.0895034279509 * v16 + 0.0 * v17 + -0.0 * v18 + -0.0 * v19 + 0.247300042864 * v20 + 0.0595791630747 * v21 + 0.300950610719 * v22 + -0.0 * v23 + -0.0 * v24 + -0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.05988671175e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.237648074841 * v5 + 0.0 * v6 + 0.0919936892227 * v7 + -0.0 * v8 + 0.120190535218 * v9 + 0.0 * v10 + 0.0 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0112772347236 * v19 + 0.15874211464 * v20 + 0.0407085254339 * v21 + 0.291770476013 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0 * v28
def funcL_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.01524778124e-13 * 1 + 0.305020330905 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + -0.0 * v5 + 0.299302823991 * v6 + -0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + -0.0 * v11 + -0.0 * v12 + -0.0 * v13 + -0.0 * v14 + -0.173496998151 * v15 + 0.0 * v16 + 0.247430006547 * v17 + -0.0 * v18 + 0.0 * v19 + -0.0 * v20 + 0.0 * v21 + 0.185807528604 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + -0.0 * v26 + -0.0 * v27 + 0.146257237559 * v28
def funcL_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.73716378448e-14 * 1 + 0.030381923281 * v0 + 0.0136227967932 * v1 + 0.0 * v2 + 0.112813576081 * v3 + 0.0489871931995 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0240474635964 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0542601021085 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.164097862953 * v20 + 0.377026763092 * v21 + 0.0 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0257115864464 * v25 + 0.0 * v26 + 0.0 * v27 + 0.170556439346 * v28
def funcL_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.72251964888e-14 * 1 + 0.0 * v0 + 0.132070001142 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.299877872202 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.0354009735489 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.0433515417608 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0932937438528 * v19 + 0.0 * v20 + 0.0549918945232 * v21 + 0.208838801368 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0189935251123 * v25 + -0.0 * v26 + 0.0306736523806 * v27 + 0.0505112675037 * v28
def funcL_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.12748459308e-13 * 1 + 0.00575019063637 * v0 + 0.129489872333 * v1 + 0.0 * v2 + 0.0 * v3 + 0.0 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.181731592677 * v9 + 0.0 * v10 + 0.00621073594477 * v11 + -0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.24644557961 * v15 + 0.0 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0 * v19 + 0.059370804394 * v20 + 0.219860458258 * v21 + -0.0 * v22 + -0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0 * v26 + 0.0 * v27 + 0.0668056234233 * v28
def funcL_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.25240181805e-13 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v2 + 0.0 * v3 + 0.234631751929 * v4 + 0.0 * v5 + 0.0 * v6 + 0.0 * v7 + 0.0 * v8 + 0.159351515248 * v9 + 0.0 * v10 + 0.0 * v11 + 0.0 * v12 + 0.0 * v13 + 0.0 * v14 + 0.0 * v15 + 0.00370341178359 * v16 + 0.0 * v17 + 0.0 * v18 + 0.0537111847639 * v19 + 0.0 * v20 + 0.287639488735 * v21 + 0.12132041924 * v22 + 0.0 * v23 + 0.0 * v24 + 0.0 * v25 + 0.0886934411242 * v26 + 0.0 * v27 + 0.0451427453562 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
