from math import *

def funcL_LANGUAGE_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.26169950639e-14 * 1 + 0.0 * v0 + 0.228287947747 * v1 + 0.0177687073631 * v11 + 0.0 * v16 + 0.0 * v17 + 0.372461846374 * v20 + 0.0 * v21 + 0.0 * v23 + 0.00992881441254 * v27 + 0.232803431838 * v28
def funcL_LANGUAGE_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.00486189003e-13 * 1 + 0.0 * v1 + 0.0200420218626 * v7 + 0.0 * v8 + -0.0 * v15 + 0.366599277015 * v17 + 0.315117490633 * v18 + 0.0 * v20 + 0.0 * v21 + 0.135847888978 * v27 + -0.0 * v28
def funcL_LANGUAGE_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.22995970996e-14 * 1 + 0.0 * v0 + -0.0 * v3 + -0.0 * v8 + -0.0 * v12 + 0.132784607983 * v17 + 0.406863452383 * v18 + 0.0871900877647 * v20 + 0.0 * v21 + 0.0 * v27 + 0.281836620356 * v28
def funcL_LANGUAGE_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.7845051216e-14 * 1 + 0.363694785187 * v1 + 0.0 * v4 + 0.219681620285 * v7 + 0.0 * v9 + 0.0940219120512 * v13 + 0.0 * v14 + 0.0 * v15 + 0.207571134825 * v17 + 0.0252522415653 * v21 + 0.000812665350034 * v27
def funcL_LANGUAGE_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.74487088536e-14 * 1 + 0.143776214987 * v0 + 0.0 * v8 + 0.0185197752377 * v9 + 0.141552404747 * v11 + 0.0 * v13 + 0.100853791191 * v15 + 0.0 * v20 + 0.37239253396 * v21 + 0.0425519247852 * v27 + 0.0 * v28
def funcL_LANGUAGE_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.39989919873e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.00579539382613 * v6 + 0.273293558682 * v7 + 0.0 * v15 + 0.403995245057 * v17 + 0.0166790078901 * v18 + 0.0 * v20 + 0.0622196339557 * v27
def funcL_LANGUAGE_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.97664745486e-13 * 1 + 0.115026520756 * v1 + 0.0608201212448 * v8 + 0.0 * v15 + 0.398725456212 * v17 + 0.0701584856097 * v18 + 0.0187380512752 * v20 + 0.170149727281 * v21 + -0.0 * v23 + -0.0 * v25 + 0.0 * v27
def funcL_LANGUAGE_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.83764477135e-14 * 1 + 0.208042872151 * v1 + 0.0678179663382 * v8 + 0.0 * v11 + 0.0 * v15 + 0.0413985687493 * v16 + 0.144432019835 * v17 + 0.176683349424 * v18 + 0.0 * v20 + 0.198408901299 * v21 + 0.0231637852074 * v27
def funcL_LANGUAGE_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.50190214489e-14 * 1 + 0.0546156873189 * v0 + 0.0 * v2 + 0.0 * v3 + 0.170003276144 * v16 + 0.287350910467 * v17 + 0.112878596397 * v18 + 0.0568953138976 * v19 + 0.0 * v20 + 0.0 * v22 + 0.146209703071 * v24
def funcL_LANGUAGE_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.98264145428e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.0 * v4 + 0.0108574776674 * v8 + 0.0647072081933 * v9 + 0.25401863447 * v12 + 0.0 * v13 + 0.0 * v15 + 0.434148695832 * v17 + 0.0980560188821 * v21
def funcL_LANGUAGE_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.30689850952e-15 * 1 + 0.0 * v1 + -0.0 * v5 + 0.559569286861 * v9 + -0.082128866404 * v14 + -0.0 * v15 + -0.0 * v20 + -0.0 * v21 + -0.240947777362 * v22 + -0.0 * v25 + -0.0663976486233 * v26
def funcL_LANGUAGE_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.60110177632e-14 * 1 + 0.0 * v0 + -0.0 * v5 + 0.209964806866 * v7 + 0.0784665577186 * v15 + 0.0 * v16 + 0.436850538089 * v17 + 0.0494854826295 * v18 + 0.0 * v20 + 0.0 * v23 + 0.0960444403771 * v28
def funcL_LANGUAGE_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.4856778595e-14 * 1 + 0.162945802155 * v7 + 0.0 * v8 + 0.0 * v15 + 0.0 * v17 + 0.229752119516 * v18 + 0.0 * v20 + 0.0885430235032 * v21 + 0.0 * v23 + 0.218907999393 * v27 + 0.258543386161 * v28
def funcL_LANGUAGE_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.56410424397e-13 * 1 + 0.0777900306527 * v0 + -0.0 * v4 + 0.0281008460566 * v8 + 0.124467270287 * v11 + 0.275170070634 * v17 + 0.0 * v18 + 0.0924888028761 * v21 + 0.0 * v22 + 0.315326931695 * v27 + 0.0237377401191 * v28
def funcL_LANGUAGE_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.56131100344e-13 * 1 + 0.0950227357546 * v1 + 0.0 * v5 + 0.0 * v7 + 0.0 * v8 + 0.0 * v15 + 0.304070389918 * v17 + 0.0603770982332 * v20 + 0.229384315708 * v21 + 0.0 * v22 + 0.246671189355 * v28
def funcL_LANGUAGE_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.75391346669e-14 * 1 + 0.0963714181428 * v1 + 0.0 * v6 + 0.195891995047 * v7 + -0.0 * v8 + 0.292443328727 * v17 + 0.153326517725 * v18 + 0.129833892792 * v20 + 0.105300355001 * v21 + 0.0 * v23 + 0.0 * v27
def funcL_LANGUAGE_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.02972977313e-13 * 1 + 0.0 * v1 + 0.0 * v3 + 0.124618135832 * v8 + 0.084296584745 * v10 + 0.0264184254471 * v11 + 0.0 * v12 + 0.0210651481652 * v16 + 0.0 * v17 + 0.212412026595 * v21 + 0.279626999348 * v27
def funcL_LANGUAGE_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.67870282379e-14 * 1 + 0.0 * v0 + 0.102949182803 * v7 + 0.152524221899 * v8 + 0.0 * v9 + 0.226355449689 * v17 + 0.0 * v18 + 0.0 * v20 + 0.184534116467 * v21 + 0.032007574407 * v27 + 0.247887364756 * v28
def funcL_LANGUAGE_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.00598433724e-14 * 1 + 0.0 * v1 + 0.226307594458 * v6 + 0.0309876836169 * v7 + -0.0 * v9 + 0.0 * v15 + 0.456756107725 * v17 + 0.166351920551 * v18 + 0.0 * v20 + 0.0391282310953 * v21 + 0.0 * v28
def funcL_LANGUAGE_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.41762813569e-14 * 1 + 0.0 * v8 + 0.0 * v12 + 0.0 * v15 + 0.0 * v16 + 0.493120348729 * v17 + 0.0 * v18 + 0.0 * v20 + 0.243066627599 * v21 + 0.118794580885 * v27 + 0.025056371699 * v28
def funcL_LANGUAGE_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.28722491862e-13 * 1 + 0.052557239241 * v1 + 0.0 * v6 + 0.482244188217 * v7 + 0.0 * v15 + 0.0240536437877 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0683424817781 * v21 + 0.257966091803 * v27 + 0.132910764323 * v28
def funcL_LANGUAGE_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 7.92972169048e-14 * 1 + 0.0 * v1 + 0.0883729276984 * v7 + 0.0 * v8 + 0.0 * v11 + 0.202150541671 * v15 + 0.141685757853 * v17 + 0.218859859827 * v18 + 0.0 * v20 + 0.0 * v21 + 0.22100141173 * v27
def funcL_LANGUAGE_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.52375303768e-14 * 1 + 0.0 * v2 + 0.0 * v3 + -0.0 * v4 + 0.0 * v8 + 0.0 * v9 + 0.0 * v10 + 0.757817149184 * v17 + 0.0467600433129 * v19 + 0.0 * v22 + 0.0 * v28
def funcL_LANGUAGE_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.04393212671e-13 * 1 + 0.164968304802 * v1 + 0.467230993596 * v8 + 0.0 * v12 + 0.0 * v16 + 0.151855732157 * v17 + 0.0859601042708 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0256886774096 * v27
def funcL_LANGUAGE_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.44771392839e-13 * 1 + 0.19027182419 * v1 + 0.0 * v3 + 0.141118952302 * v7 + 0.0 * v8 + 0.0 * v9 + 0.0928503528277 * v17 + 0.0 * v19 + 0.102064582203 * v20 + 0.0 * v21 + 0.360536984769 * v28
def funcL_LANGUAGE_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.00570782982e-14 * 1 + 0.0 * v0 + 0.0 * v4 + 0.0573807363444 * v7 + 0.375876218966 * v8 + 0.359530649491 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0644512456159 * v23 + 0.0 * v27
def funcL_LANGUAGE_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -9.41416101603e-14 * 1 + 0.0543471653971 * v1 + 0.0 * v5 + 0.0 * v8 + 0.0505078976301 * v17 + 0.216898612922 * v18 + 0.317017718476 * v20 + 0.0 * v21 + 0.0 * v23 + 0.262798140461 * v27 + 0.0163581112262 * v28
def funcL_LANGUAGE_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.12947412986e-14 * 1 + 0.146404315164 * v1 + 0.0 * v6 + 0.00324012899098 * v7 + 0.127926311735 * v8 + 0.0 * v15 + 0.221234649009 * v17 + 0.0 * v20 + 0.0343368462482 * v21 + 0.26114039597 * v27 + 0.11604386578 * v28
def funcL_LANGUAGE_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.74010976623e-13 * 1 + 0.0764267330906 * v1 + 0.0 * v4 + 0.0610439584441 * v8 + 0.0 * v9 + 0.0 * v13 + 0.26941271649 * v17 + 0.250368348718 * v20 + 0.0 * v21 + 0.150472141736 * v22 + 0.030319891494 * v27
def funcL_LANGUAGE_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.76545593285e-14 * 1 + 0.0 * v1 + 0.0 * v5 + 0.363725029976 * v7 + 0.0 * v8 + 0.315126521044 * v17 + 0.185391148988 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v27 + 0.0 * v28
def funcL_LANGUAGE_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.58365262423e-14 * 1 + 0.0 * v0 + 0.0718646460058 * v1 + 0.0 * v4 + 0.012849700927 * v8 + -0.0 * v15 + 0.287289196251 * v17 + 0.265879211808 * v20 + 0.112744674912 * v21 + 0.0 * v23 + 0.0 * v28
def funcL_LANGUAGE_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.69299486599e-15 * 1 + 0.114990493903 * v1 + 0.381516385988 * v7 + 0.0 * v8 + 0.0646551224051 * v15 + 0.316160815406 * v17 + 0.0 * v18 + 0.0 * v19 + 0.0 * v20 + 0.0161751523614 * v21 + 0.0 * v27
def funcL_LANGUAGE_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.76613108456e-13 * 1 + 0.135978094786 * v0 + 0.0143404616228 * v1 + 0.0612324022172 * v4 + 0.0 * v8 + 0.0 * v15 + 0.459302358805 * v17 + 0.0 * v18 + 0.0469624753778 * v21 + 0.0449503667967 * v23 + 0.132079893472 * v28
def funcL_LANGUAGE_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.24192764675e-13 * 1 + 0.0487170924839 * v1 + 0.0 * v4 + 0.0 * v7 + 0.0 * v15 + 0.0846787617086 * v16 + 0.175031618724 * v17 + 0.418896564193 * v20 + 0.143060654538 * v21 + 0.0 * v22 + 0.0 * v27
def funcL_LANGUAGE_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.88774607821e-14 * 1 + 0.0 * v0 + 0.0 * v1 + 0.264848522799 * v7 + 0.0 * v15 + 0.589956497789 * v17 + 0.0 * v18 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0 * v27
def funcL_LANGUAGE_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.36442389746e-13 * 1 + 0.134723253622 * v1 + -0.0 * v4 + 0.0 * v8 + 0.0 * v11 + 0.268050537571 * v17 + 0.30806667171 * v18 + 0.0880988836423 * v20 + 0.0771405992969 * v21 + 0.0 * v23 + 0.0 * v27
def funcL_LANGUAGE_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.88923446269e-13 * 1 + 0.0 * v0 + 0.125398815128 * v1 + 0.393135442998 * v8 + 0.0 * v9 + 0.0 * v12 + 0.272927642359 * v17 + 0.0 * v20 + 0.0 * v21 + 0.0 * v22 + 0.0204493047778 * v28
def funcL_LANGUAGE_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 5.9330262752e-14 * 1 + 0.110804679816 * v7 + 0.172043268948 * v8 + 0.0 * v9 + 0.0418016995032 * v11 + 0.16908757104 * v16 + 0.0 * v17 + 0.0714586084408 * v18 + 0.0647513329808 * v20 + 0.167036190859 * v21 + 0.0 * v27
def funcL_LANGUAGE_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.42498342501e-14 * 1 + 0.0662808682088 * v0 + 0.0 * v1 + 0.0776451078721 * v8 + 0.0 * v9 + 0.0760720123442 * v10 + 0.105283960875 * v11 + 0.0826203946548 * v17 + 0.342924568426 * v20 + 0.0 * v21 + 0.129226928194 * v27
def funcL_LANGUAGE_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.90765938568e-14 * 1 + 0.160663184046 * v1 + -0.0942884758407 * v3 + 0.0 * v6 + 0.0 * v7 + -0.0 * v10 + 0.143696555705 * v11 + 0.0 * v15 + 0.167010454359 * v17 + 0.423642645624 * v18 + -0.23514056067 * v25

funcs = [funcL_LANGUAGE_100307,funcL_LANGUAGE_100408,funcL_LANGUAGE_101006,funcL_LANGUAGE_101107,funcL_LANGUAGE_101309,funcL_LANGUAGE_101410,funcL_LANGUAGE_101915,funcL_LANGUAGE_102008,funcL_LANGUAGE_102311,funcL_LANGUAGE_102816,funcL_LANGUAGE_103111,funcL_LANGUAGE_103414,funcL_LANGUAGE_103515,funcL_LANGUAGE_103818,funcL_LANGUAGE_104012,funcL_LANGUAGE_104820,funcL_LANGUAGE_105014,funcL_LANGUAGE_105115,funcL_LANGUAGE_105216,funcL_LANGUAGE_105923,funcL_LANGUAGE_106016,funcL_LANGUAGE_106319,funcL_LANGUAGE_106521,funcL_LANGUAGE_107321,funcL_LANGUAGE_107422,funcL_LANGUAGE_108121,funcL_LANGUAGE_108323,funcL_LANGUAGE_108525,funcL_LANGUAGE_108828,funcL_LANGUAGE_109123,funcL_LANGUAGE_109325,funcL_LANGUAGE_110411,funcL_LANGUAGE_111312,funcL_LANGUAGE_111413,funcL_LANGUAGE_111514,funcL_LANGUAGE_111716,funcL_LANGUAGE_113215,funcL_LANGUAGE_113619,funcL_LANGUAGE_113922,funcL_LANGUAGE_114419,]

def getFuncs(): return funcs
