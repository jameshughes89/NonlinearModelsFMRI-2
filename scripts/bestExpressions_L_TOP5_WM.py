from math import *

def func_WM_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.26797540655e-13 * 1 + 0.250508533928 * v4 + 0.170099921272 * v15 + 0.177880905881 * v16 + 0.379566742611 * v17
def func_WM_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -8.48284777159e-14 * 1 + 0.0904250414053 * v4 + 0.322120325741 * v5 + 0.34553768827 * v17 + 0.260479654099 * v21
def func_WM_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.66516868827e-13 * 1 + 0.237265064754 * v5 + 0.112873129786 * v12 + 0.270326453596 * v16 + 0.269036756064 * v19
def func_WM_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.1349658019e-13 * 1 + 0.0575204613303 * v4 + 0.330486687777 * v17 + 0.176771186489 * v20 + 0.433435685733 * v22
def func_WM_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.19177821712e-13 * 1 + 0.22180325543 * v4 + 0.258445693093 * v5 + 0.259701978665 * v20 + 0.235493360908 * v27
def func_WM_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.86112178587e-14 * 1 + 0.235009465658 * v5 + 0.323179025727 * v17 + 0.120857469819 * v18 + 0.339469319718 * v23
def func_WM_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.56195549275e-13 * 1 + 0.235408581587 * v1 + -0.0570899171098 * v17 + 0.318439928136 * v20 + 0.42998076297 * v21
def func_WM_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.82441703165e-14 * 1 + 0.124657983632 * v1 + 0.446839434765 * v2 + 0.145108709407 * v17 + 0.298846052678 * v20
def func_WM_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.17633409072e-13 * 1 + 0.233702875106 * v5 + 0.279232925152 * v17 + 0.384420178585 * v21 + 0.121635641135 * v22
def func_WM_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.7753838361e-13 * 1 + 0.0879910113015 * v7 + 0.254145876802 * v8 + 0.44700730594 * v21 + 0.199898090202 * v27
def func_WM_103111(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.7768206329e-14 * 1 + 0.136096131416 * v5 + 0.352361653252 * v21 + 0.406809975883 * v22 + 0.104122587489 * v23
def func_WM_103414(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.74713334457e-13 * 1 + 0.37733013134 * v1 + 0.323994887363 * v15 + 0.238553844739 * v20 + -0.0101301076001 * v27
def func_WM_103515(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.32246401144e-15 * 1 + 0.180420761248 * v3 + 0.0712051662467 * v10 + 0.512908992865 * v17 + 0.167467241465 * v20
def func_WM_103818(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.34560441006e-14 * 1 + 0.247644922283 * v1 + 0.235325876293 * v5 + 0.301713968953 * v25 + 0.199831313849 * v27
def func_WM_104012(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.49652562973e-14 * 1 + 0.112088332131 * v8 + 0.4777572244 * v15 + 0.109652936888 * v17 + 0.183188892145 * v21
def func_WM_104820(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.75325748777e-13 * 1 + 0.225334462691 * v9 + 0.144179530126 * v10 + 0.301887289299 * v20 + 0.304920238401 * v22
def func_WM_105014(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.32379463855e-14 * 1 + 0.113201278226 * v15 + 0.367057824679 * v16 + 0.353796117816 * v21 + 0.296981872553 * v22
def func_WM_105115(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.25192470644e-13 * 1 + 0.124175068848 * v5 + 0.156685225765 * v7 + 0.397849789803 * v9 + 0.317885283043 * v21
def func_WM_105216(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.1617305186e-13 * 1 + 0.279227357374 * v5 + 0.248796454269 * v6 + 0.218098451903 * v11 + 0.261560007363 * v23
def func_WM_105923(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -6.27645383566e-14 * 1 + 0.223480385798 * v5 + 0.0451311603735 * v17 + 0.431175420057 * v21 + 0.316538841418 * v28
def func_WM_106016(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.27926523329e-15 * 1 + 0.181084562376 * v5 + 0.152105025267 * v17 + 0.24938374734 * v25 + 0.457905623576 * v28
def func_WM_106319(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -5.81749140866e-14 * 1 + 0.215527299319 * v1 + 0.212900351343 * v9 + 0.21291347072 * v15 + 0.37049845489 * v20
def func_WM_106521(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.41727157859e-13 * 1 + 0.114226512893 * v1 + 0.192187334305 * v4 + 0.31318843943 * v5 + 0.363916717055 * v20
def func_WM_107321(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 3.01662151599e-15 * 1 + 0.0327533933783 * v5 + 0.102611694443 * v8 + 0.312159909366 * v17 + 0.583149435747 * v22
def func_WM_107422(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -4.43435592154e-14 * 1 + 0.303966995058 * v1 + 0.29418209007 * v17 + 0.254613694956 * v23 + 0.129005588902 * v28
def func_WM_108121(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.01537739385e-13 * 1 + 0.217899051555 * v1 + 0.16942530353 * v4 + 0.384673911646 * v5 + 0.21938247518 * v21
def func_WM_108323(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.33551301852e-13 * 1 + 0.160373957101 * v3 + 0.195274161839 * v4 + 0.358923915238 * v9 + 0.276643043781 * v28
def func_WM_108525(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -7.25413376738e-14 * 1 + -0.0471340934574 * v2 + 0.282656129604 * v5 + 0.362848488851 * v21 + 0.405166237897 * v25
def func_WM_108828(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.91723243742e-13 * 1 + 0.262462735497 * v4 + 0.263498601199 * v5 + 0.294737577164 * v21 + 0.209913875142 * v27
def func_WM_109123(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.90178674874e-14 * 1 + 0.0299229127077 * v19 + 0.31918546524 * v21 + 0.332782978931 * v22 + 0.284006413867 * v28
def func_WM_109325(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.63523620189e-13 * 1 + 0.315373861386 * v4 + 0.0445943941692 * v5 + 0.0146092269668 * v17 + 0.555227648596 * v21
def func_WM_110411(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.59903423202e-13 * 1 + 0.233988473347 * v7 + 0.19469759449 * v20 + 0.39436967137 * v21 + 0.204207318917 * v22
def func_WM_111312(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 6.52879955209e-14 * 1 + 0.320112515619 * v9 + 0.0245076859625 * v16 + 0.342813742936 * v21 + 0.344048508974 * v22
def func_WM_111413(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 8.32517778041e-15 * 1 + -0.0541633086443 * v1 + -0.252627345016 * v6 + 0.312646272008 * v15 + 0.501340846913 * v22
def func_WM_111514(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.65335988169e-13 * 1 + 0.0521183413037 * v7 + 0.334429965567 * v20 + 0.140641074024 * v21 + 0.397098416512 * v22
def func_WM_111716(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.25557478975e-13 * 1 + 0.721355003996 * v0 + -0.407680373866 * v16 + 0.47647856997 * v22 + 0.392406516686 * v23
def func_WM_113215(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.8848311971e-13 * 1 + 0.157824827673 * v0 + 0.290159000166 * v3 + 0.037906982661 * v16 + 0.527451822887 * v21
def func_WM_113619(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.43682726664e-14 * 1 + 0.262397282721 * v1 + 0.400311850995 * v5 + 0.0752616570497 * v21 + 0.314887909515 * v22
def func_WM_113922(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.1119580645e-13 * 1 + 0.22094996765 * v1 + 0.294730923675 * v15 + 0.171911275287 * v20 + 0.280657566267 * v21
def func_WM_114419(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 2.09739116158e-13 * 1 + 0.126197036476 * v4 + 0.440262764531 * v9 + 0.289438111282 * v17 + 0.134744096913 * v28

funcs = [funcL_WM_100307,funcL_WM_100408,funcL_WM_101006,funcL_WM_101107,funcL_WM_101309,funcL_WM_101410,funcL_WM_101915,funcL_WM_102008,funcL_WM_102311,funcL_WM_102816,funcL_WM_103111,funcL_WM_103414,funcL_WM_103515,funcL_WM_103818,funcL_WM_104012,funcL_WM_104820,funcL_WM_105014,funcL_WM_105115,funcL_WM_105216,funcL_WM_105923,funcL_WM_106016,funcL_WM_106319,funcL_WM_106521,funcL_WM_107321,funcL_WM_107422,funcL_WM_108121,funcL_WM_108323,funcL_WM_108525,funcL_WM_108828,funcL_WM_109123,funcL_WM_109325,funcL_WM_110411,funcL_WM_111312,funcL_WM_111413,funcL_WM_111514,funcL_WM_111716,funcL_WM_113215,funcL_WM_113619,funcL_WM_113922,funcL_WM_114419,]

def getFuncs(): return funcs
