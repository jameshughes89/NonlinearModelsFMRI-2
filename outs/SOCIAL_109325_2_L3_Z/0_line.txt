 ( ( ( ( v22 - ( v26 + v19 ) ) - v17 ) * (sin( 12.16136060260255 )*sin( -3.8171571109372664 )) ) - ( ( ( ( 12.16136060260255 / ( v19 / -18.57258961681822 ) ) / ( ( ( ( v17 * v19 ) /tan( v21 )) *e( ( ( v26 + v19 ) * ( ( v22 - ( v26 + v19 ) ) - v17 ) ) )) * ( v22 * ( ( ( v17 * v19 ) /tan( v21 )) *e( ( ( v26 + v19 ) * ( ( v22 - ( v26 + v19 ) ) - v17 ) ) )) ) ) ) + ( ( v25 / -2.607925411123418 ) + ( ( v23 - ( v18 - v23 ) ) / ( -3.8171571109372664 - v21 ) ) ) ) - ( ( 12.16136060260255 / ( v19 / -18.57258961681822 ) ) / ( ( ( ( v17 * v19 ) /tan( v21 )) *e( ( ( v26 + v19 ) * ( ( v22 - ( v26 + v19 ) ) - v17 ) ) )) * ( v22 * ( ( ( v17 * v19 ) /tan( v21 )) *e( ( ( v26 + v19 ) * ( ( v22 - ( v26 + v19 ) ) - v17 ) ) )) ) ) ) ) ) 